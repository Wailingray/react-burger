{"version":3,"sources":["components/loader/loader.module.css","components/modal/modal.module.css","components/order-details/order-details.module.css","pages/feed/feed.module.css","components/order-modal/order-modal.module.css","components/modal-overlay/modal-overlay.module.css","components/constructor-ingredient/constructor-ingredient.module.css","pages/home/home.module.css","pages/ingredient-page/ingredient-page.module.css","components/ingredient-details/ingredient-details.module.css","pages/order-page/order-page.module.css","pages/user-order-page/user-order-page.module.css","components/burger-ingredients/burger-ingredients.module.css","components/app-header/app-header.module.css","pages/profile/profile.module.css","components/order-card/order-card.module.css","components/burger-constructor/burger-constructor.module.css","pages/login/login.module.css","pages/register/register.module.css","components/app-header/app-header.tsx","services/utils/utils.tsx","components/api/api.tsx","services/actions/ingredients.tsx","services/hooks/hooks.ts","components/ingredient/ingredient.tsx","images/loading.png","components/loader/loader.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done.svg","components/order-details/order-details.tsx","services/actions/user.tsx","services/actions/order.tsx","components/constructor-ingredient/constructor-ingredient.tsx","components/burger-constructor/burger-constructor.tsx","pages/home/home.tsx","services/validations/user-validation.ts","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","services/actions/wsUserActions.tsx","components/profile-nav/profile-nav.tsx","pages/profile/profile.tsx","components/HOC/protected-route.tsx","components/order-card/order-card.tsx","pages/orders/orders.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient-page/ingredient-page.tsx","services/actions/wsVanillaActions.tsx","pages/feed/feed.tsx","components/order-modal/order-modal.tsx","pages/order-page/order-page.tsx","pages/user-order-page/user-order-page.tsx","components/app/app.tsx","services/socketMiddleware/socket-middleware.ts","services/reducers/ingredients.tsx","services/reducers/order.tsx","services/reducers/user.tsx","services/reducers/wsVanillaReducer.tsx","services/reducers/wsUserReducer.tsx","services/reducers/index.tsx","services/store.ts","index.tsx","components/ingredient/ingredient.module.css","pages/reset-password/reset-password.module.css","pages/orders/orders.module.css","pages/forgot-password/forgot-password.module.css","components/profile-nav/profile-nav.module.css"],"names":["module","exports","AppHeader","className","styles","header","to","logo","exact","navigation","item","activeClassName","activeLink","link","type","Date","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","setTokens","res","accessToken","refreshToken","indexOf","split","parseTime","date","diff","today","createdOn","setHours","result","getDiff","time","toLocaleString","hour","minute","timeZoneName","formatTime","baseUrl","apiConfig","logoutUrl","updateTokenUrl","getUserUrl","signInUrl","registerUrl","passwordResetUrlStep2","passwordResetUrlStep1","ingredientsUrl","ordersUrl","headers","getResponse","ok","json","Promise","reject","status","getIngredients","a","fetch","submitOrder","userOrder","method","authorization","body","JSON","stringify","ingredients","submitUserEmail","email","submitResetPwd","RequestBody","registerRequest","signInRequest","getUserRequest","Authorization","updateTokenRequest","token","logoutRequest","changeCredentialsRequest","newCredentials","GET_ITEMS_REQUEST","GET_ITEMS_SUCCESS","GET_ITEMS_FAILED","ADD_TO_CONSTRUCTOR","REMOVE_FROM_CONSTRUCTOR","REPLACE_BUN","MOVE_ITEM","RECALCULATE_PRICE","SEND_TO_MODAL","RESET_CURRENT_INGREDIENT","RESET_CONSTRUCTOR","recalculatePrice","resetCurrentIngredient","getItems","dispatch","then","items","data","catch","err","error","useAppDispatch","useDispatch","useAppSelector","useSelector","useAppParams","useParams","Ingredient","useState","counter","setCounter","location","useLocation","constructorItems","state","useEffect","filter","el","_id","id","length","useDrag","ingType","collect","monitor","opacity","isDragging","ingRef","cardContainer","pathname","from","background","ref","card","style","image","src","alt","count","size","price","description","Loader","loaderContainer","loader","loading","BurgerIngredients","current","setCurrent","bunRef","useRef","sauceRef","mainRef","useHistory","ingredientItems","ingredientItemsRequest","ingredientItemsFailed","ingredientItemsError","handleScroll","useCallback","e","mainBlockTopCoordinate","target","getBoundingClientRect","top","getTopCoordinate","getDistance","topCoordinate","Math","abs","sauceHeaderCoordinates","mainHeaderCoordinates","bunHeaderCoordinates","closestBlockCoord","min","renderIngredient","onClick","content","useMemo","message","options","onScroll","layer","component","list","map","section","title","display","active","scrollIntoView","behavior","ModalOverlay","onClose","overlay","Modal","children","closeModalOnEsc","key","addEventListener","removeEventListener","createPortal","modal","button","getElementById","OrderDetails","order","submitOrderSuccess","submitOrderError","digits","number","doneImage","SUBMIT_SERVER_REQUEST","SUBMIT_USER_EMAIL_SUCCESS","SUBMIT_SERVER_FAILED","SUBMIT_PWD_RESET_SUCCESS","SUBMIT_SIGN_IN_SUCCESS","SUBMIT_GET_USER_SUCCESS","SUBMIT_UPDATE_TOKENS_SUCCESS","SUBMIT_LOGOUT_SUCCESS","SUBMIT_CHANGE_CREDENTIALS_SUCCESS","NO_TOKENS","SET_USER","SUBMIT_CAN_RESET_PWD","SUBMIT_CANNOT_RESET_PWD","REMOVE_SERVER_ERROR","submitServerRequest","submitServerFailed","removeServerError","setUser","user","setNoTokens","submitUpdateTokensSuccess","dispatchUserEmail","reply","dispatchPwdReset","request","dispatchSignIn","dispatchGetUserRequest","dispatchGetUser","dispatchUserRequestWithUpdate","dispatchLogout","dispatchChangeCredentialsRequest","dispatchChangeCredentials","dispatchChangeCredentialsRequestWithUpdate","SUBMIT_ORDER_REQUEST","SUBMIT_ORDER_SUCCESS","SUBMIT_ORDER_FAILED","ORDER_RESET","SEND_ORDER_TO_MODAL","RESET_ORDER_POPUP","sendOrderToModal","dispatchOrderUsual","dispatchOrder","dispatchOrderWithUpdate","ConstructorIngredient","index","isBun","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverActualY","getClientOffset","y","moveItem","dropRef","dragRef","dragDropRef","ingredient","isLocked","text","thumbnail","handleClose","removeFromConstructor","BurgerConstructor","history","totalPrice","submitOrderFailed","submitOrderRequest","isModalOpened","setIsModalOpened","push","isHover","isOver","drop","addItem","dropTarget","sectionClassName","onHover","bun","find","noBunsArray","addToConstructor","buttonText","ingredientList","innerList","confirmationZone","disabled","HomePage","DndProvider","backend","HTML5Backend","main","emailSchema","yup","required","nameSchema","passwordSchema","codeSchema","validateInput","schema","setterFunction","stateValue","isValid","LoginPage","setEmail","emailError","setEmailError","pwd","setPwd","pwdError","setPwdError","showPwd","setShowPwd","loaded","setIsLoaded","submitGetUserSuccess","foundNoTokens","submitServerError","formContainer","form","onSubmit","preventDefault","password","inputContainer","placeholder","errorText","onChange","changeEmailField","onBlur","icon","onIconClick","changePasswordField","linkContainer","RegisterPage","setName","nameError","setNameError","submitLogoutSuccess","submitChangeCredentialsSuccess","changeNameField","ForgotPasswordPage","submitUserEmailSuccess","handleSubmit","ResetPasswordPage","code","setCode","codeError","setCodeError","canResetPwd","submitPwdResetSuccess","setTimeout","changeCodeField","WS_PRIVATE_CONNECTION_START","WS_PRIVATE_CONNECTION_SUCCESS","WS_PRIVATE_CONNECTION_ERROR","WS_PRIVATE_CONNECTION_CLOSED","WS_GET_PRIVATE_MESSAGE","WS_SEND_PRIVATE_MESSAGE","wsPrivateConnectionStart","wsPrivateConnectionClosed","userActionsBook","startConnectionConst","sendMessageConst","wsStartConnection","wsSendMessage","payload","wsOnOpen","wsOnClose","wsOnError","wsGetMessage","ProfileNavBar","handleLogout","ProfilePage","setJustUpdated","justUpdated","profilePageContainer","navContainer","navLinkList","comment","buttonsContainer","resetInput","ProtectedRoute","rest","setUserLoaded","init","render","OrderCard","inFeedPage","objectsArray","ingID","forEach","statusMessage","reduce","sum","color","container","metadata","orderData","idx","arr","listItem","zIndex","picture","image_mobile","priceContainer","Orders","userFeed","userOrders","total","totalToday","wsConnected","hasError","orderTape","reverse","createdAt","IngredientDetails","currentIngredient","storeIngredient","modalIngredient","image_large","nutrition","nutrient","calories","proteins","fat","carbohydrates","pageContainer","pageTitle","IngredientPage","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","wsConnectionStart","wsConnectionClosed","vanillaActionsBook","FeedPage","feed","orders","renderOrderNumbers","page","sections","orderTable","orderInfoContainer","orderInfo","orderTitle","orderList","activeList","doneContainer","OrderModal","modalOrder","makeObjectArray","serverOrder","makeUnique","array","i","findIndex","ingredientContainer","tagContainer","pictureContainer","orderFromModal","orderFromStore","ingredientsList","footer","OrderPage","UserOrderPage","App","action","closeModal","goBack","path","socketMiddleware","wsUrl","actionBook","connectionType","store","socket","connected","next","WebSocket","onopen","onerror","onmessage","event","parsedData","parse","restParsedData","success","onclose","console","log","send","initialState","currentTab","submitSignInSuccess","rootReducer","combineReducers","concat","slice","enhancer","window","compose","applyMiddleware","thunk","createStore","ReactDOM","StrictMode","basename"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,OAAS,yB,oBCA7ED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,wB,oBCAxDD,EAAOC,QAAU,CAAC,OAAS,gC,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,SAAW,uBAAuB,WAAa,yBAAyB,mBAAqB,iCAAiC,UAAY,wBAAwB,UAAY,wBAAwB,WAAa,yBAAyB,cAAgB,4BAA4B,OAAS,uB,mBCAjXD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,OAAS,4BAA4B,gBAAkB,qCAAqC,oBAAsB,yCAAyC,iBAAmB,sCAAsC,QAAU,6BAA6B,eAAiB,oCAAoC,OAAS,4BAA4B,aAAe,oC,oBCAjaD,EAAOC,QAAU,CAAC,QAAU,iC,oBCA5BD,EAAOC,QAAU,CAAC,WAAa,6C,oBCA/BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,oBCAtDD,EAAOC,QAAU,CAAC,UAAY,qC,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,UAAY,sCAAsC,SAAW,qCAAqC,cAAgB,0CAA0C,UAAY,wC,oBCApOD,EAAOC,QAAU,CAAC,UAAY,gC,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,qC,yCCA9BD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,QAAU,oCAAoC,MAAQ,kCAAkC,MAAQ,kCAAkC,UAAY,sCAAsC,KAAO,iCAAiC,KAAO,iCAAiC,KAAO,mC,mBCA3UD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,WAAa,iC,mBCA/MD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,qBAAuB,sCAAsC,aAAe,8BAA8B,cAAgB,+BAA+B,YAAc,6BAA6B,eAAiB,gCAAgC,cAAgB,+BAA+B,QAAU,yBAAyB,iBAAmB,kCAAkC,OAAS,0B,mBCApbD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,UAAY,8BAA8B,SAAW,6BAA6B,YAAc,gCAAgC,UAAY,8BAA8B,SAAW,6BAA6B,QAAU,4BAA4B,QAAU,4BAA4B,eAAiB,qC,mBCAnXD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,UAAY,sCAAsC,eAAiB,2CAA2C,WAAa,uCAAuC,iBAAmB,6CAA6C,QAAU,sC,mBCA5SD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,cAAgB,6BAA6B,eAAiB,8BAA8B,cAAgB,6BAA6B,KAAO,sB,mBCA7LD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,cAAgB,gCAAgC,eAAiB,iCAAiC,cAAgB,gCAAgC,KAAO,yB,4HC2C1LC,EApCO,WACpB,OACE,yBAAQC,UAAWC,IAAOC,OAA1B,UACE,cAAC,IAAD,CAASC,GAAI,IAAKH,UAAWC,IAAOG,KAAMC,OAAO,EAAjD,SACE,cAAC,OAAD,MAEF,8BACE,qBAAIL,UAAWC,IAAOK,WAAtB,UACE,oBAAIN,UAAWC,IAAOM,KAAtB,SACE,eAAC,IAAD,CAASJ,GAAI,IAAKK,gBAAe,UAAKP,IAAOQ,YAAcJ,OAAO,EAAML,UAAS,UAAKC,IAAOS,KAAZ,yBAAjF,UACE,cAAC,aAAD,CAAYC,KAAK,YACjB,mBAAGX,UAAU,mCAAb,qFAGJ,oBAAIA,UAAWC,IAAOM,KAAtB,SACE,eAAC,IAAD,CAASJ,GAAI,QAASK,gBAAe,UAAKP,IAAOQ,YAAcJ,OAAO,EAAML,UAAS,UAAKC,IAAOS,MAAjG,UACE,cAAC,WAAD,CAAUC,KAAK,YACf,mBAAGX,UAAU,mCAAb,4FAKJ,oBAAIA,UAAWC,IAAOM,KAAtB,SACE,eAAC,IAAD,CAASJ,GAAI,WAAaK,gBAAe,UAAKP,IAAOQ,YAAcT,UAAS,UAAKC,IAAOS,MAAxF,UACE,cAAC,cAAD,CAAaC,KAAK,YAClB,mBAAGX,UAAU,mCAAb,2G,uCCgGD,IAAIY,KAAK,4BACT,IAAIA,KAAK,4BAGf,SAASC,EAAUC,GACxB,IAAMC,EAAUC,SAASC,OAAOC,MAC9B,IAAIC,OACF,WACEL,EAAKM,QAAQ,+BAAgC,QAC7C,aAGN,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAG7C,SAASC,EAAUT,EAAcU,EAAeC,GAErD,IAAIC,GADJD,EAAQA,GAAS,IACDE,QAChB,GAAkB,iBAAPD,GAAmBA,EAAK,CACjC,IAAME,EAAI,IAAIhB,KACdgB,EAAEC,QAAQD,EAAEE,UAAkB,IAANJ,GACxBA,EAAMD,EAAME,QAAUC,EAEpBF,GAAOA,EAAIK,cACbN,EAAME,QAAUD,EAAIK,eAGtB,IAAIC,EAAgBlB,EAAO,KAD3BU,EAAQS,mBAAmBT,IAE3B,IAAK,IAAMU,KAAYT,EAAO,CAC5BO,GAAiB,KAAOE,EACxB,IAAMC,EAAYV,EAAMS,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BnB,SAASC,OAASe,EAGb,SAASI,EAAatB,GAC3BS,EAAUT,EAAM,GAAI,CAAEa,SAAU,IAG3B,IAAMU,EAAY,SAACC,GACxB,IAAIC,EAAaC,EACyB,IAAtCF,EAAIC,YAAYE,QAAQ,YAC1BF,EAAcD,EAAIC,YAAYG,MAAM,WAAW,IAEjDF,EAAeF,EAAIE,aACfD,GAAeC,IACjBjB,EAAU,cAAegB,EAAa,CAAEZ,QAAS,OACjDJ,EAAU,eAAgBiB,KA2CvB,SAASG,EAAUC,GACxB,IAAIC,EAxBU,SAACD,GACf,IAAIE,EAAQ,IAAIlC,KACZmC,EAAY,IAAInC,KAAKgC,GAkBzB,OAhBAG,EAAUC,SAAS,EAAG,EAAG,EAAG,GAC5BF,EAAME,SAAS,EAAG,EAAG,EAAG,GAIX,SAACH,GACZ,OAAa,IAATA,EACK,6CACW,IAATA,EACF,iCAED,GAAN,OAAUA,EADDA,EAAO,GAAKA,EAAO,EAC5B,qDAEA,4DAGGI,GAbcH,GAASC,GAJhB,OAqBHG,CAAQN,GACfO,EAnCa,SAACP,GAOlB,OANgB,IAAIhC,KAAKgC,GAMVQ,eAAe,KALJ,CACxBC,KAAM,UACNC,OAAQ,UACRC,aAAc,UA8BLC,CAAWZ,GAEtB,MAAM,GAAN,OAAUC,EAAV,aAAmBM,GAId,IC7NDM,EAAO,wCAEAC,EAAY,CACvBC,UAAU,GAAD,OAAKF,EAAL,gBACTG,eAAe,GAAD,OAAKH,EAAL,eACdI,WAAW,GAAD,OAAKJ,EAAL,cACVK,UAAU,GAAD,OAAKL,EAAL,eACTM,YAAY,GAAD,OAAKN,EAAL,kBACXO,sBAAsB,GAAD,OAAKP,EAAL,yBACrBQ,sBAAsB,GAAD,OAAKR,EAAL,mBACrBS,eAAe,GAAD,OAAKT,EAAL,gBACdU,UAAU,GAAD,OAAKV,EAAL,WACTW,QAAS,CACP,eAAgB,qBAGdC,EAAc,SAAC/B,GACnB,OAAIA,EAAIgC,GACChC,EAAIiC,OAENC,QAAQC,OAAOnC,EAAIoC,SAGfC,EAAc,uCAAG,4BAAAC,EAAA,sEAGVC,MAAMnB,EAAUQ,eAAgB,CAChDE,QAASV,EAAUU,UAJO,cAGtB9B,EAHsB,yBAMrB+B,EAAY/B,IANS,2CAAH,qDASdwC,EAAW,uCAAG,WAAOC,EAAqBxC,GAA5B,eAAAqC,EAAA,sEACPC,MAAMnB,EAAUS,UAAW,CAC3Ca,OAAQ,OACRZ,QAAS,CACP,eAAgB,mBAChBa,cAAe,UAAY1C,GAE7B2C,KAAMC,KAAKC,UAAU,CACnBC,YAAaN,MARQ,cACnBzC,EADmB,yBAWlB+B,EAAY/B,IAXM,2CAAH,wDAcXgD,EAAe,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACXC,MAAMnB,EAAUO,sBAAuB,CACvDe,OAAQ,OACRZ,QAASV,EAAUU,QACnBc,KAAMC,KAAKC,UAAU,CACnBG,YALyB,cACvBjD,EADuB,yBAQtB+B,EAAY/B,IARU,2CAAH,sDAWfkD,EAAc,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACVC,MAAMnB,EAAUM,sBAAuB,CACvDgB,OAAQ,OACRZ,QAASV,EAAUU,QACnBc,KAAMC,KAAKC,UAAUK,KAJK,cACtBnD,EADsB,yBAMrB+B,EAAY/B,IANS,2CAAH,sDASdoD,EAAe,uCAAG,WAAOD,GAAP,eAAAb,EAAA,sEACXC,MAAMnB,EAAUK,YAAa,CAC7CiB,OAAQ,OACRZ,QAASV,EAAUU,QACnBc,KAAMC,KAAKC,UAAUK,KAJM,cACvBnD,EADuB,yBAMtB+B,EAAY/B,IANU,2CAAH,sDASfqD,EAAa,uCAAG,WAAOF,GAAP,eAAAb,EAAA,sEACTC,MAAMnB,EAAUI,UAAW,CAC3CkB,OAAQ,OACRZ,QAASV,EAAUU,QACnBc,KAAMC,KAAKC,UAAUK,KAJI,cACrBnD,EADqB,yBAMpB+B,EAAY/B,IANQ,2CAAH,sDASbsD,EAAc,uCAAG,WAAOrD,GAAP,eAAAqC,EAAA,sEACVC,MAAMnB,EAAUG,WAAY,CAC5CmB,OAAQ,MACRZ,QAAS,CACP,eAAgB,mBAChByB,cAAe,UAAYtD,KALH,cACtBD,EADsB,yBAQrB+B,EAAY/B,IARS,2CAAH,sDAuBdwD,EAAkB,uCAAG,WAAOtD,GAAP,eAAAoC,EAAA,sEACdC,MAAMnB,EAAUE,eAAgB,CAChDoB,OAAQ,OACRZ,QAASV,EAAUU,QACnBc,KAAMC,KAAKC,UAAU,CAAEW,MAAOvD,MAJA,cAC1BF,EAD0B,yBAMzB+B,EAAY/B,IANa,2CAAH,sDASlB0D,EAAa,uCAAG,WAAOzD,GAAP,eAAAqC,EAAA,sEACTC,MAAMnB,EAAUC,UAAW,CAC3CqB,OAAQ,OACRZ,QAASV,EAAUU,QACnBc,KAAMC,KAAKC,UAAU,CAAEW,MAAOxD,MAJL,cACrBD,EADqB,yBAMpB+B,EAAY/B,IANQ,2CAAH,sDASb2D,EAAwB,uCAAG,WACtC1D,EACA2D,GAFsC,eAAAtB,EAAA,sEAIpBC,MAAMnB,EAAUG,WAAY,CAC5CmB,OAAQ,QACRZ,QAAS,CACP,eAAgB,mBAChByB,cAAe,UAAYtD,GAE7B2C,KAAMC,KAAKC,UAAUc,KAVe,cAIhC5D,EAJgC,yBAY/B+B,EAAY/B,IAZmB,2CAAH,wDClIxB6D,EAAyC,oBACzCC,EAAyC,oBACzCC,EAAuC,mBACvCC,EAA2C,qBAC3CC,EACX,0BACWC,EAA6B,cAC7BC,EAAyB,YACzBC,EAAyC,oBACzCC,EAAiC,gBACjCC,EACX,2BACWC,EAAyC,oBAsFzCC,EAAmB,iBAA0B,CACxDnG,KAAM+F,IAaKK,EAAyB,iBAAgC,CACpEpG,KAAMiG,IAoBKI,EAAqB,kBAAM,SAACC,GACvCA,EAvDsD,CACtDtG,KAAMwF,IAuDNxB,IACGuC,MAAK,SAAC5E,GArDoB,IAAC6E,EAsD1BF,GAtD0BE,EAsDD7E,EAAI8E,KAtDyC,CAC1EzG,KAAMyF,EACNe,cAsDGE,OAAM,SAACC,GACNL,EApD6D,CACjEtG,KAAM0F,EACNkB,MAkD4BD,S,qDC3IjBE,GAAiB,kBAAMC,gBACvBC,GAAkDC,KAClDC,GAAe,kBAAMC,eCmDnBC,GAjDwB,SAACrG,GACtC,MAA8BsG,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cACTC,EAAqBV,IAAe,SAACW,GAAD,OAAWA,EAAMhD,eAArD+C,iBAERE,qBAAU,WACRL,EAAWG,EAAiBG,QAAO,SAACC,GAAD,OAAQA,EAAGC,MAAQhH,EAAMiH,MAAIC,UAC/D,CAACP,EAAkB3G,IAEtB,MAA8BmH,aAAQ,CACpCjI,KAAM,OACNJ,KAAM,CACJmI,GAAIjH,EAAMiH,GACVG,QAASpH,EAAMoH,SAEjBC,QAAS,SAACC,GAAD,MAAc,CACrBC,QAASD,EAAQE,aAAe,GAAM,MAP1C,mBAASD,EAAT,KAASA,QAAWE,EAApB,KAWA,OACE,cAAC,IAAD,CACElJ,UAAWC,IAAOkJ,cAClBhJ,GAAI,CACFiJ,SAAS,gBAAD,OAAkB3H,EAAMiH,IAChCL,MAAO,CAAEgB,KAAMnB,EAASkB,SAAUE,WAAYpB,IAJlD,SAOE,sBAAKqB,IAAKL,EAAQlJ,UAAWC,IAAOuJ,KAAMC,MAAO,CAAET,WAAnD,UACE,qBACEhJ,UAAS,UAAKC,IAAOyJ,MAAZ,cACTC,IAAKlI,EAAMiI,MACXE,IAAKnI,EAAMX,OAEZkH,EAAU,GAAK,cAAC,UAAD,CAAS6B,MAAO7B,EAAS8B,KAAK,YAC9C,sBAAK9J,UAAS,UAAKC,IAAO8J,MAAZ,cAAd,UACE,mBAAG/J,UAAS,wCAAmCC,IAAOuB,OAAtD,SACGC,EAAMsI,QAET,cAAC,eAAD,CAAcpJ,KAAK,eAErB,mBAAGX,UAAS,sCAAiCC,IAAO+J,aAApD,SACGvI,EAAMX,a,qBCnDF,OAA0B,oCCI5BmJ,GAAmB,WAC9B,OACE,qBAAKjK,UAAWC,KAAOiK,gBAAvB,SACE,qBAAKlK,UAAWC,KAAOkK,OAAQR,IAAKS,GAASR,IAAI,sBCwMxCS,GAzLqB,WAClC,MAA0CtC,oBAAkB,GAA5D,mBACA,GADA,UAC8BA,mBAAiB,QAA/C,mBAAOuC,EAAP,KAAgBC,EAAhB,KAEMC,EAASC,iBAAkC,MAC3CC,EAAWD,iBAAkC,MAC7CE,EAAUF,iBAAkC,MAE5CxD,EAAWO,KACDoD,cAEhBtC,qBAAU,WACRrB,EAASD,OACR,CAACC,IAEJ,MAKIS,IAAe,SAACW,GAAD,OAAWA,EAAMhD,eAJlCwF,EADF,EACEA,gBACAC,EAFF,EAEEA,uBACAC,EAHF,EAGEA,sBACAC,EAJF,EAIEA,qBAaIC,EAAeC,uBAAY,SAACC,GAChC,IAAMC,EAAyBD,EAAEE,OAAOC,wBAAwBC,IAE1DC,EAAmB,SACvBjC,GACY,IAAD,EACX,OAAY,OAARA,EAAc,OAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAKe,eAAZ,aAAO,EAAcgB,wBAAwBC,IACnD,GAGRE,EAAc,SAACC,GACnB,OAAOC,KAAKC,IAAIF,EAAgBN,IAG5BS,EAAyBL,EAAiBd,GAC1CoB,EAAwBN,EAAiBb,GACzCoB,EAAuBP,EAAiBhB,GAExCwB,EAAoBL,KAAKM,IAC7BR,EAAYI,GACZJ,EAAYK,GACZL,EAAYM,IAGVC,IAAsBP,EAAYI,GACpCtB,EAAW,OACFyB,IAAsBP,EAAYK,GAC3CvB,EAAW,SACNA,EAAW,SACjB,IAEG2B,EAAmB,SAAC1D,GACxB,OACE,oBAEExI,UAAWC,IAAOM,KAClB4L,QAAS,kBAAMlF,GLqBKyB,EKrBgBF,EAAGC,ILqBW,CACxD9H,KAAMgG,EACN+B,QAFyB,IAACA,GKxBtB,SAKE,cAAC,GAAD,CACEG,QAASL,EAAG7H,KACZ+H,GAAIF,EAAGC,IACPiB,MAAOlB,EAAGkB,MACV5I,KAAM0H,EAAG1H,KACTiJ,MAAOvB,EAAGuB,SATPvB,EAAGC,MAeR2D,EAAUC,mBAAQ,WACtB,OAAIvB,EAA+B,cAAC,GAAD,IAC1BC,EAEL,oBAAG/K,UAAS,UAAKC,IAAOqM,QAAZ,oCAAZ,mKACiCtB,KAKjC,sBAAKhL,UAAWC,IAAOsM,QAASC,SAAUvB,EAA1C,UACE,sBAAKjL,UAAWC,IAAOwM,MAAvB,UACE,oBACElD,IAAKiB,EACLxK,UAAS,qCAAgCC,IAAOyM,UAAvC,eAFX,4CAMA,oBAAI1M,UAAS,UAAKC,IAAO0M,KAAZ,cAAb,SACG9B,EACEtC,QAAO,SAACC,GAAD,MAAoB,QAAZA,EAAG7H,QAClBiM,IAAIV,QAGX,sBAAKlM,UAAWC,IAAOwM,MAAvB,UACE,oBACElD,IAAKmB,EACL1K,UAAS,qCAAgCC,IAAOyM,UAAvC,eAFX,4CAMA,oBAAI1M,UAAS,UAAKC,IAAO0M,KAAZ,cAAb,SACG9B,EACEtC,QAAO,SAACC,GAAD,MAAoB,UAAZA,EAAG7H,QAClBiM,IAAIV,QAGX,sBAAKlM,UAAWC,IAAOwM,MAAvB,UACE,oBACElD,IAAKoB,EACL3K,UAAS,qCAAgCC,IAAOyM,UAAvC,eAFX,wDAMA,oBAAI1M,UAAS,UAAKC,IAAO0M,KAAZ,cAAb,SACG9B,EACEtC,QAAO,SAACC,GAAD,MAAoB,SAAZA,EAAG7H,QAClBiM,IAAIV,aAKhB,CACDpB,EACAD,EACAG,EACAD,EACAE,IAGF,OACE,mCACE,0BAASjL,UAAWC,IAAO4M,QAA3B,UACE,oBAAI7M,UAAS,oCAA+BC,IAAO6M,MAAtC,eAAb,mGAGA,sBAAKrD,MAAO,CAAEsD,QAAS,QAAvB,UACE,cAAC,MAAD,CACEvL,MAAM,MACNwL,OAAoB,QAAZ1C,EACR6B,QAAS,SAAC3K,GAAW,IAAD,EAClB+I,EAAW/I,GACX,UAAAgJ,EAAOF,eAAP,SAAgB2C,eAAe,CAAEC,SAAU,YAL/C,4CAUA,cAAC,MAAD,CACE1L,MAAM,MACNwL,OAAoB,QAAZ1C,EACR6B,QAAS,SAAC3K,GAAW,IAAD,EAClB+I,EAAW/I,GACX,UAAAkJ,EAASJ,eAAT,SAAkB2C,eAAe,CAAEC,SAAU,YALjD,4CAUA,cAAC,MAAD,CACE1L,MAAM,QACNwL,OAAoB,UAAZ1C,EACR6B,QAAS,SAAC3K,GAAW,IAAD,EAClB+I,EAAW/I,GACX,UAAAmJ,EAAQL,eAAR,SAAiB2C,eAAe,CAAEC,SAAU,YALhD,2DAWDd,Q,yCC9LMe,GAP4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAI5C,OAAO,qBAAKjB,QAHc,WACxBiB,KAEsCpN,UAAWC,KAAOoN,W,qBC0B7CC,GA3BqB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUH,EAAc,EAAdA,QAa/C,OAZA9E,qBAAU,WACR,IAAMkF,EAAkB,SAACrC,GACT,WAAVA,EAAEsC,KAAkBL,KAK1B,OAFApM,SAAS0M,iBAAiB,UAAWF,GAE9B,WACLxM,SAAS2M,oBAAoB,UAAWH,MAEzC,CAACJ,IAEGQ,uBACL,qCACE,cAAC,GAAD,CAAcR,QAASA,IACvB,sBAAKpN,UAAWC,KAAO4N,MAAvB,UACE,wBAAQ1B,QAASiB,EAASpN,UAAS,UAAKC,KAAO6N,OAAZ,gBAAnC,SACE,cAAC,YAAD,CAAWnN,KAAK,cAEjB4M,QAGLvM,SAAS+M,eAAe,WC9Bb,OAA0B,iC,qBC6C1BC,GAxCgB,WAC7B,MAAwDtG,IACtD,SAACW,GAAD,OAAWA,EAAM4F,SADXA,EAAR,EAAQA,MAAOC,EAAf,EAAeA,mBAAoBC,EAAnC,EAAmCA,iBAInC,OAAID,GAAgC,OAAVD,EAEtB,qCACE,sBAAMjO,UAAS,UAAKC,KAAOmO,OAAZ,sCAAf,SACGH,EAAMA,MAAMI,SAEf,mBAAGrO,UAAU,kCAAb,iIACA,qBAAKA,UAAU,cAAc2J,IAAK2E,GAAW1E,IAAI,UACjD,mBAAG5J,UAAU,kCAAb,qJAGA,mBAAGA,UAAU,uDAAb,+PAOF,qCACE,sBAAMA,UAAS,UAAKC,KAAOmO,OAAZ,sCAAf,kBAGA,mBAAGpO,UAAU,uCAAb,6GAGA,oBAAGA,UAAU,kCAAb,6JACgCmO,KAEhC,mBAAGnO,UAAU,uDAAb,6N,UCZKuO,GACX,wBACWC,GACX,4BACWC,GACX,uBACWC,GACX,2BAGWC,GACX,yBACWC,GACX,0BACWC,GACX,+BACWC,GACX,wBACWC,GACX,oCACWC,GAAyB,YACzBC,GAAuB,WACvBC,GACX,uBACWC,GACX,0BACWC,GAA6C,sBA4F7CC,GAAsB,iBAA6B,CAC9D1O,KAAM4N,KAUKe,GAAqB,SAAC/H,GAAD,MAAyC,CACzE5G,KAAM8N,GACNlH,UAGWgI,GAAoB,iBAA2B,CAC1D5O,KAAMyO,KAsCKI,GAAU,SAACC,GAAD,MAA4B,CACjD9O,KAAMsO,GACNQ,SAGWC,GAAc,iBAAkB,CAC3C/O,KAAMqO,KAGKW,GAA4B,iBAAmC,CAC1EhP,KAAMkO,KAGKe,GACX,SAACrK,GAAD,OAAmB,SAAC0B,GAClBA,EAASoI,MACT/J,EAAgBC,GACb2B,MAAK,SAAC5E,GACL2E,EAnEuB,CAC7BtG,KAAM6N,GACNqB,MAiEsCvN,OAEjC+E,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,SAIvBwI,GACX,SAACC,GAAD,OAA4B,SAAC9I,GAC3BA,EAASoI,MACT7J,EAAeuK,GACZ7I,MAAK,SAAC5E,GACL2E,EA/DsB,CAC5BtG,KAAM+N,GACNmB,MA6DqCvN,OAEhC+E,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,SA0BvB0I,GACX,SAACD,GAAD,OAA0B,SAAC9I,GACzBA,EAASoI,MACT1J,EAAcoK,GACX7I,MAAK,SAAC5E,GACL2E,EA1FoB,CAC1BtG,KAAMgO,GACNkB,MAwFmCvN,IAC7BD,EAAUC,GACV2E,EAASuI,GAAQlN,EAAImN,UAEtBpI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,SAIvB2I,GAAyB,SACpC1N,EACA0E,GAEAA,EAASoI,MACTzJ,EAAerD,GACZ2E,MAAK,SAAC5E,GACL2E,EAxF4D,CAChEtG,KAAMiO,KAwFF3H,EAASuI,GAAQlN,EAAImN,UAEtBpI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,QAuBrB4I,GAA4B,kBAAM,SAACjJ,GAC9CA,EAASoI,MACT,IAAI7M,EAAe3B,EAAU,gBACzB0B,EAAc1B,EAAU,eACxB0B,EACF0N,GAAuB1N,EAAa0E,GAC3BzE,EAzBgC,SAC3CA,EACAyE,GAEAA,EAASoI,MACTvJ,EAAmBtD,GAChB0E,MAAK,SAAC5E,GACL2E,EAAS0I,MACTtN,EAAUC,GACV,IAAIC,EAAc1B,EAAU,eACxB0B,GACF0N,GAAuB1N,EAAa0E,MAGvCI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,OAW9B6I,CAA8B3N,EAAcyE,GACzCA,EAASyI,QAGHU,GAA2B,kBAAM,SAACnJ,GAC7CA,EAASoI,MACT,IAAI7M,EAAe3B,EAAU,gBACzB2B,GACFwD,EAAcxD,GACX0E,MAAK,WACJD,EAhIwD,CAC9DtG,KAAMmO,KAgIA1M,EAAa,eACbA,EAAa,mBAEdiF,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,SAKvB+I,GAAmC,SAC9C9N,EACAwN,EACA9I,GAEAA,EAASoI,MACL9M,GACF0D,EAAyB1D,EAAawN,GACnC7I,MAAK,SAAC5E,GACL2E,EAnKkC,CACtCtG,KAAMoO,KAmKF9H,EAASuI,GAAQlN,EAAImN,UAEtBpI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,QAyBvBgJ,GACX,SAACP,GAAD,OAA4B,SAAC9I,GAC3BA,EAASoI,MACT,IAAI7M,EAAe3B,EAAU,gBACzB0B,EAAc1B,EAAU,eACxB0B,EACF8N,GAAiC9N,EAAawN,EAAS9I,GAC9CzE,EA3B2C,SACxDA,EACAuN,EACA9I,GAEAA,EAASoI,MACTvJ,EAAmBtD,GAChB0E,MAAK,SAAC5E,GACL2E,EAAS0I,MACTtN,EAAUC,GACV,IAAIC,EAAc1B,EAAU,eACxB0B,GACF8N,GAAiC9N,EAAawN,EAAS9I,MAG1DI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,OAY5BiJ,CACE/N,EACAuN,EACA9I,GAECA,EAASyI,QC/WLc,GACX,uBACWC,GACX,uBACWC,GAA6C,sBAC7CC,GAA6B,cAC7BC,GAA6C,sBAC7CC,GAAyC,oBAqCzCC,GAAmB,SAC9B7C,GAD8B,MAEP,CACvBtN,KAAMiQ,GACN3C,UAyBW8C,GAAqB,SAChChM,EACAxC,EACA0E,GAEAA,EA3B4D,CAC5DtG,KAAM6P,KA2BN1L,EAAYC,EAAWxC,GACpB2E,MAAK,SAAC5E,GACL2E,EA1BqE,CACzEtG,KAAM8P,GACNxC,MAwBgC3L,IAC5B2E,EXkCoD,CACxDtG,KAAMkG,OWjCHQ,OAAM,SAACC,GACNL,EAzBmE,CACvEtG,KAAM+P,GACNnJ,MAuB+BD,QAwBpB0J,GACX,SAACjM,GAAD,OAAyB,SAACkC,GACxBA,EAASoI,MACT,IAAI7M,EAAe3B,EAAU,gBACzB0B,EAAc1B,EAAU,eACxB0B,EACFwO,GAAmBhM,EAAWxC,EAAa0E,GAClCzE,EA3BwB,SACrCuC,EACAvC,EACAyE,GAEAA,EAASoI,MACTvJ,EAAmBtD,GAChB0E,MAAK,SAAC5E,GACL2E,EAAS0I,MACTtN,EAAUC,GACV,IAAIC,EAAc1B,EAAU,eACxB0B,GACFwO,GAAmBhM,EAAWxC,EAAa0E,MAG9CI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,OAY5B2J,CAAwBlM,EAAWvC,EAAcyE,GAC9CA,EAASyI,Q,qBC1HLwB,GAAiD,SAAC,GAMxD,IALLpQ,EAKI,EALJA,KACA4I,EAII,EAJJA,MACAK,EAGI,EAHJA,MACAtB,EAEI,EAFJA,IACA0I,EACI,EADJA,MAEMlK,EAAWO,KAETY,EAAqBV,IAAe,SAACW,GAAD,OAAWA,EAAMhD,eAArD+C,iBAEFgJ,EAAQhJ,EAAiBO,QAAuC,QAA7BP,EAAiB,GAAGzH,KAE7D,EAAoB0Q,aAAQ,CAC1BC,OAAQ,mBACRC,MAAO,SAAChR,EAAqBwI,GAC3B,GAAoB,OAAhBQ,EAAIe,QAAkB,CACxB,IAAMkH,EAAYjR,EAAK4Q,MACjBM,EAAaN,EACbO,EAAoBnI,EAAIe,QAAQgB,wBAChCqG,GACHD,EAAkBE,OAASF,EAAkBnG,KAAO,EACjDsG,EACJ9I,EAAQ+I,kBAAmBC,EAAIL,EAAkBnG,IAEnD,GAAIiG,EAAaC,GAAeI,EAAeF,EAAc,OAC7D,GAAIH,EAAaC,GAAeI,EAAeF,EAAc,OAE7D1K,EZ+EgB,SAACuK,EAAmBC,GAApB,MAAuD,CAC7E9Q,KAAM8F,EACN+K,YACAC,cYjFQO,CAASR,GAAcJ,EAAQ,EAAI,GAAIK,GAAeL,EAAQ,EAAI,KAGpE7Q,EAAK4Q,MAAQM,MAnBVQ,EAAT,oBAwBA,EAAoBrJ,aAAQ,CAC1BjI,KAAM,mBACNJ,KAAM,CAAE4Q,SACRrI,QAAS,SAACC,GAAD,MAAc,CACrBE,WAAYF,EAAQE,iBAJfiJ,EAAT,oBAQM3I,EAAuCkB,iBAAO,MAC9C0H,EAAmBD,EAAQD,EAAQ1I,IAEzC,OACE,mCACE,sBAAKvJ,UAAWC,KAAOmS,WAAY1J,GAAID,EAAKc,IAAK4I,EAAjD,UACE,cAAC,WAAD,CAAUxR,KAAK,YACf,cAAC,qBAAD,CACE0R,UAAU,EACVC,KAAMxR,EACNiJ,MAAOA,EACPwI,UAAW7I,EACX8I,YAAa,WACXvL,EZuDyB,SACnCkK,GADmC,MAEP,CAC5BxQ,KAAM4F,EACN4K,SY3DmBsB,CAAsBtB,GAAUC,EAAQ,EAAI,KACrDnK,EAASH,cCkFN4L,GApIqB,WAClC,IAAMzL,EAAWO,KACXmL,EAAU/H,cAChBtC,qBAAU,WACRrB,EAASH,OACR,CAACG,IAEJ,MAAyCS,IACvC,SAACW,GAAD,OAAWA,EAAMhD,eADX+C,EAAR,EAAQA,iBAAkBwK,EAA1B,EAA0BA,WAG1B,EACElL,IAAe,SAACW,GAAD,OAAWA,EAAM4F,SAD1BC,EAAR,EAAQA,mBAAoB2E,EAA5B,EAA4BA,kBAAmBC,EAA/C,EAA+CA,mBAGvCrD,EAAS/H,IAAe,SAACW,GAAD,OAAWA,EAAMoH,QAAzCA,KAER,EAA0C1H,oBAAS,GAAnD,mBAAOgL,EAAP,KAAsBC,EAAtB,KAEMlO,EAAcoG,uBAAY,WAC1BuE,GACFuD,GAAiB,GACjB/L,EAAS+J,GAAc5I,EAAiBwE,KAAI,SAACrM,GAAD,OAAUA,EAAKkI,UAE3DkK,EAAQM,KAAK,CAAE7J,SAAU,aAE1B,CAACnC,EAAUmB,EAAkBqH,IAOhC,EAAkC4B,aAAQ,CACxCC,OAAQ,OACRxI,QAAS,SAACC,GAAD,MAAc,CACrBmK,QAASnK,EAAQoK,WAEnBC,KALwC,SAKnC7S,GACH8S,EAAQ9S,MANZ,mBAAS2S,EAAT,KAASA,QAAWI,EAApB,KAUMC,EAAgB,UAAMtT,KAAO4M,QAAb,+BACpBqG,EAAUjT,KAAOuT,QAAU,IAEvBC,EAAMpH,mBACV,kBAAMjE,EAAiBsL,MAAK,SAAClL,GAAD,MAAoB,QAAZA,EAAG7H,UACvC,CAACyH,IAEGuL,EAActH,mBAClB,kBAAMjE,EAAiBG,QAAO,SAACC,GAAD,MAAoB,QAAZA,EAAG7H,UACzC,CAACyH,IAGGiL,EAAU,SAAC9S,GACf,Ib8BuBmI,Ea9BjB0I,EAAyB,QAAjB7Q,EAAKsI,QACX5B,EAARmK,Gb6BuB1I,Ea7BKnI,EAAKmI,Gb6BmB,CACtD/H,KAAM6F,EACNkC,OAX8B,SAACA,GAAD,MAAoC,CAClE/H,KAAM2F,EACNoC,MatBmDkL,CAAiBrT,EAAKmI,KACvEzB,EAASH,MAoBL+M,EAAaf,EAAqB,4DAAiB,kFAEzD,OACE,qCACE,0BAASvJ,IAAK+J,EAAYtT,UAAWuT,EAArC,UACE,qBAAIvT,UAAS,UAAKC,KAAO6T,eAAZ,gBAAb,UACGL,GACC,oBAAkBzT,UAAS,UAAKC,KAAOmS,WAAZ,SAA3B,SACE,cAAC,qBAAD,CACEzR,KAAK,MACL0R,UAAU,EACVC,KAAI,UAAKmB,EAAI3S,KAAT,+BACJiJ,MAAO0J,EAAI1J,MACXwI,UAAWkB,EAAI/J,SANV+J,EAAIhL,KAUf,oBAAIzI,UAAWC,KAAO8T,UAAtB,SACGJ,GAAeA,EAAY/G,KAnCf,SAAC,EAEtBuE,GACI,IAFFrQ,EAEC,EAFDA,KAAM4I,EAEL,EAFKA,MAAOK,EAEZ,EAFYA,MAAOtB,EAEnB,EAFmBA,IAGtB,OACE,oBAAgBzI,UAAWC,KAAOmS,WAAlC,SACE,cAAC,GAAD,CACEtR,KAAMA,EACN4I,MAAOA,EACPK,MAAOA,EACPtB,IAAKA,EACL0I,MAAOA,KANFA,QAgCJsC,GACC,oBAA0BzT,UAAS,UAAKC,KAAOmS,WAAZ,SAAnC,SACE,cAAC,qBAAD,CACEzR,KAAK,SACL0R,UAAU,EACVC,KAAI,UAAKmB,EAAI3S,KAAT,yBACJiJ,MAAO0J,EAAI1J,MACXwI,UAAWkB,EAAI/J,SANV+J,EAAIhL,IAAM,sBAUQ,IAA5BL,EAAiBO,QAChB,mBAAG3I,UAAU,mCAAb,+aAMJ,sBAAKA,UAAS,UAAKC,KAAO+T,iBAAZ,UAAd,UACE,oBAAGhU,UAAU,+BAAb,UACG4S,EADH,IACe,cAAC,eAAD,CAAcjS,KAAK,eAEhC,cAAC,SAAD,CAAQsT,UAAWR,GAAOrL,EAAiBO,OAAS,EAAGwD,QAASrH,EAAanE,KAAK,UAAUmJ,KAAK,QAAjG,SACG+J,UAIRd,IAAkB7E,GAAsB2E,IACvC,cAAC,GAAD,CAAOzF,QAlGM,WACjB4F,GAAiB,GACjB/L,EFgC0C,CAC5CtG,KAAMgQ,ME+DA,SACE,cAAC,GAAD,U,yCC5IGuD,GAAqB,WAChC,OACE,cAACC,GAAA,EAAD,CAAaC,QAASC,KAAtB,SACE,uBAAMrU,UAAWC,KAAOqU,KAAxB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,U,6BCRKC,GAAcC,OAAajP,QAAQkP,WACnCC,GAAaF,OAAaC,WAC1BE,GAAiBH,OAAaC,WAAWxI,IAAI,GAC7C2I,GAAaJ,OAAaC,WAAW9L,OAAO,IAE5CkM,GAAa,uCAAG,WAC3BC,EACAC,EACAC,GAH2B,eAAApQ,EAAA,sEAKLkQ,EAAOG,QAAQD,GALV,OAKrBC,EALqB,OAMjBF,GAAVE,GAN2B,2CAAH,0DCkBbC,GAAsB,WACjC,MAA0BnN,mBAAS,IAAnC,mBAAOxC,EAAP,KAAc4P,EAAd,KACA,EAAoCpN,oBAAS,GAA7C,mBAAOqN,EAAP,KAAmBC,EAAnB,KACA,EAAsBtN,mBAAS,IAA/B,mBAAOuN,EAAP,KAAYC,EAAZ,KACA,EAAgCxN,oBAAS,GAAzC,mBAAOyN,EAAP,KAAiBC,EAAjB,KACA,EAA8B1N,oBAAS,GAAvC,mBAAO2N,EAAP,KAAgBC,EAAhB,KACA,EAA8B5N,oBAAS,GAAvC,mBAAO6N,EAAP,KAAeC,EAAf,KAEA,EAMInO,IAAe,SAACW,GAAD,OAAWA,EAAMoH,QALlCA,EADF,EACEA,KACAqG,EAFF,EAEEA,qBACAC,EAHF,EAGEA,cACAzG,EAJF,EAIEA,mBACA0G,EALF,EAKEA,kBAGI9N,EAAWC,cACXlB,EAAWO,KACXmL,EAAU/H,cAsBhBtC,qBAAU,YACJwN,GAAwBC,IAAeF,GAAY,KACtD,CAACC,EAAsBC,IAE1BzN,qBAAU,WACR,GAAImH,EAAM,CACR,IAAIvH,EAASG,MAER,OAAOsK,EAAQM,KAAK,CAAE7J,SAAU,MADnCuJ,EAAQM,KAAK,CAAE7J,SAAS,GAAD,OAAKlB,EAASG,MAAMgB,KAAKD,eAGnD,CAACqG,IAcJ,OAAOmG,EACL,qBAAK5V,UAAS,UAAKC,KAAOgW,eAA1B,SACE,uBAAMjW,UAAWC,KAAOiW,KAAMC,SA9CnB,SAAChL,GAEd,GADAA,EAAEiL,iBACEhB,GAAcI,EAAU,OAAO,KAC9BvO,EAASsI,MACdtI,EACE+I,GAAe,CACbzK,MAAOA,EACP8Q,SAAUf,MAuCZ,UACE,mBAAGtV,UAAU,kCAAb,sCACA,qBAAKA,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAO+D,EACPzE,KAAM,QACNyV,YAAY,SACZhP,MAAO6N,EACPoB,UAAU,sGACV1M,KAAK,UACL2M,SAAU,SAACtL,GAAD,OAxBK,SAACA,GACxBgK,EAAShK,EAAEE,OAAO7J,OAClBqT,GAAcN,GAAac,EAAe9P,GAsBjBmR,CAAiBvL,IAClCwL,OAAQ,kBAAM9B,GAAcN,GAAac,EAAe9P,QAG5D,qBAAKvF,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE3V,KAAM+U,EAAU,OAAS,WACzBa,YAAY,uCACZ/U,MAAO8T,EACP/N,MAAOiO,EACPgB,UAAU,oIACV1V,KAAM,WACNgJ,KAAK,UACL8M,KAAK,WACLC,YAAa,kBAAMlB,GAAYD,IAC/Be,SAAU,SAACtL,GAAD,OAjCQ,SAACA,GAC3BoK,EAAOpK,EAAEE,OAAO7J,OAChBqT,GAAcF,GAAgBc,EAAaH,GA+BlBwB,CAAoB3L,IACrCwL,OAAQ,kBAAM9B,GAAcF,GAAgBc,EAAaH,QAG5DhG,GACC,oBAAGtP,UAAU,uDAAb,mKACiCgW,KAGnC,cAAC,SAAD,CACErV,KAAK,UACLmJ,KAAK,QACLmK,SAAUuB,GAAYJ,IAAe7P,IAAU+P,EAHjD,4CAOA,sBAAKtV,UAAS,UAAKC,KAAO8W,cAAZ,eAAd,UACE,mBAAG/W,UAAU,kDAAb,6IAGA,cAAC,IAAD,CACEA,UAAS,UAAKC,KAAOS,KAAZ,oDACTP,GAAI,YAFN,6HAOF,sBAAKH,UAAS,UAAKC,KAAO8W,cAAZ,SAAd,UACE,mBAAG/W,UAAU,kDAAb,wFAGA,cAAC,IAAD,CACEA,UAAS,UAAKC,KAAOS,KAAZ,oDACTP,GAAI,mBAFN,mIAUN,cAAC,GAAD,K,oBCvIS6W,GAAyB,WACpC,IAAMrE,EAAU/H,cACV3D,EAAWO,KACXU,EAAWC,cAEjB,EAA8BJ,oBAAS,GAAvC,mBAAO6N,EAAP,KAAeC,EAAf,KACA,EAAwB9N,mBAAS,IAAjC,mBAAOjH,EAAP,KAAamW,EAAb,KACA,EAAkClP,oBAAS,GAA3C,mBAAOmP,EAAP,KAAkBC,EAAlB,KACA,EAA0BpP,mBAAS,IAAnC,mBAAOxC,EAAP,KAAc4P,EAAd,KACA,EAAoCpN,oBAAS,GAA7C,mBAAOqN,EAAP,KAAmBC,EAAnB,KACA,EAAsBtN,mBAAS,IAA/B,mBAAOuN,EAAP,KAAYC,EAAZ,KACA,EAAgCxN,oBAAS,GAAzC,mBAAOyN,EAAP,KAAiBC,EAAjB,KACA,EAA8B1N,oBAAS,GAAvC,mBAAO2N,EAAP,KAAgBC,EAAhB,KAEA,EASIjO,IAAe,SAACW,GAAD,OAAWA,EAAMoH,QARlCA,EADF,EACEA,KACAqG,EAFF,EAEEA,qBACAC,EAHF,EAGEA,cAIAzG,GAPF,EAIED,oBAJF,EAKE+H,oBALF,EAMEC,+BANF,EAOE/H,oBACA0G,EARF,EAQEA,kBAWF1N,qBAAU,YACJwN,GAAwBC,IAAiBtG,IAAOoG,GAAY,KAC/D,CAACC,EAAsBC,IAE1BzN,qBAAU,WACR,GAAImH,EAAM,CACR,IAAIvH,EAASG,MAER,OAAOsK,EAAQM,KAAK,CAAE7J,SAAU,MADnCuJ,EAAQM,KAAK,CAAE7J,SAAS,GAAD,OAAKlB,EAASG,MAAMgB,KAAKD,eAGnD,CAACqG,IAgCJ,OAAOmG,EACL,qBAAK5V,UAAS,UAAKC,KAAOgW,eAA1B,SACE,uBAAMjW,UAAWC,KAAOiW,KAAMC,SAhCb,SAAChL,GAEpB,GADAA,EAAEiL,iBACEZ,GAAYJ,GAAc8B,EAAW,OAAO,KPsKlD,IAACnH,EOpKG9I,EAASsI,MACTtI,GPmKH8I,EOlKsB,CACfxK,MAAOA,EACP8Q,SAAUf,EACVxU,KAAMA,GP+Jc,SAACmG,GAC3BA,EAASoI,MACT3J,EAAgBqK,GACb7I,MAAK,SAAC5E,GAvGwB,IAyGzBC,EAAaC,EADjByE,EAtGsB,CAC5BtG,KAzGA,0BA0GAkP,MAoGqCvN,IAEW,IAAtCA,EAAIC,YAAYE,QAAQ,YAC1BF,EAAcD,EAAIC,YAAYG,MAAM,WAAW,IAEjDF,EAAeF,EAAIE,aACfD,GAAeC,IACjBjB,EAAU,cAAegB,EAAa,CAAEZ,QAAS,MACjDJ,EAAU,eAAgBiB,IAE5ByE,EAASuI,GAAQlN,EAAImN,UAEtBpI,OAAM,SAACC,GACNL,EAASqI,GAAmBhI,WOzJ9B,UACE,mBAAGtH,UAAU,kCAAb,gFACA,qBAAKA,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAOV,EACPA,KAAM,OACNyG,MAAO2P,EACPV,UAAU,kHACVD,YAAY,qBACZzM,KAAK,UACL2M,SAAU,SAACtL,GAAD,OAtBI,SAACA,GACvB8L,EAAQ9L,EAAEE,OAAO7J,OACjBqT,GAAcH,GAAYyC,EAAcrW,GAoBfwW,CAAgBnM,IACjCwL,OAAQ,kBAAM9B,GAAcH,GAAYyC,EAAcrW,QAG1D,qBAAKd,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAO+D,EACPzE,KAAM,QACNyV,YAAY,SACZhP,MAAO6N,EACPoB,UAAU,sGACV1M,KAAK,UACL2M,SAAU,SAACtL,GAAD,OAvCK,SAACA,GACxBgK,EAAShK,EAAEE,OAAO7J,OAClBqT,GAAcN,GAAac,EAAe9P,GAqCjBmR,CAAiBvL,IAClCwL,OAAQ,kBAAM9B,GAAcN,GAAac,EAAe9P,QAG5D,qBAAKvF,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE3V,KAAM+U,EAAU,OAAS,WACzBa,YAAY,uCACZ/U,MAAO8T,EACP/N,MAAOiO,EACPgB,UAAU,oIACV1V,KAAM,WACNgJ,KAAK,UACL8M,KAAK,WACLC,YAAa,kBAAMlB,GAAYD,IAC/Be,SAAU,SAACtL,GAAD,OA5CQ,SAACA,GAC3BoK,EAAOpK,EAAEE,OAAO7J,OAChBqT,GAAcF,GAAgBc,EAAaH,GA0ClBwB,CAAoB3L,QAGxCmE,GACC,oBAAGtP,UAAU,uDAAb,mKACiCgW,KAGnC,cAAC,SAAD,CACErV,KAAK,UACLmJ,KAAK,QACLmK,SACEuB,GAAYJ,GAAc8B,IAAc3R,IAAUzE,IAASwU,EAJ/D,0HASA,sBAAKtV,UAAS,UAAKC,KAAO8W,cAAZ,eAAd,UACE,mBAAG/W,UAAU,kDAAb,kIAGA,cAAC,IAAD,CACEA,UAAS,UAAKC,KAAOS,KAAZ,oDACTP,GAAI,SAFN,oDAUN,cAAC,GAAD,K,oBCnJSoX,GAA+B,WAC1C,IAAMtQ,EAAWO,KACjB,EAQIE,IAAe,SAACW,GAAD,OAAWA,EAAMoH,QAPlCJ,EADF,EACEA,oBACAmI,EAFF,EAEEA,uBAEAlI,GAJF,EAGEwG,qBAHF,EAIExG,oBACA0G,EALF,EAKEA,kBAEAvG,GAPF,EAMEsG,cANF,EAOEtG,MAEEkD,EAAU/H,cAEd,EAA0B7C,mBAAS,IAAnC,mBAAOxC,EAAP,KAAc4P,EAAd,KACA,EAAoCpN,oBAAS,GAA7C,mBAAOqN,EAAP,KAAmBC,EAAnB,KAGA/M,qBAAU,WAER,OADKmH,GAAMxI,EAASiJ,MACb,WACLjJ,EAASsI,SAEV,IAEHjH,qBAAU,WAKR,OAJIkP,IAA2BnI,IAC7BpI,ERuIsD,CAC1DtG,KAAMuO,KQvIFyD,EAAQM,KAAK,CAAE7J,SAAU,qBAEpB,WACLnC,EAASsI,SAEV,CAACiI,EAAwBnI,IAE5B/G,qBAAU,WACJmH,GAAMkD,EAAQM,KAAK,CAAE7J,SAAU,QAClC,CAACqG,IAEJ,IAKMgI,EAAevM,uBACnB,SAACC,GAEC,GADAA,EAAEiL,iBACEhB,EAAY,OAAO,KAErBnO,EAASsI,MACTtI,EAAS2I,GAAkBrK,MAG/B,CAACA,EAAO6P,IAGV,OACE,qBAAKpV,UAAS,UAAKC,KAAOgW,eAA1B,SACE,uBAAMjW,UAAWC,KAAOiW,KAAMC,SAAUsB,EAAxC,UACE,mBAAGzX,UAAU,kCAAb,uIACA,qBAAKA,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAO+D,EACPzE,KAAM,QACNyV,YAAY,SACZhP,MAAO6N,EACPoB,UAAU,sGACV1M,KAAK,UACL2M,SAAU,SAACtL,GAAD,OA7BK,SAACA,GACxBgK,EAAShK,EAAEE,OAAO7J,OAClBqT,GAAcN,GAAac,EAAe9P,GA2BjBmR,CAAiBvL,IAClCwL,OAAQ,kBAAM9B,GAAcN,GAAac,EAAe9P,QAG3D+J,GACC,oBAAGtP,UAAU,uDAAb,mKACiCgW,KAGnC,cAAC,SAAD,CAAQrV,KAAK,UAAUmJ,KAAK,QAAQmK,SAAUmB,IAAe7P,EAA7D,sFAGA,sBAAKvF,UAAS,UAAKC,KAAO8W,cAAZ,eAAd,UACE,mBAAG/W,UAAU,kDAAb,0GAGA,cAAC,IAAD,CACEA,UAAS,UAAKC,KAAOS,KAAZ,oDACTP,GAAI,SAFN,qD,oBClFGuX,GAA8B,WACzC,MAAsB3P,mBAAS,IAA/B,mBAAOuN,EAAP,KAAYC,EAAZ,KACA,EAAgCxN,oBAAS,GAAzC,mBAAOyN,EAAP,KAAiBC,EAAjB,KACA,EAAwB1N,mBAAS,IAAjC,mBAAO4P,EAAP,KAAaC,EAAb,KACA,EAAkC7P,oBAAS,GAA3C,mBAAO8P,EAAP,KAAkBC,EAAlB,KACA,EAA8B/P,oBAAS,GAAvC,mBAAO2N,EAAP,KAAgBC,EAAhB,KACM1O,EAAWO,KAEXmL,EAAU/H,cAChB,EAWIlD,IAAe,SAACW,GAAD,OAAWA,EAAMoH,QAVlCA,EADF,EACEA,KAGAsI,GAJF,EAEEjC,qBAFF,EAGEC,cAHF,EAIEgC,aACAzI,EALF,EAKEA,mBACA0G,EANF,EAMEA,kBACAgC,EAPF,EAOEA,sBAPF,EAQE3I,oBARF,EASE+H,oBATF,EAUEC,+BAIF/O,qBAAU,WAER,OADKmH,GAAMxI,EAASiJ,MACb,WACLjJ,EAASsI,SAEV,IAEHjH,qBAAU,WAER,OADImH,GAASsI,GAAapF,EAAQM,KAAK,CAAE7J,SAAU,WAC5C,WACLnC,EAASsI,MACTtI,ETkI4D,CAChEtG,KAAMwO,QSjIH,CAACM,EAAMsI,EAAapF,IAgBvBrK,qBAAU,WACJ0P,GACFC,YAAW,WACTtF,EAAQM,KAAK,CAAE7J,SAAU,aACxB,OAEJ,CAAC4O,IAYJ,OACE,qBAAKhY,UAAS,UAAKC,KAAOgW,eAA1B,SACE,uBAAMjW,UAAWC,KAAOiW,KAAMC,SAlCb,SAAChL,GAEpB,GADAA,EAAEiL,iBACEZ,GAAYqC,EAAW,OAAO,KAEhC5Q,EAASsI,MACTtI,EACE6I,GAAiB,CACfuG,SAAUf,EACVvP,MAAO4R,MA0BX,UACE,mBAAG3X,UAAU,kCAAb,uIACA,qBAAKA,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE3V,KAAM+U,EAAU,OAAS,WACzBa,YAAY,uCACZ/U,MAAO8T,EACP/N,MAAOiO,EACPgB,UAAU,oIACV1V,KAAM,WACNgJ,KAAK,UACL8M,KAAK,WACLC,YAAa,kBAAMlB,GAAYD,IAC/Be,SAAU,SAACtL,GAAD,OAzBQ,SAACA,GAC3BoK,EAAOpK,EAAEE,OAAO7J,OAChBqT,GAAcF,GAAgBc,EAAaH,GAuBlBwB,CAAoB3L,IACrCwL,OAAQ,kBAAM9B,GAAcF,GAAgBc,EAAaH,QAG7D,qBAAKtV,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAOmW,EACP7W,KAAM,OACNyV,YAAY,kHACZzM,KAAK,UACL2M,SAAU,SAACtL,GAAD,OA9BI,SAACA,GACvByM,EAAQzM,EAAEE,OAAO7J,OACjBqT,GAAcD,GAAYkD,EAAcH,GA4BfO,CAAgB/M,IACjC5D,MAAOsQ,EACPrB,UAAU,kHACVG,OAAQ,kBAAM9B,GAAcD,GAAYkD,EAAcH,QAGzDK,GACC,qCACE,mBAAGhY,UAAU,uDAAb,+IAGA,mBAAGA,UAAU,uDAAb,2RAKHsP,GACC,oBAAGtP,UAAU,uDAAb,mKACiCgW,KAGnC,cAAC,SAAD,CACErV,KAAK,UACLmJ,KAAK,QACLmK,SAAUuB,GAAYqC,IAAcF,IAASrC,EAH/C,oEAOA,sBAAKtV,UAAS,UAAKC,KAAO8W,cAAZ,eAAd,UACE,mBAAG/W,UAAU,kDAAb,0GAGA,cAAC,IAAD,CACEA,UAAS,UAAKC,KAAOS,KAAZ,oDACTP,GAAI,SAFN,qD,oBCpJGgY,GACX,8BACWC,GACX,gCACWC,GACX,8BACWC,GACX,+BACWC,GACX,yBACWC,GACX,0BAoCWC,GAA2B,iBAAkC,CACxE9X,KAAMwX,KAWKO,GAA4B,iBAAmC,CAC1E/X,KAAM2X,KAaKK,GAAkB,CAC7BC,qBAAsBT,GACtBU,iBAAkBL,GAClBM,kBAAmBL,GACnBM,cATkC,SAACzM,GAAD,MAA0C,CAC5E3L,KAAM6X,GACNQ,QAAS1M,IAQT2M,SA3BwC,iBAAoC,CAC5EtY,KAAMyX,KA2BNc,UAAWR,GACXS,UAzBsC,iBAAkC,CACxExY,KAAM0X,KAyBNe,aAlBiC,SAAC9M,GAAD,MAAyC,CAC1E3L,KAAM4X,GACNS,QAAS1M,K,oBC5DE+M,GAA0B,WACrC,IAAMpS,EAAWO,KAQjB,OACE,qCACE,cAAC,IAAD,CACExH,UAAS,UAAKC,KAAOS,KAAZ,+BACTP,GAAI,WACJK,gBAAe,UAAKP,KAAOQ,YAC3BJ,OAAO,EAJT,wDAQA,cAAC,IAAD,CACEL,UAAS,UAAKC,KAAOS,KAAZ,+BACTP,GAAI,kBACJK,gBAAe,UAAKP,KAAOQ,YAC3BJ,OAAO,EAJT,mGAQA,cAAC,IAAD,CACEL,UAAS,UAAKC,KAAOS,KAAZ,+BACTP,GAAI,WACJgM,QAAS,SAAChB,GAAD,OA3BM,SAACA,GACpBA,EAAEiL,iBACFnP,EAASmJ,MACTnJ,EAASyR,MAwBWY,CAAanO,IAC7B9K,OAAO,EAJT,gDCROkZ,GAAc,WACzB,MAA8BxR,oBAAS,GAAvC,mBAAO6N,EAAP,KAAeC,EAAf,KAEM5O,EAAWO,KAEjB,GADgBoD,cAQZlD,IAAe,SAACW,GAAD,OAAWA,EAAMoH,SANlCA,EADF,EACEA,KACAqG,EAFF,EAEEA,qBACAC,EAHF,EAGEA,cAGAsB,GANF,EAIEhI,oBAJF,EAKE+H,oBALF,EAMEC,gCAGF/O,qBAAU,WACJmH,IACF0F,EAAS1F,EAAKlK,OACd0R,EAAQxH,EAAK3O,SAEd,CAAC2O,IAEJnH,qBAAU,YACJwN,GAAwBC,IAAeF,GAAY,KACtD,CAACC,EAAsBC,IAE1BzN,qBAAU,WACR,OAAO,WACLkR,GAAe,GACfvS,EAASsI,SAEV,IAEH,IAyBA,EAAsCxH,oBAAS,GAA/C,mBAAO0R,EAAP,KAAoBD,EAApB,KACA,EAAwBzR,mBAAS,IAAjC,mBAAOjH,EAAP,KAAamW,EAAb,KACA,EAAkClP,oBAAS,GAA3C,mBAAOmP,EAAP,KAAkBC,EAAlB,KACA,EAA0BpP,mBAAS,IAAnC,mBAAOxC,EAAP,KAAc4P,EAAd,KACA,EAAoCpN,oBAAS,GAA7C,mBAAOqN,EAAP,KAAmBC,EAAnB,KACA,EAAsBtN,mBAAS,IAA/B,mBAAOuN,EAAP,KAAYC,EAAZ,KACA,EAAgCxN,oBAAS,GAAzC,mBAAOyN,EAAP,KAAiBC,EAAjB,KACA,EAA8B1N,oBAAS,GAAvC,mBAAO2N,EAAP,KAAgBC,EAAhB,KAiBA,OAAOC,EACL,sBAAK5V,UAAS,UAAKC,KAAOyZ,sBAA1B,UACE,qBAAK1Z,UAAS,UAAKC,KAAO0Z,cAA1B,SACE,qBAAI3Z,UAAS,UAAKC,KAAO2Z,aAAzB,UACE,cAAC,GAAD,IACA,mBACE5Z,UAAS,UAAKC,KAAO4Z,QAAZ,0DADX,uUAOJ,qBAAK7Z,UAAS,UAAKC,KAAOgW,eAA1B,SACE,uBAAMjW,UAAWC,KAAOiW,KAAMC,SAnDf,SAAChL,GAEpB,GADAA,EAAEiL,iBACEZ,GAAYJ,GAAc8B,EAAW,OAAO,KAE9CjQ,EACEqJ,GAA0B,CACxB/K,MAAOA,EACP8Q,SAAUf,EACVxU,KAAMA,KAGZ0Y,GAAe,IAwCX,UACE,qBAAKxZ,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAOV,EACPA,KAAM,OACNyG,MAAO2P,EACPV,UAAU,kHACVD,YAAY,qBACZzM,KAAK,UACL2M,SAAU,SAACtL,GAAD,OAhCE,SAACA,GACvB8L,EAAQ9L,EAAEE,OAAO7J,OACjBqT,GAAcH,GAAYyC,EAAcrW,GA8BbwW,CAAgBnM,IACjCwL,OAAQ,kBAAM9B,GAAcH,GAAYyC,EAAcrW,QAG1D,qBAAKd,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE9U,MAAO+D,EACPzE,KAAM,QACNyV,YAAY,SACZhP,MAAO6N,EACPoB,UAAU,sGACV1M,KAAK,UACL2M,SAAU,SAACtL,GAAD,OAjDG,SAACA,GACxBgK,EAAShK,EAAEE,OAAO7J,OAClBqT,GAAcN,GAAac,EAAe9P,GA+CfmR,CAAiBvL,IAClCwL,OAAQ,kBAAM9B,GAAcN,GAAac,EAAe9P,QAG5D,qBAAKvF,UAAS,UAAKC,KAAOqW,eAAZ,SAAd,SACE,cAAC,QAAD,CACE3V,KAAM+U,EAAU,OAAS,WACzBa,YAAY,uCACZ/U,MAAO8T,EACP/N,MAAOiO,EACPgB,UAAU,oIACV1V,KAAM,WACNgJ,KAAK,UACL8M,KAAK,WACLC,YAAa,kBAAMlB,GAAYD,IAC/Be,SAAU,SAACtL,GAAD,OAtDM,SAACA,GAC3BoK,EAAOpK,EAAEE,OAAO7J,OAChBqT,GAAcF,GAAgBc,EAAaH,GAoDhBwB,CAAoB3L,IACrCwL,OAAQ,kBAAM9B,GAAcF,GAAgBc,EAAaH,QAG5D+B,GAAkCoC,GACjC,mBAAGzZ,UAAU,kDAAb,+IAIF,sBAAKA,UAAS,UAAKC,KAAO6Z,iBAAZ,SAAd,UACE,cAAC,SAAD,CACEnZ,KAAK,YACLmJ,KAAK,SACLmK,SACEuB,GAAYJ,GAAc8B,IAAc3R,IAAU+P,IAAQxU,EAJ9D,oEASA,cAAC,SAAD,CACEH,KAAK,YACLmJ,KAAK,SACLqC,QAAS,SAAChB,GAAD,OAxHF,SAACA,GAClBA,EAAEiL,iBACE3G,GACF0F,EAAS1F,EAAKlK,OACd0R,EAAQxH,EAAK3O,QAEbqU,EAAS,IACT8B,EAAQ,KAiHgB8C,CAAW5O,IAH7B,6DAYR,cAAC,GAAD,K,iCC5KS6O,GAAgD,SAAC,GAGvD,IAFLzM,EAEI,EAFJA,SACG0M,EACC,mBACEhT,EAAWO,KACTiI,EAAS/H,IAAe,SAACW,GAAD,OAAWA,EAAMoH,QAAzCA,KACR,EAAsC1H,oBAAS,GAA/C,mBAAqBmS,GAArB,WAEMC,EAAI,uCAAG,sBAAAvV,EAAA,sDACXqC,EAASiJ,MACTgK,GAAc,GAFH,2CAAH,qDASV,OAJA5R,qBAAU,WACR6R,MACC,IAEE1K,EAgBE,cAAC,IAAD,6BAAWwK,GAAX,IAAiBG,OAAQ,kBAAM7M,MAdlC,cAAC,IAAD,6BACM0M,GADN,IAEEG,OAAQ,gBAAGlS,EAAH,EAAGA,SAAH,OACN,cAAC,IAAD,CACE/H,GAAI,CACFiJ,SAAU,SACVf,MAAO,CAAEgB,KAAMnB,W,oBC5BhBmS,GAAsC,SAAC,GAQ7C,IAPLhM,EAOI,EAPJA,OACAlL,EAMI,EANJA,KACArC,EAKI,EALJA,KACAuE,EAII,EAJJA,YACAX,EAGI,EAHJA,OACAgE,EAEI,EAFJA,GACA4R,EACI,EADJA,WAEQzP,EAAoBnD,IAAe,SAACW,GAAD,OAAWA,EAAMhD,eAApDwF,gBAEF3C,EAAWC,cAEXoS,EAA8B,GAEpClV,EAAYuH,KAAI,SAAC4N,GACf3P,EAAgB4P,SAAQ,SAACla,GACnBia,IAAUja,EAAKkI,KAAK8R,EAAatH,KAAK1S,SAI9C,IAIIma,EAJE1S,EAAUuS,EAAa5R,OAAS,EAChC/F,EAAOD,EAAUQ,GACjByP,EAAa2H,EAAaI,QAAO,SAACC,EAAKpS,GAAN,OAAaoS,EAAMpS,EAAGuB,QAAO,GAGpE,OAAQrF,GACN,IAAK,UACHgW,EAAgB,mBAAG1a,UAAS,4BAAZ,oEAChB,MAEF,IAAK,OACH0a,EACE,mBAAGjR,MAAO,CAAEoR,MAAO,WAAa7a,UAAS,4BAAzC,8DAIF,MAEF,IAAK,UACH0a,EAAgB,mBAAG1a,UAAS,4BAAZ,kDA2BpB,OACE,cAAC,IAAD,CACEA,UAAWC,KAAO8W,cAClB5W,GAAI,CACFiJ,SAAUkR,EAAU,gBAAY5R,GAAZ,0BAAsCA,GAC1DL,MAAO,CAAEgB,KAAMnB,EAASkB,SAAUE,WAAYpB,IAJlD,SAOE,sBAAKlI,UAAS,UAAKC,KAAO6a,WAA1B,UACE,sBAAK9a,UAAS,UAAKC,KAAO8a,UAA1B,UACE,mBAAG/a,UAAS,gCAAZ,oBAAoDqO,KACpD,mBAAGrO,UAAS,kDAAZ,SACG4C,OAGL,gCACE,mBAAG5C,UAAS,kCAAZ,SAAkDc,IACjD4Z,KAGH,sBAAK1a,UAAS,UAAKC,KAAO+a,WAA1B,UACE,qBAAIhb,UAAS,UAAKC,KAAOoF,aAAzB,UACGkV,EAAa3N,KA1CD,SACrBrM,EACA0a,EACAC,GAEA,OAAID,GAAO,EAEP,oBAEEjb,UAAWC,KAAOkb,SAClB1R,MAAO,CAAE2R,OAAQF,EAAIvS,OAASsS,GAHhC,SAKE,qBAAKjb,UAAWC,KAAOob,QAAS1R,IAAKpJ,EAAK+a,gBAJrCL,GAQF,QA2BAjT,EAAU,GACT,sBACEyB,MAAO,CAAE2R,OAAQ/V,EAAYsD,OAAS,GACtC3I,UAAS,UAAKC,KAAO+H,QAAZ,8BAFX,cAIIA,QAIR,sBAAKhI,UAAS,UAAKC,KAAOsb,gBAA1B,UACE,mBAAGvb,UAAS,UAAKC,KAAO8J,MAAZ,iCAAZ,SACG6I,IAEH,cAAC,eAAD,CAAcjS,KAAK,wB,oBC7FlB6a,GAAmB,WAC9B,IAAMvU,EAAWO,KAEjB,GADgBoD,cAQZlD,IAAe,SAACW,GAAD,OAAWA,EAAMoH,SALlCqG,GAFF,EACErG,KADF,EAEEqG,sBACAC,EAHF,EAGEA,cAMF,GATA,EAIE1G,oBAJF,EAKE+H,oBALF,EAMEC,+BAIA3P,IAAe,SAACW,GAAD,OAAWA,EAAMoT,aAD1BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAGpB,GAHA,EAA2BC,WAA3B,EAAuCC,YAAvC,EAAoDC,SAGtB/T,oBAAS,IAAvC,mBAAO6N,EAAP,KAAeC,EAAf,KAEAvN,qBAAU,WAGR,OAFArB,EAASwR,MACTxR,EAASD,KACF,WACLC,EAASyR,OAEV,CAACzR,IAEJqB,qBAAU,WAER,OADIwN,GAAwBC,IAAeF,GAAY,GAChD,WACL5O,EAASsI,SAEV,CAACuG,EAAsBC,IA0B1B,OAAOH,GAAU+F,EACf,sBAAK3b,UAAS,UAAKC,KAAOyZ,sBAA1B,UACE,qBAAK1Z,UAAS,UAAKC,KAAO0Z,cAA1B,SACE,oBAAI3Z,UAAS,UAAKC,KAAO2Z,aAAzB,SACE,cAAC,GAAD,QAGJ,qBAAK5Z,UAAS,UAAKC,KAAOgW,eAA1B,SACE,oBAAIjW,UAAWC,KAAO8b,UAAtB,SACGL,EAAW/S,OACV+S,EACG9O,KAAI,SAACpE,GAAD,OAAQA,KACZwT,UACApP,KArCY,SAACrM,EAAoB0a,GAC5C,OAAIA,EAAM,GAEN,oBAEE9O,QAAS,kBAAMlF,EAAS6J,GAAiBvQ,KACzCP,UAAWC,KAAOkJ,cAHpB,SAKE,cAAC,GAAD,CACEkF,OAAQ9N,EAAK8N,OACblL,KAAM5C,EAAK0b,UACXnb,KAAMP,EAAKO,KACX4D,OAAQnE,EAAKmE,OACbW,YAAa9E,EAAK8E,YAClBqD,GAAInI,EAAKkI,IACT6R,YAAY,KAXTW,GAgBF,QAmBD,mBAAGjb,UAAU,yCAAb,oKAQR,cAAC,GAAD,K,oBC4CWkc,GAtIqB,WAClC,MAKIxU,IAAe,SAACW,GAAD,OAAWA,EAAMhD,eAJlC8W,EADF,EACEA,kBACAtR,EAFF,EAEEA,gBACAC,EAHF,EAGEA,uBACAC,EAJF,EAIEA,sBAEMrC,EAAOd,KAAPc,GACFzB,EAAWO,KAEjB,EAA8BO,oBAAS,GAAvC,mBAAO6N,EAAP,KAAeC,EAAf,KAEAvN,qBAAU,YACJwC,GAA0BC,IAAuB8K,GAAY,KAChE,CAAC/K,EAAwBA,IAE5BxC,qBAAU,WACuB,IAA3BuC,EAAgBlC,QAAc1B,EAASD,OAC1C,CAAC6D,IAEJ,IAAMuR,EAAkBvR,EAAgB6I,MAAK,SAACnT,GAAD,OAAUA,EAAKkI,MAAQC,KAC9D2T,EAAkBF,EAExB,GAC6B,IAA3BtR,EAAgBlC,SACfoC,IACAD,EACD,CACA,GAAIuR,EACF,OACE,qCACE,sBAAMrc,UAAS,UAAKC,KAAO6M,MAAZ,oCAAf,qHAGA,qBACE9M,UAAWC,KAAOyJ,MAClBC,IAAK0S,EAAgBC,YACrB1S,IAAKyS,EAAgBvb,OAEvB,mBAAGd,UAAU,uCAAb,SACGqc,EAAgBvb,OAEnB,qBAAId,UAAWC,KAAOsc,UAAtB,UACE,qBAAIvc,UAAS,UAAKC,KAAOuc,SAAZ,UAAb,UACE,oBAAGxc,UAAU,gDAAb,iFACgB,OAEhB,mBAAGA,UAAU,oDAAb,SACGqc,EAAgBI,cAGrB,qBAAIzc,UAAS,UAAKC,KAAOuc,SAAZ,6BAAb,UACE,oBAAGxc,UAAU,gDAAb,mDACW,OAEX,mBAAGA,UAAU,oDAAb,SACGqc,EAAgBK,cAGrB,qBAAI1c,UAAS,UAAKC,KAAOuc,SAAZ,6BAAb,UACE,oBAAGxc,UAAU,gDAAb,6CACU,OAEV,mBAAGA,UAAU,oDAAb,SACGqc,EAAgBM,SAGrB,qBAAI3c,UAAS,UAAKC,KAAOuc,SAAZ,6BAAb,UACE,oBAAGxc,UAAU,gDAAb,qEACc,OAEd,mBAAGA,UAAU,oDAAb,SACGqc,EAAgBO,yBAMxB,GAAIR,EACP,OAAIxG,EAEA,sBAAK5V,UAAWC,KAAO4c,cAAvB,UACE,sBAAM7c,UAAS,UAAKC,KAAO6c,UAAZ,8BAAf,qHAGA,qBACE9c,UAAWC,KAAOyJ,MAClBC,IAAG,OAAEyS,QAAF,IAAEA,OAAF,EAAEA,EAAiBE,YACtB1S,IAAG,OAAEwS,QAAF,IAAEA,OAAF,EAAEA,EAAiBtb,OAExB,mBAAGd,UAAU,uCAAb,gBACGoc,QADH,IACGA,OADH,EACGA,EAAiBtb,OAEpB,qBAAId,UAAWC,KAAOsc,UAAtB,UACE,qBAAIvc,UAAS,UAAKC,KAAOuc,SAAZ,UAAb,UACE,oBAAGxc,UAAU,gDAAb,iFACgB,OAEhB,mBAAGA,UAAU,oDAAb,gBACGoc,QADH,IACGA,OADH,EACGA,EAAiBK,cAGtB,qBAAIzc,UAAS,UAAKC,KAAOuc,SAAZ,6BAAb,UACE,oBAAGxc,UAAU,gDAAb,mDACW,OAEX,mBAAGA,UAAU,oDAAb,gBACGoc,QADH,IACGA,OADH,EACGA,EAAiBM,cAGtB,qBAAI1c,UAAS,UAAKC,KAAOuc,SAAZ,6BAAb,UACE,oBAAGxc,UAAU,gDAAb,6CACU,OAEV,mBAAGA,UAAU,oDAAb,gBACGoc,QADH,IACGA,OADH,EACGA,EAAiBO,SAGtB,qBAAI3c,UAAS,UAAKC,KAAOuc,SAAZ,6BAAb,UACE,oBAAGxc,UAAU,gDAAb,qEACc,OAEd,mBAAGA,UAAU,oDAAb,gBACGoc,QADH,IACGA,OADH,EACGA,EAAiBQ,yBAMhB,cAAC,GAAD,IAElB,OAAO,cAAC,GAAD,K,qBC3IIG,GAAiB,WAC5B,OACI,qBAAK/c,UAAWC,KAAO6a,UAAvB,SACE,cAAC,GAAD,OCJKkC,GAA6C,sBAC7CC,GACX,wBACWC,GAA6C,sBAC7CC,GACX,uBACWC,GAAmC,iBACnCC,GAAqC,kBAoCrCC,GAAoB,iBAA2B,CAC1D3c,KAAMqc,KAWKO,GAAqB,iBAA4B,CAC5D5c,KAAMwc,KAaKK,GAAqB,CAChC5E,qBAAsBoE,GACtBnE,iBAAkBwE,GAClBvE,kBAAmBwE,GACnBvE,cAT2B,SAACzM,GAAD,MAAmC,CAC9D3L,KAAM0c,GACNrE,QAAS1M,IAQT2M,SA3BiC,iBAA6B,CAC9DtY,KAAMsc,KA2BN/D,UAAWqE,GACXpE,UAzB+B,iBAA2B,CAC1DxY,KAAMuc,KAyBN9D,aAlB0B,SAAC9M,GAAD,MAAkC,CAC5D3L,KAAMyc,GACNpE,QAAS1M,K,oBC1CEmR,GAAqB,WAChB7S,cAAhB,IACM3D,EAAWO,KACjB,EAA6DE,IAC3D,SAACW,GAAD,OAAWA,EAAMqV,QADXC,EAAR,EAAQA,OAAQhC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,YAAaC,EAAhD,EAAgDA,SAIhDxT,qBAAU,WAGR,OAFArB,EAASqW,MACTrW,EAASD,KACF,WACLC,EAASsW,SAEV,CAACtW,IAEJ,IAmBM2W,EAAqB,SAACrd,EAAoB0a,GAC9C,OAAIA,EAAM,GAEN,oBAAcjb,UAAWC,KAAOkb,SAAhC,SACG5a,EAAK8N,QADC4M,GAKJ,MAIX,OAAIY,IAAgBC,EAEhB,qCACE,sBAAK9b,UAAS,UAAKC,KAAO4d,MAA1B,UACE,oBACE7d,UAAS,UAAKC,KAAO6M,MAAZ,yCADX,uFAKA,sBAAK9M,UAAS,UAAKC,KAAO6d,UAA1B,UACE,oBAAI9d,UAAS,UAAKC,KAAO8b,WAAzB,SACG4B,EAAO/Q,KA1CK,SAACrM,EAAoB0a,GAC5C,OAAIA,EAAM,GAEN,oBAAc9O,QAAS,kBAAMlF,EAAS6J,GAAiBvQ,KAAvD,SACE,cAAC,GAAD,CACE8N,OAAQ9N,EAAK8N,OACblL,KAAM5C,EAAK0b,UACXnb,KAAMP,EAAKO,KACXuE,YAAa9E,EAAK8E,YAClBqD,GAAInI,EAAKkI,IACT6R,YAAY,KAPPW,GAYJ,UA6BD,0BAASjb,UAAS,UAAKC,KAAO8d,YAA9B,UACE,sBAAK/d,UAAS,UAAKC,KAAO+d,oBAA1B,UACE,sBAAKhe,UAAS,UAAKC,KAAOge,WAA1B,UACE,mBACEje,UAAS,UAAKC,KAAOie,WAAZ,+BADX,mDAKA,oBACEle,UAAS,UAAKC,KAAOke,UAAZ,YAAyBle,KAAOme,WAAhC,uCADX,SAGGT,EAAO/Q,IAAIgR,QAIhB,sBAAK5d,UAAS,UAAKC,KAAOge,WAA1B,UACE,mBACEje,UAAS,UAAKC,KAAOie,WAAZ,+BADX,0DAKA,oBACEle,UAAS,UAAKC,KAAOke,UAAZ,uCADX,SAGGR,EAAO/Q,IAAIgR,WAIlB,sBAAK5d,UAAS,UAAKC,KAAOoe,eAA1B,UACE,mBACEre,UAAS,UAAKC,KAAOie,WAAZ,+BADX,oIAKA,sBACEle,UAAS,UAAKC,KAAOmO,OAAZ,gCADX,SAGGuN,OAGL,sBAAK3b,UAAS,UAAKC,KAAOoe,eAA1B,UACE,mBACEre,UAAS,UAAKC,KAAOie,WAAZ,+BADX,6HAKA,sBACEle,UAAS,UAAKC,KAAOmO,OAAZ,gCADX,SAGGwN,gBA5Db,QAqEU,cAAC,GAAD,K,yCCrHH0C,GAAuB,WAClC,IAuDI5D,EAvDI6D,EAAe7W,IAAe,SAACW,GAAD,OAAWA,EAAM4F,SAA/CsQ,WACA1T,EAAoBnD,IAAe,SAACW,GAAD,OAAWA,EAAMhD,eAApDwF,gBACA8S,EAAWjW,IAAe,SAACW,GAAD,OAAWA,EAAMqV,QAA3CC,OACAjC,EAAehU,IAAe,SAACW,GAAD,OAAWA,EAAMoT,YAA/CC,WAEFnB,EAAgC,GAEhCiE,EAAkB,SAACC,GACvBA,EAAYpZ,YAAYuH,KAAI,SAAC4N,EAAOS,EAAKC,GACvCrQ,EAAgB4P,SAAQ,SAACjS,GACnBgS,IAAUhS,EAAGC,KACf8R,EAAatH,KAAb,6BACKzK,GADL,IAEEqB,MAAOqR,EAAIP,QAAO,SAAC9Q,EAAOtJ,GACxB,OAAIA,IAASiI,EAAGC,IACPoB,EAAQ,EAEVA,IACN,aAMP6U,EAAa,SAACC,GAClB,OAAOA,EAAMpW,QACX,SAAC4C,EAAGyT,GAAJ,OAAUD,EAAME,WAAU,SAACja,GAAD,OAAOA,EAAE6D,MAAQ0C,EAAE1C,SAASmW,MAIpD1S,EAAmB,SAAC1D,EAAmByS,GAC3C,OACE,6BACE,sBAAKjb,UAAS,UAAKC,KAAO6e,qBAA1B,UACE,sBAAK9e,UAAS,UAAKC,KAAO8e,cAA1B,UACE,qBAAK/e,UAAS,UAAKC,KAAO+e,kBAA1B,SACE,qBACEhf,UAAS,UAAKC,KAAOob,SACrB1R,IAAKnB,EAAG8S,aACR1R,IAAI,UAGR,mBAAG5J,UAAS,wCAAZ,SAAwDwI,EAAG1H,UAE7D,sBAAKd,UAAS,UAAKC,KAAOsb,gBAA1B,UACE,mBAAGvb,UAAU,gCAAb,mBAAiDwI,EAAGqB,MAApD,cAA+DrB,EAAGuB,SAClE,cAAC,eAAD,CAAcpJ,KAAK,mBAdhBsa,IAqBLvS,EAAOd,KAAPc,GAGR,cAAQ6V,QAAR,IAAQA,OAAR,EAAQA,EAAY7Z,QAClB,IAAK,UACHgW,EAAgB,mBAAG1a,UAAS,4BAAZ,oEAChB,MAEF,IAAK,OACH0a,EACE,mBAAGjR,MAAO,CAAEoR,MAAO,WAAa7a,UAAS,4BAAzC,8DAIF,MAEF,IAAK,UACH0a,EAAgB,mBAAG1a,UAAS,4BAAZ,kDAOpB,IAAMif,EAAiBV,EACjBW,EACJvB,EAAOjK,MAAK,SAACnT,GAAD,OAAUA,EAAKkI,MAAQC,MACnCgT,EAAWhI,MAAK,SAACnT,GAAD,OAAUA,EAAKkI,MAAQC,KAEzC,GAAIuW,EAAgB,CAClBT,EAAgBS,GAEhB,IAAMrM,EAAa2H,EAAaI,QAAO,SAACC,EAAKpS,GAAN,OAAaoS,EAAMpS,EAAGuB,QAAO,GAC9DnH,EAAOD,EAAUsc,EAAehD,WAEtC,OACE,sBAAKjc,UAAS,UAAKC,KAAO6a,WAA1B,UACE,sBACE9a,UAAS,UAAKC,KAAOoO,OAAZ,wCADX,oBAGO4Q,EAAe5Q,UAEtB,oBAAIrO,UAAS,UAAKC,KAAOa,KAAZ,oCAAb,SACGme,EAAene,OAEjB4Z,EACD,mBAAG1a,UAAU,wCAAb,kDACA,oBAAIA,UAAS,UAAKC,KAAOkf,iBAAzB,SACGT,EAAWnE,GAAc3N,IAAIV,KAEhC,sBAAKlM,UAAS,UAAKC,KAAOmf,OAAZ,UAAd,UACE,mBAAGpf,UAAS,kDAAZ,SACG4C,IAEH,sBAAK5C,UAAS,UAAKC,KAAOsb,gBAA1B,UACE,mBAAGvb,UAAU,gCAAb,SAA8C4S,IAC9C,cAAC,eAAD,CAAcjS,KAAK,qBAKtB,GAAIue,EAAgB,CACzBV,EAAgBU,GAEhB,IAAMtM,EAAa2H,EAAaI,QAAO,SAACC,EAAKpS,GAAN,OAAaoS,EAAMpS,EAAGuB,QAAO,GAC9DnH,EAAOD,EAAUuc,EAAejD,WAEtC,OACE,sBAAKjc,UAAS,UAAKC,KAAO6a,WAA1B,UACE,sBACE9a,UAAS,UAAKC,KAAOoO,OAAZ,wCADX,oBAGO6Q,EAAe7Q,UAEtB,oBAAIrO,UAAS,UAAKC,KAAOa,KAAZ,oCAAb,SACGoe,EAAepe,OAEjB4Z,EACD,mBAAG1a,UAAU,wCAAb,kDACA,oBAAIA,UAAS,UAAKC,KAAOkf,iBAAzB,SACGT,EAAWnE,GAAc3N,IAAIV,KAEhC,sBAAKlM,UAAS,UAAKC,KAAOmf,OAAZ,UAAd,UACE,mBAAGpf,UAAS,kDAAZ,SACG4C,IAEH,sBAAK5C,UAAS,UAAKC,KAAOsb,gBAA1B,UACE,mBAAGvb,UAAU,gCAAb,SAA8C4S,IAC9C,cAAC,eAAD,CAAcjS,KAAK,qBAKtB,OAAO,cAAC,GAAD,KC9JH0e,GAAY,WACvB,IAAMpY,EAAWO,KAUjB,OARAc,qBAAU,WAGR,OAFArB,EAASqW,MACTrW,EAASD,KACF,WACLC,EAASsW,SAEV,CAACtW,IAGF,qBAAKjH,UAAWC,KAAO6a,UAAvB,SACE,cAAC,GAAD,O,qBCZOwE,GAAgB,WAC3B,IAAMrY,EAAWO,KAUjB,OARAc,qBAAU,WAGR,OAFArB,EAASwR,MACTxR,EAASD,KACF,WACLC,EAASyR,OAEV,CAACzR,IAGF,qBAAKjH,UAAWC,KAAO6a,UAAvB,SACE,cAAC,GAAD,OCiFSyE,GA9EO,WACpB,IAAMtY,EAAWO,KACXU,EAAWC,cACXwK,EAAU/H,cAEVtB,EAD4B,SAAnBqJ,EAAQ6M,QACMtX,EAASG,OAASH,EAASG,MAAMiB,WAExDmW,EAAa,WACjBxY,EAASF,KACT4L,EAAQ+M,UAGV,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAQxX,SAAUoB,GAAcpB,EAAhC,UACE,cAAC,IAAD,CAAOyX,KAAK,IAAItf,OAAO,EAAvB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,SAAStf,OAAO,EAA5B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,YAAYtf,OAAO,EAA/B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,mBAAmBtf,OAAO,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,kBAAkBtf,OAAO,EAArC,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBsf,KAAK,WAAWtf,OAAO,EAAvC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,QAAQtf,OAAO,EAA3B,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBsf,KAAK,kBAAkBtf,OAAO,EAA9C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBsf,KAAK,sBAAsBtf,OAAO,EAAlD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,mBAAmBtf,OAAO,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOsf,KAAK,YAAYtf,OAAO,EAA/B,SACE,cAAC,GAAD,SAIHiJ,GACC,cAAC,IAAD,CAAOqW,KAAK,mBAAZ,SACE,cAAC,GAAD,CAAOvS,QAASqS,EAAhB,SACE,cAAC,GAAD,QAKLnW,GACC,cAAC,IAAD,CAAOqW,KAAK,YAAZ,SACE,cAAC,GAAD,CAAOvS,QAASqS,EAAhB,SACE,cAAC,GAAD,QAKLnW,GACC,cAAC,GAAD,CAAgBqW,KAAK,sBAAsBtf,OAAO,EAAlD,SACE,cAAC,GAAD,CAAO+M,QAASqS,EAAhB,SACE,cAAC,GAAD,Y,eC7FCG,GAAmB,SAC9BC,EACAC,EACAC,GAEA,OAAO,SAACC,GACN,IAAIC,EAA2B,KAC3BC,GAAY,EAEhB,OAAO,SAACC,GAAD,OAAkC,SAACX,GACxC,IAAQvY,EAAa+Y,EAAb/Y,SACAtG,EAAkB6e,EAAlB7e,KAAMqY,EAAYwG,EAAZxG,QACRjT,EACe,YAAnBga,EAA+Blf,EAAU,eAAiB,KAO5D,GALIF,IAASmf,EAAWlH,uBACC,YAAnBmH,EAA8BE,EAAS,IAAIG,UAAJ,UAAiBP,IAChC,YAAnBE,IACPE,EAAS,IAAIG,UAAJ,UAAiBP,EAAjB,kBAAgC9Z,MAEzCka,IACFC,GAAY,EAEZD,EAAOI,OAAS,WACdpZ,EAAS6Y,EAAW7G,aAEtBgH,EAAOK,QAAU,WACfrZ,EAAS6Y,EAAW3G,cAEtB8G,EAAOM,UAAY,SAACC,GAClB,IAAQpZ,EAASoZ,EAATpZ,KACFqZ,EAAatb,KAAKub,MAAMtZ,GACVuZ,GAAmBF,EAA/BG,QAAR,aAAuCH,EAAvC,KACAxZ,EAAS6Y,EAAW1G,aAAauH,KAGnCV,EAAOY,QAAU,SAACL,GAChBvZ,EAAS6Y,EAAW5G,aACpB4H,QAAQC,IAAI,4BAA6BP,EAAM7I,MAC1CuI,GACHjI,YAAW,WACThR,EAAS6Y,EAAWhH,uBACnB,MAIHnY,IAASmf,EAAWjH,kBAAkB,CACxC,IAAMvM,EAAO,gBAAQ0M,GACrBiH,EAAOe,KAAK7b,KAAKC,UAAUkH,IAG/B6T,EAAKX,O,4BCtBLyB,GAAkC,CACtCpW,gBAAiB,GACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,qBAAsB,KAEtB5C,iBAAkB,GAElBwK,WAAY,EAEZuJ,kBAAmB,KAEnB+E,WAAY,OCzBRD,GAA4B,CAChChT,MAAO,KACPsQ,WAAY,KACZzL,oBAAoB,EACpBD,mBAAmB,EACnB3E,oBAAoB,EACpBC,iBAAkB,MCSd8S,GAA2B,CAC/B5R,qBAAqB,EACrBC,oBAAoB,EACpB0G,kBAAmB,KACnBrG,2BAA2B,EAC3ByH,qBAAqB,EACrBI,wBAAwB,EACxB2J,qBAAqB,EACrBrL,sBAAsB,EACtBuB,gCAAgC,EAChCW,uBAAuB,EACvBjC,eAAe,EACfgC,aAAa,EACbtI,KAAM,MC/BKwR,GAA2B,CACtCtD,OAAQ,GACRhC,MAAO,KACPC,WAAY,KACZC,aAAa,EACbC,UAAU,GCLCmF,GAA2B,CACtCvF,WAAY,GACZC,MAAO,KACPC,WAAY,KACZC,aAAa,EACbC,UAAU,GCfCsF,GAAcC,aAAgB,CACzChc,YLwCgC,WAGT,IAFvBgD,EAEsB,uDAFd4Y,GACRzB,EACsB,uCACtB,OAAQA,EAAO7e,MACb,KAAKwF,EACH,OAAO,6BAAKkC,GAAZ,IAAmByC,wBAAwB,IAE7C,KAAK1E,EACH,OAAO,6BACFiC,GADL,IAEE0C,uBAAuB,EACvBF,gBAAiB2U,EAAOrY,MACxB2D,wBAAwB,IAG5B,KAAKzE,EACH,OAAO,6BACF4a,IADL,IAEElW,uBAAuB,EACvBC,qBAAsBwU,EAAOjY,QAGjC,KAAKZ,EACH,OAAO,6BACF0B,GADL,IAEE8T,kBAAmBhX,KAAKub,MACtBvb,KAAKC,UAAUiD,EAAMwC,kBACrB6I,MAAK,SAACnT,GAAD,OAAuBA,EAAKkI,MAAQ+W,EAAO9W,QAGtD,KAAK9B,EACH,OAAO,6BACFyB,GADL,IAEE8T,kBAAmB,OAGvB,KAAK7V,EACH,OAAO,6BACF+B,GADL,IAEED,iBAAiB,GAAD,oBACXC,EAAMD,kBADK,CAEd,aAAIC,EAAMwC,iBAAiB6I,MAAK,SAACnT,GAAD,OAAUA,EAAKkI,MAAQ+W,EAAO9W,UAIpE,KAAKhC,EACH,OAAO,6BACF2B,GADL,IAEEuK,WAAYvK,EAAMD,iBAAiBuS,QACjC,SAACC,EAAKpS,GAAN,OAAaoS,EAAMpS,EAAGuB,QACtB,KAIN,KAAKvD,EACH,OAAO,6BACF6B,GADL,IAEED,iBACEC,EAAMD,iBAAiBO,QACY,QAAnCN,EAAMD,iBAAiB,GAAGzH,KACtB,CACE0H,EAAMwC,gBAAgB6I,MAAK,SAACnT,GAAD,OAAUA,EAAKkI,MAAQ+W,EAAO9W,OACzD4Y,OAAOjZ,EAAMD,iBAAiBmZ,MAAM,IACtC,CACElZ,EAAMwC,gBAAgB6I,MAAK,SAACnT,GAAD,OAAUA,EAAKkI,MAAQ+W,EAAO9W,OACzD4Y,OAAOjZ,EAAMD,oBAGzB,KAAK3B,EACH,OAAO,6BACF4B,GADL,IAEED,iBAAkB,aAAIC,EAAMD,kBAAkBwE,KAAI,SAACrM,EAAM0a,GACvD,OAAIA,IAAQuE,EAAOhO,UACV,aAAInJ,EAAMD,kBAAkBsL,MACjC,SAACnT,EAAM0a,GAAP,OAAeA,IAAQuE,EAAO/N,cAEvBwJ,IAAQuE,EAAO/N,WACjB,aAAIpJ,EAAMD,kBAAkBsL,MACjC,SAACnT,EAAM0a,GAAP,OAAeA,IAAQuE,EAAOhO,aAEpBjR,OAIpB,KAAKgG,EACH,OAAO,6BACF8B,GADL,IAEED,iBAAkB,aAAIC,EAAMD,kBAAkBG,QAC5C,SAAChI,EAAM4Q,GAAP,OAAiBA,IAAUqO,EAAOrO,WAIxC,KAAKtK,EACH,OAAO,6BACFwB,GADL,IAEED,iBAAkB,KAGtB,QACE,OAAOC,IK3IX4F,MJoB0B,WAGT,IAFjB5F,EAEgB,uDAFR4Y,GACRzB,EACgB,uCAChB,OAAQA,EAAO7e,MACb,KAAK6P,GACH,OAAO,6BAAKnI,GAAZ,IAAmByK,oBAAoB,IAEzC,KAAKrC,GACH,OAAO,6BACFpI,GADL,IAEEwK,mBAAmB,EACnB5E,MAAOuR,EAAOvR,MACd6E,oBAAoB,EACpB5E,oBAAoB,IAGxB,KAAK0C,GACH,OAAO,6BACFvI,GADL,IAEEkW,WAAYiB,EAAOvR,QAGvB,KAAKyC,GACH,OAAO,6BACFuQ,IADL,IAEEpO,mBAAmB,EACnB1E,iBAAkBqR,EAAOjY,QAG7B,KAAKoJ,GACH,OAAO,6BACFtI,GADL,IAEE6F,oBAAoB,IAGxB,KAAK2C,GACH,OAAO,6BACFxI,GADL,IAEEkW,WAAY,OAGhB,QACE,OAAOlW,II9DXoH,KHyCyB,WAGT,IAFhBpH,EAEe,uDAFP4Y,GACRzB,EACe,uCACf,OAAQA,EAAO7e,MACb,KAAK4N,GACH,OAAO,6BAAKlG,GAAZ,IAAmBgH,qBAAqB,EAAM0G,eAAe,IAE/D,KAAKvH,GACH,OAAO,6BACFnG,GADL,IAEEiH,oBAAoB,EACpBD,qBAAqB,EACrBmI,wBAAwB,IAG5B,KAAK/I,GACH,OAAO,6BACFpG,GADL,IAEEiH,oBAAoB,EACpB0G,kBAAmBwJ,EAAOjY,QAG9B,KAAKmH,GACH,OAAO,6BACFrG,GADL,IAEEiH,oBAAoB,EACpBD,qBAAqB,EACrB2I,uBAAuB,IAG3B,KAAK/I,GACH,OAAO,6BACF5G,GADL,IAEEoH,KAAM,CACJlK,MAAOia,EAAO/P,KAAKlK,MACnBzE,KAAM0e,EAAO/P,KAAK3O,QAIxB,KAAK6N,GACH,OAAO,6BACFtG,GADL,IAEEiH,oBAAoB,EACpBD,qBAAqB,EACrB8R,qBAAqB,EACrB/J,qBAAqB,IAGzB,KAAKvI,GACH,OAAO,6BACFxG,GADL,IAEEiH,oBAAoB,EACpBD,qBAAqB,EACrBM,2BAA2B,IAG/B,KAAKb,GACH,OAAO,gBACFmS,IAGP,KAAKlS,GACH,OAAO,6BACF1G,GADL,IAEEiH,oBAAoB,EACpBD,qBAAqB,EACrBgI,gCAAgC,IAGpC,KAAKzI,GACH,OAAO,6BACFvG,GADL,IAEEiH,oBAAoB,EACpBD,qBAAqB,EACrByG,sBAAsB,IAG1B,KAAK5G,GACH,OAAO,6BACF7G,GADL,IAEE0P,aAAa,IAGjB,KAAK5I,GACH,OAAO,6BACF9G,GADL,IAEE0P,aAAa,EACbC,uBAAuB,IAG3B,KAAKhJ,GACH,OAAO,6BACF3G,GADL,IAEE0N,eAAe,IAGnB,KAAK3G,GACH,OAAO,6BACF/G,GADL,IAEEiH,oBAAoB,IAGxB,QACE,OAAOjH,IGhJXqV,KFcuB,WAAmD,IAAlDrV,EAAiD,uDAAzC4Y,GAAczB,EAA2B,uCACzE,OAAQA,EAAO7e,MACb,KAAKsc,GACH,OAAO,6BACF5U,GADL,IAEEwT,aAAa,EACbC,UAAU,IAGd,KAAKoB,GACH,OAAO,6BACF7U,GADL,IAEEwT,aAAa,EACbC,UAAU,IAGd,KAAKqB,GACH,OAAO,gBACF8D,IAGP,KAAK7D,GACH,OAAO,6BACF/U,GADL,IAEEsV,OAAQ6B,EAAOxG,QAAQ2E,OACvBhC,MAAO6D,EAAOxG,QAAQ2C,MACtBC,WAAY4D,EAAOxG,QAAQ4C,aAG/B,QACE,OAAOvT,IE3CXoT,SDa2B,WAGvB,IAFJpT,EAEG,uDAFK4Y,GACRzB,EACG,uCACH,OAAQA,EAAO7e,MACb,KAAKyX,GACH,OAAO,6BACF/P,GADL,IAEEwT,aAAa,EACbC,UAAU,IAGd,KAAKzD,GACH,OAAO,6BACFhQ,GADL,IAEEwT,aAAa,EACbC,UAAU,IAGd,KAAKxD,GACH,OAAO,gBACF2I,IAGP,KAAK1I,GACH,OAAO,6BACFlQ,GADL,IAEEqT,WAAY8D,EAAOxG,QAAQ2E,OAC3BhC,MAAO6D,EAAOxG,QAAQ2C,MACtBC,WAAY4D,EAAOxG,QAAQ4C,aAG/B,QACE,OAAOvT,ME9CPmZ,IAHFC,OAAD,sCACDC,MAGAC,aACEC,KACAhC,G3CuNkB,6C2CvNOpC,GAAoB,WAC7CoC,G3CuN0B,yC2CvNOjH,GAAiB,aAIzCqH,GAAQ6B,aAAYT,GAAaI,ICD9CM,IAAS1H,OACP,cAAC,IAAM2H,WAAP,UACE,cAAC,KAAD,CAAU/B,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAegC,SAAS,eAAxB,SACE,cAAC,GAAD,UAINhhB,SAAS+M,eAAe,U,mBC1B1BlO,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,YAAc,gCAAgC,cAAgB,oC,mBCAlJD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,cAAgB,sCAAsC,eAAiB,uCAAuC,cAAgB,sCAAsC,KAAO,+B,mBCAjOD,EAAOC,QAAU,CAAC,qBAAuB,qCAAqC,aAAe,6BAA6B,cAAgB,8BAA8B,YAAc,4BAA4B,eAAiB,+BAA+B,cAAgB,8BAA8B,aAAe,6BAA6B,QAAU,wBAAwB,iBAAmB,iCAAiC,OAAS,uBAAuB,cAAgB,8BAA8B,UAAY,4B,mBCA5gBD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,cAAgB,uCAAuC,eAAiB,wCAAwC,cAAgB,uCAAuC,KAAO,gC,mBCArOD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,WAAa,mC","file":"static/js/main.7cd0048b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"loader_loaderContainer__iANE0\",\"loader\":\"loader_loader__2zbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3e_03\",\"button\":\"modal_button__2Z9Vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"digits\":\"order-details_digits__3l1Gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderTape\":\"feed_orderTape__AFtKN\",\"page\":\"feed_page__2j9i1\",\"sections\":\"feed_sections__2B_p3\",\"orderTable\":\"feed_orderTable__Q2WKd\",\"orderInfoContainer\":\"feed_orderInfoContainer__st88w\",\"orderInfo\":\"feed_orderInfo__1QhPp\",\"orderList\":\"feed_orderList__1m_C3\",\"activeList\":\"feed_activeList__2GKA3\",\"doneContainer\":\"feed_doneContainer__4aywr\",\"digits\":\"feed_digits__2MWbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-modal_container__1-uFG\",\"number\":\"order-modal_number__3iV4M\",\"ingredientsList\":\"order-modal_ingredientsList__1Eon8\",\"ingredientContainer\":\"order-modal_ingredientContainer__1oFZg\",\"pictureContainer\":\"order-modal_pictureContainer__3eGAm\",\"picture\":\"order-modal_picture__5FVFM\",\"priceContainer\":\"order-modal_priceContainer__C3Ntm\",\"footer\":\"order-modal_footer__2jbq2\",\"tagContainer\":\"order-modal_tagContainer__1Er_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3k6hE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"constructor-ingredient_ingredient__3HS3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__1GZwK\",\"message\":\"home_message__1EtCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-page_container__QnIrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ingredient-details_title__1KnFY\",\"nutrition\":\"ingredient-details_nutrition__JH_wp\",\"nutrient\":\"ingredient-details_nutrient__32MUB\",\"pageContainer\":\"ingredient-details_pageContainer__2J1FB\",\"pageTitle\":\"ingredient-details_pageTitle__3zuWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-page_container__1NQhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"user-order-page_container__1JnQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__AgVVd\",\"options\":\"burger-ingredients_options__2MQ0I\",\"title\":\"burger-ingredients_title__Dk04L\",\"layer\":\"burger-ingredients_layer__2F3hR\",\"component\":\"burger-ingredients_component__22k19\",\"item\":\"burger-ingredients_item__3u6q8\",\"tabs\":\"burger-ingredients_tabs__y1Zok\",\"list\":\"burger-ingredients_list__2R2Nu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1Nkvz\",\"logo\":\"app-header_logo__3o_9a\",\"navigation\":\"app-header_navigation__17uiX\",\"item\":\"app-header_item__3yYKh\",\"link\":\"app-header_link__54OsS\",\"activeLink\":\"app-header_activeLink__2acIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profile_form__1A1NT\",\"profilePageContainer\":\"profile_profilePageContainer__3nuLb\",\"navContainer\":\"profile_navContainer__1kKh6\",\"formContainer\":\"profile_formContainer__Ad4Ui\",\"navLinkList\":\"profile_navLinkList__1eHSs\",\"inputContainer\":\"profile_inputContainer__3nQWK\",\"linkContainer\":\"profile_linkContainer__2JEaU\",\"comment\":\"profile_comment__1Ugx6\",\"buttonsContainer\":\"profile_buttonsContainer__C4vnd\",\"button\":\"profile_button__3IwwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkContainer\":\"order-card_linkContainer__3AFxU\",\"container\":\"order-card_container__egHEk\",\"metadata\":\"order-card_metadata__1TqY6\",\"ingredients\":\"order-card_ingredients__1fT2y\",\"orderData\":\"order-card_orderData__3cL7F\",\"listItem\":\"order-card_listItem__1DZrq\",\"picture\":\"order-card_picture__2rw1y\",\"counter\":\"order-card_counter__1YQ7R\",\"priceContainer\":\"order-card_priceContainer__2xLBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__AdB5a\",\"innerList\":\"burger-constructor_innerList__B7mGP\",\"ingredientList\":\"burger-constructor_ingredientList__1a8X2\",\"ingredient\":\"burger-constructor_ingredient__2BCmA\",\"confirmationZone\":\"burger-constructor_confirmationZone__CWCB8\",\"onHover\":\"burger-constructor_onHover__2i6Qp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__1NIH4\",\"formContainer\":\"login_formContainer__3oYgA\",\"inputContainer\":\"login_inputContainer__3EWba\",\"linkContainer\":\"login_linkContainer__Muz4C\",\"link\":\"login_link__2O7dq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"register_form__3ikjK\",\"formContainer\":\"register_formContainer__1iXbO\",\"inputContainer\":\"register_inputContainer__230Pc\",\"linkContainer\":\"register_linkContainer__3C4Tn\",\"link\":\"register_link__xj9Zs\"};","import React, { FC } from \"react\";\r\nimport { Logo } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { BurgerIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ProfileIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ListIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./app-header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AppHeader: FC = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <NavLink to={\"/\"} className={styles.logo} exact={true}>\r\n        <Logo />\r\n      </NavLink>\r\n      <nav>\r\n        <ul className={styles.navigation}>\r\n          <li className={styles.item}>\r\n            <NavLink to={\"/\"} activeClassName={`${styles.activeLink}`} exact={true} className={`${styles.link}  pt-4 pb-4 pl-5 pb-5`}>\r\n              <BurgerIcon type=\"primary\" />\r\n              <p className=\"text text_type_main-default pl-2\">Конструктор</p>\r\n            </NavLink>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <NavLink to={\"/feed\"} activeClassName={`${styles.activeLink}`} exact={true} className={`${styles.link}`}>\r\n              <ListIcon type=\"primary\" />\r\n              <p className=\"text text_type_main-default pl-2\">\r\n                Лента заказов\r\n              </p>\r\n            </NavLink>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <NavLink to={\"/profile\"}  activeClassName={`${styles.activeLink}`} className={`${styles.link}`}>\r\n              <ProfileIcon type=\"primary\" />\r\n              <p className=\"text text_type_main-default pl-2\">\r\n                Личный кабинет\r\n              </p>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import {\r\n  TIngredient,\r\n  TOrder,\r\n  TServerOrder,\r\n  TSuccessfulRegisterReply,\r\n  TSuccessfulUpdateTokensReply,\r\n} from \"./types\";\r\n\r\nexport const burgerExample: TIngredient[] = [\r\n  {\r\n    _id: \"60d3b41abdacab0026a733c6\",\r\n    name: \"Краторная булка N-200i\",\r\n    type: \"bun\",\r\n    proteins: 80,\r\n    fat: 24,\r\n    carbohydrates: 53,\r\n    calories: 420,\r\n    price: 1255,\r\n    image: \"https://code.s3.yandex.net/react/code/bun-02.png\",\r\n    image_mobile: \"https://code.s3.yandex.net/react/code/bun-02-mobile.pn\",\r\n    image_large: \"https://code.s3.yandex.net/react/code/bun-02-large.png\",\r\n    __v: 0,\r\n  },\r\n  {\r\n    _id: \"60d3b41abdacab0026a733c9\",\r\n    name: \"Мясо бессмертных моллюсков Protostomia\",\r\n    type: \"main\",\r\n    proteins: 433,\r\n    fat: 244,\r\n    carbohydrates: 33,\r\n    calories: 420,\r\n    price: 1337,\r\n    image: \"https://code.s3.yandex.net/react/code/meat-02.png\",\r\n    image_mobile: \"https://code.s3.yandex.net/react/code/meat-02-mobile.png\",\r\n    image_large: \"https://code.s3.yandex.net/react/code/meat-02-large.png\",\r\n    __v: 0,\r\n  },\r\n  {\r\n    _id: \"60d3b41abdacab0026a733cc\",\r\n    name: \"Соус Spicy-X\",\r\n    type: \"sauce\",\r\n    proteins: 30,\r\n    fat: 20,\r\n    carbohydrates: 40,\r\n    calories: 30,\r\n    price: 90,\r\n    image: \"https://code.s3.yandex.net/react/code/sauce-02.png\",\r\n    image_mobile: \"https://code.s3.yandex.net/react/code/sauce-02-mobile.png\",\r\n    image_large: \"https://code.s3.yandex.net/react/code/sauce-02-large.png\",\r\n    __v: 0,\r\n  },\r\n  {\r\n    _id: \"60d3b41abdacab0026a733d0\",\r\n    name: \"Хрустящие минеральные кольца\",\r\n    type: \"main\",\r\n    proteins: 808,\r\n    fat: 689,\r\n    carbohydrates: 609,\r\n    calories: 986,\r\n    price: 300,\r\n    image: \"https://code.s3.yandex.net/react/code/mineral_rings.png\",\r\n    image_mobile:\r\n      \"https://code.s3.yandex.net/react/code/mineral_rings-mobile.png\",\r\n    image_large:\r\n      \"https://code.s3.yandex.net/react/code/mineral_rings-large.png\",\r\n    __v: 0,\r\n  },\r\n  {\r\n    _id: \"60d3b41abdacab0026a733d0\",\r\n    name: \"Хрустящие минеральные кольца\",\r\n    type: \"main\",\r\n    proteins: 808,\r\n    fat: 689,\r\n    carbohydrates: 609,\r\n    calories: 986,\r\n    price: 300,\r\n    image: \"https://code.s3.yandex.net/react/code/mineral_rings.png\",\r\n    image_mobile:\r\n      \"https://code.s3.yandex.net/react/code/mineral_rings-mobile.png\",\r\n    image_large:\r\n      \"https://code.s3.yandex.net/react/code/mineral_rings-large.png\",\r\n    __v: 0,\r\n  },\r\n  {\r\n    _id: \"60d3b41abdacab0026a733d4\",\r\n    name: \"Сыр с астероидной плесенью\",\r\n    type: \"main\",\r\n    proteins: 84,\r\n    fat: 48,\r\n    carbohydrates: 420,\r\n    calories: 3377,\r\n    price: 4142,\r\n    image: \"https://code.s3.yandex.net/react/code/cheese.png\",\r\n    image_mobile: \"https://code.s3.yandex.net/react/code/cheese-mobile.png\",\r\n    image_large: \"https://code.s3.yandex.net/react/code/cheese-large.png\",\r\n    __v: 0,\r\n  },\r\n  {\r\n    _id: \"60d3b41abdacab0026a733c9\",\r\n    name: \"Мясо бессмертных моллюсков Protostomia\",\r\n    type: \"main\",\r\n    proteins: 433,\r\n    fat: 244,\r\n    carbohydrates: 33,\r\n    calories: 420,\r\n    price: 1337,\r\n    image: \"https://code.s3.yandex.net/react/code/meat-02.png\",\r\n    image_mobile: \"https://code.s3.yandex.net/react/code/meat-02-mobile.png\",\r\n    image_large: \"https://code.s3.yandex.net/react/code/meat-02-large.png\",\r\n    __v: 0,\r\n  },\r\n];\r\n\r\nexport const orderExample: TServerOrder = {\r\n  ingredients: [\r\n    \"60d3b41abdacab0026a733c6\",\r\n    \"60d3b41abdacab0026a733cc\",\r\n    \"60d3b41abdacab0026a733c9\",\r\n    \"60d3b41abdacab0026a733d0\",\r\n    \"60d3b41abdacab0026a733c9\",\r\n    \"60d3b41abdacab0026a733d0\",\r\n    \"60d3b41abdacab0026a733d0\",\r\n    \"60d3b41abdacab0026a733d0\",\r\n    \"60d3b41abdacab0026a733c9\",\r\n  ],\r\n  _id: \"\",\r\n  status: \"done\",\r\n  name: 'Interstellar бургер',\r\n  number: 342352,\r\n  createdAt: new Date(\"2021-06-23T14:43:22.587Z\"),\r\n  updatedAt: new Date(\"2021-06-23T14:43:22.603Z\"),\r\n};\r\n\r\nexport function getCookie(name: string) {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" +\r\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\r\n        \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string, props?: any) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == \"number\" && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + \"=\" + value;\r\n  for (const propName in props) {\r\n    updatedCookie += \"; \" + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += \"=\" + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, \"\", { expires: -1 });\r\n}\r\n\r\nexport const setTokens = (res: TSuccessfulUpdateTokensReply) => {\r\n  let accessToken, refreshToken;\r\n  if (res.accessToken.indexOf(\"Bearer\") === 0) {\r\n    accessToken = res.accessToken.split(\"Bearer \")[1];\r\n  }\r\n  refreshToken = res.refreshToken;\r\n  if (accessToken && refreshToken) {\r\n    setCookie(\"accessToken\", accessToken, { expires: 1200 });\r\n    setCookie(\"refreshToken\", refreshToken);\r\n  }\r\n};\r\n\r\ntype TOptions = {\r\n  hour: \"2-digit\" | \"numeric\";\r\n  minute: \"2-digit\" | \"numeric\";\r\n  timeZoneName: \"short\" | \"long\";\r\n};\r\n\r\nconst formatTime = (date: Date) => {\r\n  const newDate = new Date(date);\r\n  const options: TOptions = {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    timeZoneName: \"short\",\r\n  };\r\n  return newDate.toLocaleString(\"ru\", options);\r\n};\r\n\r\nconst getDiff = (date: Date) => {\r\n  var today = new Date();\r\n  var createdOn = new Date(date);\r\n  var msInDay = 24 * 60 * 60 * 1000;\r\n  createdOn.setHours(0, 0, 0, 0);\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  var diff: number = (+today - +createdOn) / msInDay;\r\n\r\n  let result = (diff: number): string => {\r\n    if (diff === 0) {\r\n      return \"Сегодня\";\r\n    } else if (diff === 1) {\r\n      return \"Вчера\";\r\n    } else if (diff > 1 && diff < 5) {\r\n      return `${diff} дня назад`;\r\n    } else {\r\n      return `${diff} дней назад`;\r\n    }\r\n  };\r\n  return result(diff);\r\n};\r\n\r\nexport function parseTime(date: Date): string {\r\n  let diff = getDiff(date);\r\n  let time = formatTime(date);\r\n\r\n  return `${diff}, ${time}`;\r\n}\r\n\r\n\r\nexport const WS_URL = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const WS_URL_PRIVATE = 'wss://norma.nomoreparties.space/orders';\r\n","import {\r\n  TIngredient,\r\n  TRegisterBody,\r\n  TResetPwdBody,\r\n  TResponseBody,\r\n  TSignInBody,\r\n} from \"../../services/utils/types\";\r\nimport { getCookie } from \"../../services/utils/utils\";\r\n\r\nconst baseUrl = `https://norma.nomoreparties.space/api`;\r\n\r\nexport const apiConfig = {\r\n  logoutUrl: `${baseUrl}/auth/logout`,\r\n  updateTokenUrl: `${baseUrl}/auth/token`,\r\n  getUserUrl: `${baseUrl}/auth/user`,\r\n  signInUrl: `${baseUrl}/auth/login`,\r\n  registerUrl: `${baseUrl}/auth/register`,\r\n  passwordResetUrlStep2: `${baseUrl}/password-reset/reset`,\r\n  passwordResetUrlStep1: `${baseUrl}/password-reset`,\r\n  ingredientsUrl: `${baseUrl}/ingredients`,\r\n  ordersUrl: `${baseUrl}/orders`,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\nconst getResponse = (res: Response) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(res.status);\r\n};\r\n\r\nexport const getIngredients = async (): Promise<\r\n  TResponseBody<\"data\", TIngredient[]>\r\n> => {\r\n  const res = await fetch(apiConfig.ingredientsUrl, {\r\n    headers: apiConfig.headers,\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const submitOrder = async (userOrder: string[], accessToken: string) => {\r\n  const res = await fetch(apiConfig.ordersUrl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: \"Bearer \" + accessToken,\r\n    },\r\n    body: JSON.stringify({\r\n      ingredients: userOrder,\r\n    }),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const submitUserEmail = async (email: string) => {\r\n  const res = await fetch(apiConfig.passwordResetUrlStep1, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify({\r\n      email,\r\n    }),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const submitResetPwd = async (RequestBody: TResetPwdBody) => {\r\n  const res = await fetch(apiConfig.passwordResetUrlStep2, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(RequestBody),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const registerRequest = async (RequestBody: TRegisterBody) => {\r\n  const res = await fetch(apiConfig.registerUrl, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(RequestBody),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const signInRequest = async (RequestBody: TSignInBody) => {\r\n  const res = await fetch(apiConfig.signInUrl, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(RequestBody),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const getUserRequest = async (accessToken: string) => {\r\n  const res = await fetch(apiConfig.getUserUrl, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const getUserOrders = async () => {\r\n  let accessToken = getCookie(\"accessToken\");\r\n  const res = await fetch(apiConfig.ordersUrl, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      authorization: \"Bearer \" + accessToken,\r\n    },\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const updateTokenRequest = async (refreshToken: string) => {\r\n  const res = await fetch(apiConfig.updateTokenUrl, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify({ token: refreshToken }),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const logoutRequest = async (accessToken: string) => {\r\n  const res = await fetch(apiConfig.logoutUrl, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify({ token: accessToken }),\r\n  });\r\n  return getResponse(res);\r\n};\r\n\r\nexport const changeCredentialsRequest = async (\r\n  accessToken: string,\r\n  newCredentials: TRegisterBody\r\n) => {\r\n  const res = await fetch(apiConfig.getUserUrl, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + accessToken,\r\n    },\r\n    body: JSON.stringify(newCredentials),\r\n  });\r\n  return getResponse(res);\r\n};\r\n","import { AppDispatch, AppThunk } from \"../..\";\r\nimport { getIngredients } from \"../../components/api/api\";\r\nimport { TIngredient } from \"../utils/types\";\r\n\r\nexport const GET_ITEMS_REQUEST: \"GET_ITEMS_REQUEST\" = \"GET_ITEMS_REQUEST\";\r\nexport const GET_ITEMS_SUCCESS: \"GET_ITEMS_SUCCESS\" = \"GET_ITEMS_SUCCESS\";\r\nexport const GET_ITEMS_FAILED: \"GET_ITEMS_FAILED\" = \"GET_ITEMS_FAILED\";\r\nexport const ADD_TO_CONSTRUCTOR: \"ADD_TO_CONSTRUCTOR\" = \"ADD_TO_CONSTRUCTOR\";\r\nexport const REMOVE_FROM_CONSTRUCTOR: \"REMOVE_FROM_CONSTRUCTOR\" =\r\n  \"REMOVE_FROM_CONSTRUCTOR\";\r\nexport const REPLACE_BUN: \"REPLACE_BUN\" = \"REPLACE_BUN\";\r\nexport const MOVE_ITEM: \"MOVE_ITEM\" = \"MOVE_ITEM\";\r\nexport const RECALCULATE_PRICE: \"RECALCULATE_PRICE\" = \"RECALCULATE_PRICE\";\r\nexport const SEND_TO_MODAL: \"SEND_TO_MODAL\" = \"SEND_TO_MODAL\";\r\nexport const RESET_CURRENT_INGREDIENT: \"RESET_CURRENT_INGREDIENT\" =\r\n  \"RESET_CURRENT_INGREDIENT\";\r\nexport const RESET_CONSTRUCTOR: \"RESET_CONSTRUCTOR\" = \"RESET_CONSTRUCTOR\";\r\n\r\nexport interface IGetItemsRequest {\r\n  readonly type: typeof GET_ITEMS_REQUEST;\r\n}\r\n\r\nexport interface IGetItemsSuccess {\r\n  readonly type: typeof GET_ITEMS_SUCCESS;\r\n  readonly items: TIngredient[];\r\n}\r\n\r\nexport interface IGetItemsFailed {\r\n  readonly type: typeof GET_ITEMS_FAILED;\r\n  readonly error: number;\r\n}\r\n\r\nexport interface IAddToConstructor {\r\n  readonly type: typeof ADD_TO_CONSTRUCTOR;\r\n  readonly id: string;\r\n}\r\n\r\nexport interface IRemoveFromConstructor {\r\n  readonly type: typeof REMOVE_FROM_CONSTRUCTOR;\r\n  readonly index: number;\r\n}\r\n\r\nexport interface IReplaceBun {\r\n  readonly type: typeof REPLACE_BUN;\r\n  readonly id: string;\r\n}\r\n\r\nexport interface IMoveItem {\r\n  readonly type: typeof MOVE_ITEM;\r\n  readonly dragIndex: number;\r\n  readonly hoverIndex: number;\r\n}\r\n\r\nexport interface IRecalculatePrice {\r\n  readonly type: typeof RECALCULATE_PRICE;\r\n}\r\n\r\nexport interface ISendToModal {\r\n  readonly type: typeof SEND_TO_MODAL;\r\n  readonly id: string;\r\n}\r\n\r\nexport interface IResetCurrentIngredient {\r\n  readonly type: typeof RESET_CURRENT_INGREDIENT;\r\n}\r\n\r\nexport interface IResetConstructor {\r\n  readonly type: typeof RESET_CONSTRUCTOR;\r\n}\r\n\r\nexport type TIngredientActions =\r\n  | IGetItemsRequest\r\n  | IGetItemsSuccess\r\n  | IGetItemsFailed\r\n  | IAddToConstructor\r\n  | IRemoveFromConstructor\r\n  | IReplaceBun\r\n  | IMoveItem\r\n  | IRecalculatePrice\r\n  | ISendToModal\r\n  | IResetConstructor\r\n  | IResetCurrentIngredient;\r\n\r\nexport const getItemsRequest = (): IGetItemsRequest => ({\r\n  type: GET_ITEMS_REQUEST,\r\n});\r\n\r\nexport const getItemsSuccess = (items: TIngredient[]): IGetItemsSuccess => ({\r\n  type: GET_ITEMS_SUCCESS,\r\n  items,\r\n});\r\n\r\nexport const getItemsFailed = (error: number): IGetItemsFailed => ({\r\n  type: GET_ITEMS_FAILED,\r\n  error,\r\n});\r\n\r\nexport const addToConstructor = (id: string): IAddToConstructor => ({\r\n  type: ADD_TO_CONSTRUCTOR,\r\n  id,\r\n});\r\n\r\nexport const recalculatePrice = (): IRecalculatePrice => ({\r\n  type: RECALCULATE_PRICE,\r\n});\r\n\r\nexport const replaceBun = (id: string): IReplaceBun => ({\r\n  type: REPLACE_BUN,\r\n  id,\r\n});\r\n\r\nexport const sendToModal = (id: string): ISendToModal => ({\r\n  type: SEND_TO_MODAL,\r\n  id,\r\n});\r\n\r\nexport const resetCurrentIngredient = (): IResetCurrentIngredient => ({\r\n  type: RESET_CURRENT_INGREDIENT,\r\n});\r\n\r\nexport const moveItem = (dragIndex: number, hoverIndex: number): IMoveItem => ({\r\n  type: MOVE_ITEM,\r\n  dragIndex,\r\n  hoverIndex,\r\n});\r\n\r\nexport const removeFromConstructor = (\r\n  index: number\r\n): IRemoveFromConstructor => ({\r\n  type: REMOVE_FROM_CONSTRUCTOR,\r\n  index,\r\n});\r\n\r\nexport const resetConstructor = (): IResetConstructor => ({\r\n  type: RESET_CONSTRUCTOR,\r\n});\r\n\r\nexport const getItems: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(getItemsRequest());\r\n  getIngredients()\r\n    .then((res) => {\r\n      dispatch(getItemsSuccess(res.data));\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getItemsFailed(err));\r\n    });\r\n};\r\n","import { TUseParams } from './../utils/types';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom';\r\nimport type { RootState, AppDispatch, AppThunk } from '../../index';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch & AppThunk>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\nexport const useAppParams = () => useParams<TUseParams>()\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./ingredient.module.css\";\r\nimport { Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { IngProps, TLocationState } from \"../../services/utils/interfaces\";\r\nimport { useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Ingredient: React.FC<IngProps> = (props) => {\r\n  const [counter, setCounter] = useState(0);\r\n  const location = useLocation<TLocationState>();\r\n  const { constructorItems } = useAppSelector((state) => state.ingredients);\r\n\r\n  useEffect(() => {\r\n    setCounter(constructorItems.filter((el) => el._id === props.id).length);\r\n  }, [constructorItems, props]);\r\n\r\n  const [{ opacity }, ingRef] = useDrag({\r\n    type: \"item\",\r\n    item: {\r\n      id: props.id,\r\n      ingType: props.ingType,\r\n    },\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.3 : 1,\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Link\r\n      className={styles.cardContainer}\r\n      to={{\r\n        pathname: `/ingredients/${props.id}`,\r\n        state: { from: location.pathname, background: location },\r\n      }}\r\n    >\r\n      <div ref={ingRef} className={styles.card} style={{ opacity }}>\r\n        <img\r\n          className={`${styles.image} ml-4 mr-4`}\r\n          src={props.image}\r\n          alt={props.name}\r\n        />\r\n        {counter > 0 && <Counter count={counter} size=\"default\" />}\r\n        <div className={`${styles.price} mt-1 mb-1`}>\r\n          <p className={`text text_type_digits-default ${styles.value}`}>\r\n            {props.price}\r\n          </p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n        <p className={`text text_type_main-default ${styles.description}`}>\r\n          {props.name}\r\n        </p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","export default __webpack_public_path__ + \"static/media/loading.a62ac9e6.png\";","import React from \"react\";\r\nimport styles from \"./loader.module.css\";\r\nimport loading from \"../../images/loading.png\";\r\n\r\nexport const Loader: React.FC = () => {\r\n  return (\r\n    <div className={styles.loaderContainer}>\r\n      <img className={styles.loader} src={loading} alt=\"Please wait...\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {\r\n  sendToModal,\r\n  resetCurrentIngredient,\r\n} from \"../../services/actions/ingredients\";\r\nimport styles from \"./burger-ingredients.module.css\";\r\nimport Ingredient from \"../ingredient/ingredient\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport Modal from \"../modal/modal\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { TIngredient } from \"../../services/utils/types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Loader } from \"../loader/loader\";\r\n\r\nconst BurgerIngredients: React.FC = () => {\r\n  const [isModalOpened, setIsModalOpened] = useState<boolean>(false);\r\n  const [current, setCurrent] = useState<string>(\"one\");\r\n\r\n  const bunRef = useRef<HTMLHeadingElement | null>(null);\r\n  const sauceRef = useRef<HTMLHeadingElement | null>(null);\r\n  const mainRef = useRef<HTMLHeadingElement | null>(null);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems());\r\n  }, [dispatch]);\r\n\r\n  const {\r\n    ingredientItems,\r\n    ingredientItemsRequest,\r\n    ingredientItemsFailed,\r\n    ingredientItemsError,\r\n  } = useAppSelector((state) => state.ingredients);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpened(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpened(false);\r\n    dispatch(resetCurrentIngredient());\r\n    history.goBack();\r\n  };\r\n\r\n  const handleScroll = useCallback((e) => {\r\n    const mainBlockTopCoordinate = e.target.getBoundingClientRect().top;\r\n\r\n    const getTopCoordinate = (\r\n      ref: React.RefObject<HTMLHeadingElement> | null\r\n    ): number => {\r\n      if (ref !== null) return ref?.current?.getBoundingClientRect().top!;\r\n      else return 0;\r\n    };\r\n\r\n    const getDistance = (topCoordinate: number) => {\r\n      return Math.abs(topCoordinate - mainBlockTopCoordinate);\r\n    };\r\n\r\n    const sauceHeaderCoordinates = getTopCoordinate(sauceRef);\r\n    const mainHeaderCoordinates = getTopCoordinate(mainRef);\r\n    const bunHeaderCoordinates = getTopCoordinate(bunRef);\r\n\r\n    const closestBlockCoord = Math.min(\r\n      getDistance(sauceHeaderCoordinates)!,\r\n      getDistance(mainHeaderCoordinates)!,\r\n      getDistance(bunHeaderCoordinates)!\r\n    );\r\n\r\n    if (closestBlockCoord === getDistance(sauceHeaderCoordinates)) {\r\n      setCurrent(\"two\");\r\n    } else if (closestBlockCoord === getDistance(mainHeaderCoordinates)) {\r\n      setCurrent(\"three\");\r\n    } else setCurrent(\"one\");\r\n  }, []);\r\n\r\n  const renderIngredient = (el: TIngredient) => {\r\n    return (\r\n      <li\r\n        key={el._id}\r\n        className={styles.item}\r\n        onClick={() => dispatch(sendToModal(el._id))}\r\n      >\r\n        <Ingredient\r\n          ingType={el.type}\r\n          id={el._id}\r\n          image={el.image}\r\n          name={el.name}\r\n          price={el.price}\r\n        ></Ingredient>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const content = useMemo(() => {\r\n    if (ingredientItemsRequest) return <Loader />;\r\n    else if (ingredientItemsFailed)\r\n      return (\r\n        <p className={`${styles.message} mt-20 text text_type_main-large`}>\r\n          Произошла ошибка! Код ошибки: {ingredientItemsError}\r\n        </p>\r\n      );\r\n    else\r\n      return (\r\n        <div className={styles.options} onScroll={handleScroll}>\r\n          <div className={styles.layer}>\r\n            <h2\r\n              ref={bunRef}\r\n              className={`text text_type_main-medium ${styles.component} pt-10 pb-6`}\r\n            >\r\n              Булки\r\n            </h2>\r\n            <ul className={`${styles.list} pl-4 pr-2`}>\r\n              {ingredientItems\r\n                .filter((el) => el.type === \"bun\")\r\n                .map(renderIngredient)}\r\n            </ul>\r\n          </div>\r\n          <div className={styles.layer}>\r\n            <h2\r\n              ref={sauceRef}\r\n              className={`text text_type_main-medium ${styles.component} pt-10 pb-6`}\r\n            >\r\n              Соусы\r\n            </h2>\r\n            <ul className={`${styles.list} pl-4 pr-2`}>\r\n              {ingredientItems\r\n                .filter((el) => el.type === \"sauce\")\r\n                .map(renderIngredient)}\r\n            </ul>\r\n          </div>\r\n          <div className={styles.layer}>\r\n            <h2\r\n              ref={mainRef}\r\n              className={`text text_type_main-medium ${styles.component} pt-10 pb-6`}\r\n            >\r\n              Начинки\r\n            </h2>\r\n            <ul className={`${styles.list} pl-4 pr-2`}>\r\n              {ingredientItems\r\n                .filter((el) => el.type === \"main\")\r\n                .map(renderIngredient)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n  }, [\r\n    ingredientItemsRequest,\r\n    ingredientItems,\r\n    ingredientItemsError,\r\n    ingredientItemsFailed,\r\n    handleScroll,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <section className={styles.section}>\r\n        <h1 className={`text text_type_main-large ${styles.title} pt-10 pb-5`}>\r\n          Соберите бургер\r\n        </h1>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Tab\r\n            value=\"one\"\r\n            active={current === \"one\"}\r\n            onClick={(value) => {\r\n              setCurrent(value);\r\n              bunRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n            }}\r\n          >\r\n            Булки\r\n          </Tab>\r\n          <Tab\r\n            value=\"two\"\r\n            active={current === \"two\"}\r\n            onClick={(value) => {\r\n              setCurrent(value);\r\n              sauceRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n            }}\r\n          >\r\n            Соусы\r\n          </Tab>\r\n          <Tab\r\n            value=\"three\"\r\n            active={current === \"three\"}\r\n            onClick={(value) => {\r\n              setCurrent(value);\r\n              mainRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n            }}\r\n          >\r\n            Начинки\r\n          </Tab>\r\n        </div>\r\n        {content}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport styles from \"./modal-overlay.module.css\";\r\nimport { ModalProps } from \"../../services/utils/interfaces\";\r\n\r\nconst ModalOverlay: React.FC<ModalProps> = ({ onClose }) => {\r\n  const closeModalOnClick = () => {\r\n    onClose();\r\n  };\r\n  return <div onClick={closeModalOnClick} className={styles.overlay}></div>;\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport styles from \"./modal.module.css\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ModalProps } from \"../../services/utils/interfaces\";\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, onClose }) => {\r\n  useEffect(() => {\r\n    const closeModalOnEsc = (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\") onClose();\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", closeModalOnEsc);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModalOnEsc);\r\n    };\r\n  }, [onClose]);\r\n\r\n  return createPortal(\r\n    <>\r\n      <ModalOverlay onClose={onClose} />\r\n      <div className={styles.modal}>\r\n        <button onClick={onClose} className={`${styles.button} mr-10 mt-15`}>\r\n          <CloseIcon type=\"primary\" />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"modal\")!\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/done.4fc5d6f0.svg\";","import React from \"react\";\r\nimport { useAppSelector } from \"../../services/hooks/hooks\";\r\nimport doneImage from \"../../images/done.svg\";\r\nimport styles from \"./order-details.module.css\";\r\n\r\nconst OrderDetails: React.FC = () => {\r\n  const { order, submitOrderSuccess, submitOrderError } = useAppSelector(\r\n    (state) => state.order\r\n  );\r\n\r\n  if (submitOrderSuccess && order !== null) {\r\n    return (\r\n      <>\r\n        <span className={`${styles.digits} text text_type_digits-large mt-30`}>\r\n          {order.order.number}\r\n        </span>\r\n        <p className=\"text text_type_main-medium mt-8\">идентификатор заказа</p>\r\n        <img className=\"mt-15 mb-15\" src={doneImage} alt=\"Done!\" />\r\n        <p className=\"text text_type_main-medium mb-2\">\r\n          Ваш заказ начали готовить\r\n        </p>\r\n        <p className=\"text text_type_main-medium text_color_inactive mb-30\">\r\n          Дождитесь готовности на орбитальной станции\r\n        </p>\r\n      </>\r\n    );\r\n  } else\r\n    return (\r\n      <>\r\n        <span className={`${styles.digits} text text_type_digits-large mt-30`}>\r\n          ----\r\n        </span>\r\n        <p className=\"text text_type_main-medium mt-8 mb-8\">\r\n          Что-то пошло не так!\r\n        </p>\r\n        <p className=\"text text_type_main-medium mb-2\">\r\n          Возникла ошибка! Код ошибки: {submitOrderError}\r\n        </p>\r\n        <p className=\"text text_type_main-medium text_color_inactive mb-30\">\r\n          Пожалуйста, попробуйте ещё раз позднее\r\n        </p>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { AppDispatch, AppThunk } from \"../..\";\r\n\r\nimport {\r\n  changeCredentialsRequest,\r\n  getUserRequest,\r\n  logoutRequest,\r\n  registerRequest,\r\n  signInRequest,\r\n  submitResetPwd,\r\n  submitUserEmail,\r\n  updateTokenRequest,\r\n} from \"../../components/api/api\";\r\nimport { useAppDispatch } from \"../hooks/hooks\";\r\nimport {\r\n  TRegisterBody,\r\n  TResetPwdBody,\r\n  TSignInBody,\r\n  TSuccessfulGetUserReply,\r\n  TSuccessfulRegisterReply,\r\n  TSuccessfulReply,\r\n  TSuccessfulUpdateTokensReply,\r\n  TUser,\r\n} from \"../utils/types\";\r\nimport { deleteCookie, getCookie, setCookie, setTokens } from \"../utils/utils\";\r\n\r\nexport const SUBMIT_SERVER_REQUEST: \"SUBMIT_SERVER_REQUEST\" =\r\n  \"SUBMIT_SERVER_REQUEST\";\r\nexport const SUBMIT_USER_EMAIL_SUCCESS: \"SUBMIT_USER_EMAIL_SUCCESS\" =\r\n  \"SUBMIT_USER_EMAIL_SUCCESS\";\r\nexport const SUBMIT_SERVER_FAILED: \"SUBMIT_SERVER_FAILED\" =\r\n  \"SUBMIT_SERVER_FAILED\";\r\nexport const SUBMIT_PWD_RESET_SUCCESS: \"SUBMIT_PWD_RESET_SUCCESS\" =\r\n  \"SUBMIT_PWD_RESET_SUCCESS\";\r\nexport const SUBMIT_REGISTER_SUCCESS: \"SUBMIT_REGISTER_SUCCESS\" =\r\n  \"SUBMIT_REGISTER_SUCCESS\";\r\nexport const SUBMIT_SIGN_IN_SUCCESS: \"SUBMIT_SIGN_IN_SUCCESS\" =\r\n  \"SUBMIT_SIGN_IN_SUCCESS\";\r\nexport const SUBMIT_GET_USER_SUCCESS: \"SUBMIT_GET_USER_SUCCESS\" =\r\n  \"SUBMIT_GET_USER_SUCCESS\";\r\nexport const SUBMIT_UPDATE_TOKENS_SUCCESS: \"SUBMIT_UPDATE_TOKENS_SUCCESS\" =\r\n  \"SUBMIT_UPDATE_TOKENS_SUCCESS\";\r\nexport const SUBMIT_LOGOUT_SUCCESS: \"SUBMIT_LOGOUT_SUCCESS\" =\r\n  \"SUBMIT_LOGOUT_SUCCESS\";\r\nexport const SUBMIT_CHANGE_CREDENTIALS_SUCCESS: \"SUBMIT_CHANGE_CREDENTIALS_SUCCESS\" =\r\n  \"SUBMIT_CHANGE_CREDENTIALS_SUCCESS\";\r\nexport const NO_TOKENS: \"NO_TOKENS\" = \"NO_TOKENS\";\r\nexport const SET_USER: \"SET_USER\" = \"SET_USER\";\r\nexport const SUBMIT_CAN_RESET_PWD: \"SUBMIT_CAN_RESET_PWD\" =\r\n  \"SUBMIT_CAN_RESET_PWD\";\r\nexport const SUBMIT_CANNOT_RESET_PWD: \"SUBMIT_CANNOT_RESET_PWD\" =\r\n  \"SUBMIT_CANNOT_RESET_PWD\";\r\nexport const REMOVE_SERVER_ERROR: \"REMOVE_SERVER_ERROR\" = \"REMOVE_SERVER_ERROR\";\r\n\r\nexport interface ISubmitServerRequest {\r\n  readonly type: typeof SUBMIT_SERVER_REQUEST;\r\n}\r\n\r\nexport interface ISubmitUserEmailSuccess {\r\n  readonly type: typeof SUBMIT_USER_EMAIL_SUCCESS;\r\n  reply: TSuccessfulReply;\r\n}\r\n\r\nexport interface ISubmitServerFailed {\r\n  readonly type: typeof SUBMIT_SERVER_FAILED;\r\n  readonly error: number;\r\n}\r\n\r\nexport interface IRemoveServerError {\r\n  readonly type: typeof REMOVE_SERVER_ERROR;\r\n}\r\n\r\nexport interface ISubmitResetPwdSuccess {\r\n  readonly type: typeof SUBMIT_PWD_RESET_SUCCESS;\r\n  reply: TSuccessfulReply;\r\n}\r\n\r\nexport interface ISubmitRegisterSuccess {\r\n  readonly type: typeof SUBMIT_REGISTER_SUCCESS;\r\n  reply: TSuccessfulRegisterReply;\r\n}\r\n\r\nexport interface ISubmitSignInSuccess {\r\n  readonly type: typeof SUBMIT_SIGN_IN_SUCCESS;\r\n  reply: TSuccessfulRegisterReply;\r\n}\r\n\r\nexport interface ISubmitGetUserSuccess {\r\n  readonly type: typeof SUBMIT_GET_USER_SUCCESS;\r\n}\r\n\r\nexport interface ISubmitLogoutSuccess {\r\n  readonly type: typeof SUBMIT_LOGOUT_SUCCESS;\r\n}\r\n\r\nexport interface ISubmitUpdateTokensSuccess {\r\n  readonly type: typeof SUBMIT_UPDATE_TOKENS_SUCCESS;\r\n}\r\n\r\nexport interface ISubmitChangeCredentialsSuccess {\r\n  readonly type: typeof SUBMIT_CHANGE_CREDENTIALS_SUCCESS;\r\n}\r\n\r\nexport interface INoTokens {\r\n  readonly type: typeof NO_TOKENS;\r\n}\r\n\r\nexport interface ISubmitCanResetPwd {\r\n  readonly type: typeof SUBMIT_CAN_RESET_PWD;\r\n}\r\n\r\nexport interface ISubmitCannotResetPwd {\r\n  readonly type: typeof SUBMIT_CANNOT_RESET_PWD;\r\n}\r\n\r\nexport interface ISetUser {\r\n  readonly type: typeof SET_USER;\r\n  user: TUser;\r\n}\r\n\r\nexport type TUserActions =\r\n  | ISubmitServerRequest\r\n  | ISubmitServerFailed\r\n  | ISubmitUserEmailSuccess\r\n  | ISubmitResetPwdSuccess\r\n  | ISubmitRegisterSuccess\r\n  | ISubmitSignInSuccess\r\n  | ISubmitGetUserSuccess\r\n  | ISubmitLogoutSuccess\r\n  | ISubmitUpdateTokensSuccess\r\n  | ISubmitChangeCredentialsSuccess\r\n  | INoTokens\r\n  | ISubmitCanResetPwd\r\n  | ISubmitCannotResetPwd\r\n  | IRemoveServerError\r\n  | ISetUser;\r\n\r\nexport const submitRegisterSuccess = (\r\n  reply: TSuccessfulRegisterReply\r\n): ISubmitRegisterSuccess => ({\r\n  type: SUBMIT_REGISTER_SUCCESS,\r\n  reply,\r\n});\r\n\r\nexport const submitServerRequest = (): ISubmitServerRequest => ({\r\n  type: SUBMIT_SERVER_REQUEST,\r\n});\r\n\r\nexport const submitUserEmailSuccess = (\r\n  reply: TSuccessfulReply\r\n): ISubmitUserEmailSuccess => ({\r\n  type: SUBMIT_USER_EMAIL_SUCCESS,\r\n  reply,\r\n});\r\n\r\nexport const submitServerFailed = (error: number): ISubmitServerFailed => ({\r\n  type: SUBMIT_SERVER_FAILED,\r\n  error,\r\n});\r\n\r\nexport const removeServerError = (): IRemoveServerError => ({\r\n  type: REMOVE_SERVER_ERROR,\r\n});\r\n\r\nexport const submitResetPwdSuccess = (\r\n  reply: TSuccessfulReply\r\n): ISubmitResetPwdSuccess => ({\r\n  type: SUBMIT_PWD_RESET_SUCCESS,\r\n  reply,\r\n});\r\n\r\nexport const submitSignInSuccess = (\r\n  reply: TSuccessfulRegisterReply\r\n): ISubmitSignInSuccess => ({\r\n  type: SUBMIT_SIGN_IN_SUCCESS,\r\n  reply,\r\n});\r\n\r\nexport const submitChangeCredentialsSuccess =\r\n  (): ISubmitChangeCredentialsSuccess => ({\r\n    type: SUBMIT_CHANGE_CREDENTIALS_SUCCESS,\r\n  });\r\n\r\nexport const submitCanResetPwd = (): ISubmitCanResetPwd => ({\r\n  type: SUBMIT_CAN_RESET_PWD,\r\n});\r\n\r\nexport const submitCannotResetPwd = (): ISubmitCannotResetPwd => ({\r\n  type: SUBMIT_CANNOT_RESET_PWD,\r\n});\r\n\r\nexport const submitGetUserSuccess = (): ISubmitGetUserSuccess => ({\r\n  type: SUBMIT_GET_USER_SUCCESS,\r\n});\r\n\r\nexport const submitLogoutSuccess = (): ISubmitLogoutSuccess => ({\r\n  type: SUBMIT_LOGOUT_SUCCESS,\r\n});\r\n\r\nexport const setUser = (user: TUser): ISetUser => ({\r\n  type: SET_USER,\r\n  user,\r\n});\r\n\r\nexport const setNoTokens = (): INoTokens => ({\r\n  type: NO_TOKENS,\r\n});\r\n\r\nexport const submitUpdateTokensSuccess = (): ISubmitUpdateTokensSuccess => ({\r\n  type: SUBMIT_UPDATE_TOKENS_SUCCESS,\r\n});\r\n\r\nexport const dispatchUserEmail: AppThunk =\r\n  (email: string) => (dispatch: AppDispatch) => {\r\n    dispatch(submitServerRequest());\r\n    submitUserEmail(email)\r\n      .then((res) => {\r\n        dispatch(submitUserEmailSuccess(res));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(submitServerFailed(err));\r\n      });\r\n  };\r\n\r\nexport const dispatchPwdReset: AppThunk =\r\n  (request: TResetPwdBody) => (dispatch: AppDispatch) => {\r\n    dispatch(submitServerRequest());\r\n    submitResetPwd(request)\r\n      .then((res) => {\r\n        dispatch(submitResetPwdSuccess(res));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(submitServerFailed(err));\r\n      });\r\n  };\r\n\r\nexport const dispatchRegister: AppThunk =\r\n  (request: TRegisterBody) => (dispatch: AppDispatch) => {\r\n    dispatch(submitServerRequest());\r\n    registerRequest(request)\r\n      .then((res) => {\r\n        dispatch(submitRegisterSuccess(res));\r\n        let accessToken, refreshToken;\r\n        if (res.accessToken.indexOf(\"Bearer\") === 0) {\r\n          accessToken = res.accessToken.split(\"Bearer \")[1];\r\n        }\r\n        refreshToken = res.refreshToken;\r\n        if (accessToken && refreshToken) {\r\n          setCookie(\"accessToken\", accessToken, { expires: 600 });\r\n          setCookie(\"refreshToken\", refreshToken);\r\n        }\r\n        dispatch(setUser(res.user));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(submitServerFailed(err));\r\n      });\r\n  };\r\n\r\nexport const dispatchSignIn: AppThunk =\r\n  (request: TSignInBody) => (dispatch: AppDispatch) => {\r\n    dispatch(submitServerRequest());\r\n    signInRequest(request)\r\n      .then((res) => {\r\n        dispatch(submitSignInSuccess(res));\r\n        setTokens(res);\r\n        dispatch(setUser(res.user));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(submitServerFailed(err));\r\n      });\r\n  };\r\n\r\nexport const dispatchGetUserRequest = (\r\n  accessToken: string,\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(submitServerRequest());\r\n  getUserRequest(accessToken)\r\n    .then((res: TSuccessfulGetUserReply) => {\r\n      dispatch(submitGetUserSuccess());\r\n      dispatch(setUser(res.user));\r\n    })\r\n    .catch((err) => {\r\n      dispatch(submitServerFailed(err));\r\n    });\r\n};\r\n\r\nexport const dispatchUserRequestWithUpdate = (\r\n  refreshToken: string,\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(submitServerRequest());\r\n  updateTokenRequest(refreshToken)\r\n    .then((res: TSuccessfulUpdateTokensReply) => {\r\n      dispatch(submitUpdateTokensSuccess());\r\n      setTokens(res);\r\n      let accessToken = getCookie(\"accessToken\");\r\n      if (accessToken) {\r\n        dispatchGetUserRequest(accessToken, dispatch);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(submitServerFailed(err));\r\n    });\r\n};\r\n\r\nexport const dispatchGetUser: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(submitServerRequest());\r\n  let refreshToken = getCookie(\"refreshToken\");\r\n  let accessToken = getCookie(\"accessToken\");\r\n  if (accessToken) {\r\n    dispatchGetUserRequest(accessToken, dispatch);\r\n  } else if (refreshToken)\r\n    dispatchUserRequestWithUpdate(refreshToken, dispatch);\r\n  else dispatch(setNoTokens());\r\n};\r\n\r\nexport const dispatchLogout: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(submitServerRequest());\r\n  let refreshToken = getCookie(\"refreshToken\");\r\n  if (refreshToken) {\r\n    logoutRequest(refreshToken)\r\n      .then(() => {\r\n        dispatch(submitLogoutSuccess());\r\n        deleteCookie(\"accessToken\");\r\n        deleteCookie(\"refreshToken\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(submitServerFailed(err));\r\n      });\r\n  }\r\n};\r\n\r\nexport const dispatchChangeCredentialsRequest = (\r\n  accessToken: string,\r\n  request: TRegisterBody,\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(submitServerRequest());\r\n  if (accessToken) {\r\n    changeCredentialsRequest(accessToken, request)\r\n      .then((res: TSuccessfulGetUserReply) => {\r\n        dispatch(submitChangeCredentialsSuccess());\r\n        dispatch(setUser(res.user));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(submitServerFailed(err));\r\n      });\r\n  }\r\n};\r\n\r\nexport const dispatchChangeCredentialsRequestWithUpdate = (\r\n  refreshToken: string,\r\n  request: TRegisterBody,\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(submitServerRequest());\r\n  updateTokenRequest(refreshToken)\r\n    .then((res: TSuccessfulUpdateTokensReply) => {\r\n      dispatch(submitUpdateTokensSuccess());\r\n      setTokens(res);\r\n      let accessToken = getCookie(\"accessToken\");\r\n      if (accessToken) {\r\n        dispatchChangeCredentialsRequest(accessToken, request, dispatch);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(submitServerFailed(err));\r\n    });\r\n};\r\n\r\nexport const dispatchChangeCredentials: AppThunk =\r\n  (request: TRegisterBody) => (dispatch: AppDispatch) => {\r\n    dispatch(submitServerRequest());\r\n    let refreshToken = getCookie(\"refreshToken\");\r\n    let accessToken = getCookie(\"accessToken\");\r\n    if (accessToken) {\r\n      dispatchChangeCredentialsRequest(accessToken, request, dispatch);\r\n    } else if (refreshToken)\r\n      dispatchChangeCredentialsRequestWithUpdate(\r\n        refreshToken,\r\n        request,\r\n        dispatch\r\n      );\r\n    else dispatch(setNoTokens());\r\n  };\r\n","import { AppDispatch, AppThunk } from \"../..\";\r\nimport { submitOrder, updateTokenRequest } from \"../../components/api/api\";\r\nimport {\r\n  TOrder,\r\n  TOrderModalProps,\r\n  TServerOrder,\r\n  TSuccessfulUpdateTokensReply,\r\n} from \"../utils/types\";\r\nimport { getCookie, setTokens } from \"../utils/utils\";\r\nimport { resetConstructor } from \"./ingredients\";\r\nimport {\r\n  setNoTokens,\r\n  submitServerFailed,\r\n  submitServerRequest,\r\n  submitUpdateTokensSuccess,\r\n} from \"./user\";\r\n\r\nexport const SUBMIT_ORDER_REQUEST: \"SUBMIT_ORDER_REQUEST\" =\r\n  \"SUBMIT_ORDER_REQUEST\";\r\nexport const SUBMIT_ORDER_SUCCESS: \"SUBMIT_ORDER_SUCCESS\" =\r\n  \"SUBMIT_ORDER_SUCCESS\";\r\nexport const SUBMIT_ORDER_FAILED: \"SUBMIT_ORDER_FAILED\" = \"SUBMIT_ORDER_FAILED\";\r\nexport const ORDER_RESET: \"ORDER_RESET\" = \"ORDER_RESET\";\r\nexport const SEND_ORDER_TO_MODAL: \"SEND_ORDER_TO_MODAL\" = \"SEND_ORDER_TO_MODAL\";\r\nexport const RESET_ORDER_POPUP: \"RESET_ORDER_POPUP\" = \"RESET_ORDER_POPUP\";\r\n\r\nexport interface IOrderPopupReset {\r\n  readonly type: typeof RESET_ORDER_POPUP;\r\n}\r\n\r\nexport interface ISendOrderToModal {\r\n  readonly type: typeof SEND_ORDER_TO_MODAL;\r\n  readonly order: TServerOrder;\r\n}\r\n\r\nexport interface ISubmitOrderRequest {\r\n  readonly type: typeof SUBMIT_ORDER_REQUEST;\r\n}\r\n\r\nexport interface ISubmitOrderSuccess {\r\n  readonly type: typeof SUBMIT_ORDER_SUCCESS;\r\n  readonly order: TOrder;\r\n}\r\n\r\nexport interface ISubmitOrderFailed {\r\n  readonly type: typeof SUBMIT_ORDER_FAILED;\r\n  readonly error: number;\r\n}\r\n\r\nexport interface IOrderReset {\r\n  readonly type: typeof ORDER_RESET;\r\n}\r\n\r\nexport type TOrderActions =\r\n  | ISubmitOrderRequest\r\n  | ISubmitOrderSuccess\r\n  | ISubmitOrderFailed\r\n  | ISendOrderToModal\r\n  | IOrderPopupReset\r\n  | IOrderReset;\r\n\r\nexport const sendOrderToModal = (\r\n  order: TServerOrder\r\n): ISendOrderToModal => ({\r\n  type: SEND_ORDER_TO_MODAL,\r\n  order,\r\n});\r\n\r\nexport const submitOrderRequest = (): ISubmitOrderRequest => ({\r\n  type: SUBMIT_ORDER_REQUEST,\r\n});\r\n\r\nexport const submitOrderSuccess = (order: TOrder): ISubmitOrderSuccess => ({\r\n  type: SUBMIT_ORDER_SUCCESS,\r\n  order,\r\n});\r\n\r\nexport const submitOrderFailed = (error: number): ISubmitOrderFailed => ({\r\n  type: SUBMIT_ORDER_FAILED,\r\n  error,\r\n});\r\n\r\nexport const resetOrder = (): IOrderReset => ({\r\n  type: ORDER_RESET,\r\n});\r\n\r\nexport const orderPopupReset = (): IOrderPopupReset => ({\r\n  type: RESET_ORDER_POPUP,\r\n});\r\n\r\nexport const dispatchOrderUsual = (\r\n  userOrder: string[],\r\n  accessToken: string,\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(submitOrderRequest());\r\n  submitOrder(userOrder, accessToken)\r\n    .then((res) => {\r\n      dispatch(submitOrderSuccess(res));\r\n      dispatch(resetConstructor());\r\n    })\r\n    .catch((err) => {\r\n      dispatch(submitOrderFailed(err));\r\n    });\r\n};\r\n\r\nexport const dispatchOrderWithUpdate = (\r\n  userOrder: string[],\r\n  refreshToken: string,\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(submitServerRequest());\r\n  updateTokenRequest(refreshToken)\r\n    .then((res: TSuccessfulUpdateTokensReply) => {\r\n      dispatch(submitUpdateTokensSuccess());\r\n      setTokens(res);\r\n      let accessToken = getCookie(\"accessToken\");\r\n      if (accessToken) {\r\n        dispatchOrderUsual(userOrder, accessToken, dispatch);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(submitServerFailed(err));\r\n    });\r\n};\r\n\r\nexport const dispatchOrder: AppThunk =\r\n  (userOrder: string[]) => (dispatch: AppDispatch) => {\r\n    dispatch(submitServerRequest());\r\n    let refreshToken = getCookie(\"refreshToken\");\r\n    let accessToken = getCookie(\"accessToken\");\r\n    if (accessToken) {\r\n      dispatchOrderUsual(userOrder, accessToken, dispatch);\r\n    } else if (refreshToken)\r\n      dispatchOrderWithUpdate(userOrder, refreshToken, dispatch);\r\n    else dispatch(setNoTokens());\r\n  };\r\n","import React, { useRef } from \"react\";\r\nimport { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {\r\n  moveItem,\r\n  recalculatePrice,\r\n  removeFromConstructor,\r\n} from \"../../services/actions/ingredients\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport styles from \"./constructor-ingredient.module.css\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { ConstructorEL } from \"../../services/utils/interfaces\";\r\n\r\nexport const ConstructorIngredient: React.FC<ConstructorEL> = ({\r\n  name,\r\n  image,\r\n  price,\r\n  _id,\r\n  index,\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { constructorItems } = useAppSelector((state) => state.ingredients);\r\n\r\n  const isBun = constructorItems.length && constructorItems[0].type === \"bun\";\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: \"constructor-item\",\r\n    hover: (item: ConstructorEL, monitor) => {\r\n      if (ref.current !== null) {\r\n        const dragIndex = item.index;\r\n        const hoverIndex = index;\r\n        const hoverBoundingRect = ref.current.getBoundingClientRect();\r\n        const hoverMiddleY =\r\n          (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n        const hoverActualY =\r\n          monitor.getClientOffset()!.y - hoverBoundingRect.top;\r\n\r\n        if (dragIndex! < hoverIndex! && hoverActualY < hoverMiddleY) return;\r\n        if (dragIndex! > hoverIndex! && hoverActualY > hoverMiddleY) return;\r\n\r\n        dispatch(\r\n          moveItem(dragIndex! + (isBun ? 1 : 0), hoverIndex! + (isBun ? 1 : 0))\r\n        );\r\n\r\n        item.index = hoverIndex;\r\n      }\r\n    },\r\n  });\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: \"constructor-item\",\r\n    item: { index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const ref: React.RefObject<HTMLDivElement> = useRef(null);\r\n  const dragDropRef: any = dragRef(dropRef(ref));\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.ingredient} id={_id} ref={dragDropRef}>\r\n        <DragIcon type=\"primary\" />\r\n        <ConstructorElement\r\n          isLocked={false}\r\n          text={name}\r\n          price={price}\r\n          thumbnail={image}\r\n          handleClose={() => {\r\n            dispatch(removeFromConstructor(index! + (isBun ? 1 : 0)));\r\n            dispatch(recalculatePrice());\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport styles from \"./burger-constructor.module.css\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { dispatchOrder, resetOrder } from \"../../services/actions/order\";\r\nimport {\r\n  recalculatePrice,\r\n  replaceBun,\r\n  addToConstructor,\r\n} from \"../../services/actions/ingredients\";\r\nimport { ConstructorIngredient } from \"../constructor-ingredient/constructor-ingredient\";\r\nimport {\r\n  ConstructorDraggableEl,\r\n  ConstructorEL,\r\n} from \"../../services/utils/interfaces\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BurgerConstructor: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(recalculatePrice());\r\n  }, [dispatch]);\r\n\r\n  const { constructorItems, totalPrice } = useAppSelector(\r\n    (state) => state.ingredients\r\n  );\r\n  const { submitOrderSuccess, submitOrderFailed, submitOrderRequest } =\r\n    useAppSelector((state) => state.order);\r\n\r\n  const { user } = useAppSelector((state) => state.user);\r\n\r\n  const [isModalOpened, setIsModalOpened] = useState(false);\r\n\r\n  const submitOrder = useCallback(() => {\r\n    if (user) {\r\n      setIsModalOpened(true);\r\n      dispatch(dispatchOrder(constructorItems.map((item) => item._id)));\r\n    } else {\r\n      history.push({ pathname: \"/login\" });\r\n    }\r\n  }, [dispatch, constructorItems, user]);\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpened(false);\r\n    dispatch(resetOrder());\r\n  };\r\n\r\n  const [{ isHover }, dropTarget] = useDrop({\r\n    accept: \"item\",\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n    drop(item: ConstructorDraggableEl) {\r\n      addItem(item);\r\n    },\r\n  });\r\n\r\n  const sectionClassName = `${styles.section} pl-4 pr-2 pb-15\r\n  ${isHover ? styles.onHover : \"\"}`;\r\n\r\n  const bun = useMemo(\r\n    () => constructorItems.find((el) => el.type === \"bun\"),\r\n    [constructorItems]\r\n  );\r\n  const noBunsArray = useMemo(\r\n    () => constructorItems.filter((el) => el.type !== \"bun\"),\r\n    [constructorItems]\r\n  );\r\n\r\n  const addItem = (item: ConstructorDraggableEl) => {\r\n    const isBun = item.ingType === \"bun\";\r\n    isBun ? dispatch(replaceBun(item.id)) : dispatch(addToConstructor(item.id));\r\n    dispatch(recalculatePrice());\r\n  };\r\n\r\n  const renderProducts = (\r\n    { name, image, price, _id }: ConstructorEL,\r\n    index: number\r\n  ) => {\r\n    return (\r\n      <li key={index} className={styles.ingredient}>\r\n        <ConstructorIngredient\r\n          name={name}\r\n          image={image}\r\n          price={price}\r\n          _id={_id}\r\n          index={index}\r\n        />\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const buttonText = submitOrderRequest ? \"Подождите...\" : \"Оформить заказ\";\r\n\r\n  return (\r\n    <>\r\n      <section ref={dropTarget} className={sectionClassName}>\r\n        <ul className={`${styles.ingredientList} mt-25 mb-10`}>\r\n          {bun && (\r\n            <li key={bun._id} className={`${styles.ingredient} pr-2`}>\r\n              <ConstructorElement\r\n                type=\"top\"\r\n                isLocked={true}\r\n                text={`${bun.name} (верх)`}\r\n                price={bun.price}\r\n                thumbnail={bun.image}\r\n              />\r\n            </li>\r\n          )}\r\n          <ul className={styles.innerList}>\r\n            {noBunsArray && noBunsArray.map(renderProducts)}\r\n          </ul>\r\n          {bun && (\r\n            <li key={bun._id + \"низ\"} className={`${styles.ingredient} pr-2`}>\r\n              <ConstructorElement\r\n                type=\"bottom\"\r\n                isLocked={true}\r\n                text={`${bun.name} (низ)`}\r\n                price={bun.price}\r\n                thumbnail={bun.image}\r\n              />\r\n            </li>\r\n          )}\r\n          {constructorItems.length === 0 && (\r\n            <p className=\"mt-15 text text_type_main-medium\">\r\n              Пожалуйста, перенесите сюда булку и хотя бы один ингредиент для создания\r\n              заказа\r\n            </p>\r\n          )}\r\n        </ul>\r\n        <div className={`${styles.confirmationZone} mt-10`}>\r\n          <p className=\"text text_type_digits-medium\">\r\n            {totalPrice} <CurrencyIcon type=\"primary\" />\r\n          </p>\r\n            <Button disabled={!bun || constructorItems.length < 2} onClick={submitOrder} type=\"primary\" size=\"large\">\r\n              {buttonText}\r\n            </Button>\r\n        </div>\r\n      </section>\r\n      {isModalOpened && (submitOrderSuccess || submitOrderFailed) && (\r\n        <Modal onClose={closeModal}>\r\n          <OrderDetails />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import React from \"react\";\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport styles from \"./home.module.css\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <main className={styles.main}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n      </main>\r\n    </DndProvider>\r\n  );\r\n};\r\n","import * as yup from 'yup'\r\nimport { RequiredStringSchema } from 'yup/lib/string';\r\nimport { AnyObject } from 'yup/lib/types';\r\n\r\nexport const emailSchema = yup.string().email().required()\r\nexport const nameSchema = yup.string().required()\r\nexport const passwordSchema = yup.string().required().min(1)\r\nexport const codeSchema = yup.string().required().length(36)\r\n\r\nexport const validateInput = async (\r\n  schema: RequiredStringSchema<string | undefined, AnyObject>,\r\n  setterFunction: React.Dispatch<React.SetStateAction<boolean>>,\r\n  stateValue: string\r\n) => {\r\n  const isValid = await schema.isValid(stateValue);\r\n  isValid ? setterFunction(false) : setterFunction(true);\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport {\r\n  EmailInput,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { PasswordInput } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport {\r\n  dispatchGetUser,\r\n  dispatchSignIn,\r\n  removeServerError,\r\n  submitGetUserSuccess,\r\n} from \"../../services/actions/user\";\r\nimport { TLocationState } from \"../../services/utils/interfaces\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport {\r\n  emailSchema,\r\n  nameSchema,\r\n  passwordSchema,\r\n  validateInput,\r\n} from \"../../services/validations/user-validation\";\r\nimport { RequiredStringSchema } from \"yup/lib/string\";\r\nimport { AnyObject } from \"yup/lib/types\";\r\n\r\nexport const LoginPage: React.FC = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [pwdError, setPwdError] = useState(false);\r\n  const [showPwd, setShowPwd] = useState(false);\r\n  const [loaded, setIsLoaded] = useState(true);\r\n\r\n  const {\r\n    user,\r\n    submitGetUserSuccess,\r\n    foundNoTokens,\r\n    submitServerFailed,\r\n    submitServerError,\r\n  } = useAppSelector((state) => state.user);\r\n\r\n  const location = useLocation<TLocationState>();\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  const signIn = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (emailError || pwdError) return null;\r\n    else dispatch(removeServerError());\r\n    dispatch(\r\n      dispatchSignIn({\r\n        email: email,\r\n        password: pwd,\r\n      })\r\n    );\r\n  };\r\n\r\n  //Если есть нужный токен в куках, то при заходе на страницу фетчится юзер\r\n  /* useEffect(() => {\r\n    if (!user) dispatch(dispatchGetUser());\r\n    return () => {\r\n      dispatch(removeServerError());\r\n    };\r\n  }, []); */\r\n\r\n  useEffect(() => {\r\n    if (submitGetUserSuccess || foundNoTokens) setIsLoaded(true);\r\n  }, [submitGetUserSuccess, foundNoTokens]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (location.state)\r\n        history.push({ pathname: `${location.state.from.pathname}` });\r\n      else return history.push({ pathname: \"/\" });\r\n    }\r\n  }, [user]);\r\n\r\n  const changeEmailField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n    validateInput(emailSchema, setEmailError, email);\r\n\r\n  };\r\n\r\n  const changePasswordField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPwd(e.target.value);\r\n    validateInput(passwordSchema, setPwdError, pwd);\r\n\r\n  };\r\n\r\n  return loaded ? (\r\n    <div className={`${styles.formContainer}`}>\r\n      <form className={styles.form} onSubmit={signIn}>\r\n        <p className=\"text text_type_main-medium mb-6\">Вход</p>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            value={email}\r\n            name={\"email\"}\r\n            placeholder=\"E-mail\"\r\n            error={emailError}\r\n            errorText=\"Введите валидный e-mail!\"\r\n            size=\"default\"\r\n            onChange={(e) => changeEmailField(e)}\r\n            onBlur={() => validateInput(emailSchema, setEmailError, email)}\r\n          />\r\n        </div>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            type={showPwd ? \"text\" : \"password\"}\r\n            placeholder=\"Пароль\"\r\n            value={pwd}\r\n            error={pwdError}\r\n            errorText=\"Введите валидный пароль!\"\r\n            name={\"password\"}\r\n            size=\"default\"\r\n            icon=\"ShowIcon\"\r\n            onIconClick={() => setShowPwd(!showPwd)}\r\n            onChange={(e) => changePasswordField(e)}\r\n            onBlur={() => validateInput(passwordSchema, setPwdError, pwd)}\r\n          />\r\n        </div>\r\n        {submitServerFailed && (\r\n          <p className=\"text text_type_main-default text_color_inactive mb-6\">\r\n            Произошла ошибка! Код ошибки: {submitServerError}\r\n          </p>\r\n        )}\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          disabled={pwdError || emailError || !email || !pwd}\r\n        >\r\n          Войти\r\n        </Button>\r\n        <div className={`${styles.linkContainer} mt-20 mb-4`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вы — новый пользователь?\r\n          </p>\r\n          <Link\r\n            className={`${styles.link} text text_type_main-default text_color_inactive`}\r\n            to={\"/register\"}\r\n          >\r\n            Зарегистрироваться\r\n          </Link>\r\n        </div>\r\n        <div className={`${styles.linkContainer} mb-4`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Забыли пароль?\r\n          </p>\r\n          <Link\r\n            className={`${styles.link} text text_type_main-default text_color_inactive`}\r\n            to={\"/forgot-password\"}\r\n          >\r\n            Восстановить пароль\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./register.module.css\";\r\nimport {\r\n  EmailInput,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { PasswordInput } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport {\r\n  dispatchGetUser,\r\n  dispatchRegister,\r\n  removeServerError,\r\n} from \"../../services/actions/user\";\r\nimport { TLocationState } from \"../../services/utils/interfaces\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport {\r\n  emailSchema,\r\n  nameSchema,\r\n  passwordSchema,\r\n  validateInput,\r\n} from \"../../services/validations/user-validation\";\r\n\r\nexport const RegisterPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation<TLocationState>();\r\n\r\n  const [loaded, setIsLoaded] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [pwdError, setPwdError] = useState(false);\r\n  const [showPwd, setShowPwd] = useState(false);\r\n\r\n  const {\r\n    user,\r\n    submitGetUserSuccess,\r\n    foundNoTokens,\r\n    submitServerRequest,\r\n    submitLogoutSuccess,\r\n    submitChangeCredentialsSuccess,\r\n    submitServerFailed,\r\n    submitServerError,\r\n  } = useAppSelector((state) => state.user);\r\n\r\n  //Если есть нужный токен в куках, то при заходе на страницу фетчится юзер\r\n  /* useEffect(() => {\r\n    if (!user) dispatch(dispatchGetUser());\r\n    return () => {\r\n      dispatch(removeServerError());\r\n    };\r\n  }, []);\r\n */\r\n  useEffect(() => {\r\n    if (submitGetUserSuccess || foundNoTokens ||!user ) setIsLoaded(true);\r\n  }, [submitGetUserSuccess, foundNoTokens]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (location.state)\r\n        history.push({ pathname: `${location.state.from.pathname}` });\r\n      else return history.push({ pathname: \"/\" });\r\n    }\r\n  }, [user]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (pwdError || emailError || nameError) return null;\r\n    else {\r\n      dispatch(removeServerError());\r\n      dispatch(\r\n        dispatchRegister({\r\n          email: email,\r\n          password: pwd,\r\n          name: name,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeEmailField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n    validateInput(emailSchema, setEmailError, email);\r\n  };\r\n\r\n  const changeNameField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n    validateInput(nameSchema, setNameError, name);\r\n  };\r\n\r\n  const changePasswordField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPwd(e.target.value);\r\n    validateInput(passwordSchema, setPwdError, pwd);\r\n  };\r\n\r\n  return loaded ? (\r\n    <div className={`${styles.formContainer}`}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <p className=\"text text_type_main-medium mb-6\">Регистрация</p>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            value={name}\r\n            name={\"name\"}\r\n            error={nameError}\r\n            errorText=\"Введите валидное имя!\"\r\n            placeholder=\"Имя\"\r\n            size=\"default\"\r\n            onChange={(e) => changeNameField(e)}\r\n            onBlur={() => validateInput(nameSchema, setNameError, name)}\r\n          />\r\n        </div>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            value={email}\r\n            name={\"email\"}\r\n            placeholder=\"E-mail\"\r\n            error={emailError}\r\n            errorText=\"Введите валидный e-mail!\"\r\n            size=\"default\"\r\n            onChange={(e) => changeEmailField(e)}\r\n            onBlur={() => validateInput(emailSchema, setEmailError, email)}\r\n          />\r\n        </div>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            type={showPwd ? \"text\" : \"password\"}\r\n            placeholder=\"Пароль\"\r\n            value={pwd}\r\n            error={pwdError}\r\n            errorText=\"Введите валидный пароль!\"\r\n            name={\"password\"}\r\n            size=\"default\"\r\n            icon=\"ShowIcon\"\r\n            onIconClick={() => setShowPwd(!showPwd)}\r\n            onChange={(e) => changePasswordField(e)}\r\n          />\r\n        </div>\r\n        {submitServerFailed && (\r\n          <p className=\"text text_type_main-default text_color_inactive mb-6\">\r\n            Произошла ошибка! Код ошибки: {submitServerError}\r\n          </p>\r\n        )}\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          disabled={\r\n            pwdError || emailError || nameError || !email || !name || !pwd\r\n          }\r\n        >\r\n          Зарегистрироваться\r\n        </Button>\r\n        <div className={`${styles.linkContainer} mt-20 mb-4`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Уже зарегистрированы?\r\n          </p>\r\n          <Link\r\n            className={`${styles.link} text text_type_main-default text_color_inactive`}\r\n            to={\"/login\"}\r\n          >\r\n            Войти\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styles from \"./forgot-password.module.css\";\r\nimport {\r\n  EmailInput,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { PasswordInput } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport {\r\n  dispatchGetUser,\r\n  dispatchUserEmail,\r\n  removeServerError,\r\n  submitCanResetPwd,\r\n} from \"../../services/actions/user\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport {\r\n  emailSchema,\r\n  validateInput,\r\n} from \"../../services/validations/user-validation\";\r\n\r\nexport const ForgotPasswordPage: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    submitServerRequest,\r\n    submitUserEmailSuccess,\r\n    submitGetUserSuccess,\r\n    submitServerFailed,\r\n    submitServerError,\r\n    foundNoTokens,\r\n    user,\r\n  } = useAppSelector((state) => state.user);\r\n  let history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n\r\n  //Если есть нужный токен в куках, то при заходе на страницу фетчится юзер\r\n  useEffect(() => {\r\n    if (!user) dispatch(dispatchGetUser());\r\n    return () => {\r\n      dispatch(removeServerError());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (submitUserEmailSuccess && !submitServerRequest) {\r\n      dispatch(submitCanResetPwd());\r\n      history.push({ pathname: \"/reset-password\" });\r\n    }\r\n    return () => {\r\n      dispatch(removeServerError());\r\n    };\r\n  }, [submitUserEmailSuccess, submitServerRequest]);\r\n\r\n  useEffect(() => {\r\n    if (user) history.push({ pathname: \"/\" });\r\n  }, [user]);\r\n\r\n  const changeEmailField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n    validateInput(emailSchema, setEmailError, email);\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      if (emailError) return null;\r\n      else {\r\n        dispatch(removeServerError());\r\n        dispatch(dispatchUserEmail(email));\r\n      }\r\n    },\r\n    [email, emailError]\r\n  );\r\n\r\n  return (\r\n    <div className={`${styles.formContainer}`}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <p className=\"text text_type_main-medium mb-6\">Восстановление пароля</p>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            value={email}\r\n            name={\"email\"}\r\n            placeholder=\"E-mail\"\r\n            error={emailError}\r\n            errorText=\"Введите валидный e-mail!\"\r\n            size=\"default\"\r\n            onChange={(e) => changeEmailField(e)}\r\n            onBlur={() => validateInput(emailSchema, setEmailError, email)}\r\n          />\r\n        </div>\r\n        {submitServerFailed && (\r\n          <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n            Произошла ошибка! Код ошибки: {submitServerError}\r\n          </p>\r\n        )}\r\n        <Button type=\"primary\" size=\"large\" disabled={emailError || !email}>\r\n          Восстановить\r\n        </Button>\r\n        <div className={`${styles.linkContainer} mt-20 mb-4`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вспомнили пароль?\r\n          </p>\r\n          <Link\r\n            className={`${styles.link} text text_type_main-default text_color_inactive`}\r\n            to={\"/login\"}\r\n          >\r\n            Войти\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./reset-password.module.css\";\r\nimport {\r\n  EmailInput,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { PasswordInput } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport {\r\n  dispatchGetUser,\r\n  dispatchPwdReset,\r\n  removeServerError,\r\n  submitCannotResetPwd,\r\n} from \"../../services/actions/user\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport {\r\n  codeSchema,\r\n  passwordSchema,\r\n  validateInput,\r\n} from \"../../services/validations/user-validation\";\r\n\r\nexport const ResetPasswordPage: React.FC = () => {\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [pwdError, setPwdError] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [codeError, setCodeError] = useState(false);\r\n  const [showPwd, setShowPwd] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const history = useHistory();\r\n  const {\r\n    user,\r\n    submitGetUserSuccess,\r\n    foundNoTokens,\r\n    canResetPwd,\r\n    submitServerFailed,\r\n    submitServerError,\r\n    submitPwdResetSuccess,\r\n    submitServerRequest,\r\n    submitLogoutSuccess,\r\n    submitChangeCredentialsSuccess,\r\n  } = useAppSelector((state) => state.user);\r\n\r\n  //Если есть нужный токен в куках, то при заходе на страницу фетчится юзер\r\n  useEffect(() => {\r\n    if (!user) dispatch(dispatchGetUser());\r\n    return () => {\r\n      dispatch(removeServerError());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user || !canResetPwd) history.push({ pathname: \"/login\" });\r\n    return () => {\r\n      dispatch(removeServerError());\r\n      dispatch(submitCannotResetPwd());\r\n    };\r\n  }, [user, canResetPwd, history]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (pwdError || codeError) return null;\r\n    else {\r\n      dispatch(removeServerError());\r\n      dispatch(\r\n        dispatchPwdReset({\r\n          password: pwd,\r\n          token: code,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (submitPwdResetSuccess) {\r\n      setTimeout(() => {\r\n        history.push({ pathname: \"/login\" });\r\n      }, 3000);\r\n    }\r\n  }, [submitPwdResetSuccess]);\r\n\r\n  const changePasswordField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPwd(e.target.value);\r\n    validateInput(passwordSchema, setPwdError, pwd);\r\n  };\r\n\r\n  const changeCodeField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCode(e.target.value);\r\n    validateInput(codeSchema, setCodeError, code);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.formContainer}`}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <p className=\"text text_type_main-medium mb-6\">Восстановление пароля</p>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            type={showPwd ? \"text\" : \"password\"}\r\n            placeholder=\"Пароль\"\r\n            value={pwd}\r\n            error={pwdError}\r\n            errorText=\"Введите валидный пароль!\"\r\n            name={\"password\"}\r\n            size=\"default\"\r\n            icon=\"ShowIcon\"\r\n            onIconClick={() => setShowPwd(!showPwd)}\r\n            onChange={(e) => changePasswordField(e)}\r\n            onBlur={() => validateInput(passwordSchema, setPwdError, pwd)}\r\n          />\r\n        </div>\r\n        <div className={`${styles.inputContainer} mb-6`}>\r\n          <Input\r\n            value={code}\r\n            name={\"code\"}\r\n            placeholder=\"Введите код из письма\"\r\n            size=\"default\"\r\n            onChange={(e) => changeCodeField(e)}\r\n            error={codeError}\r\n            errorText=\"Неверный формат кода!\"\r\n            onBlur={() => validateInput(codeSchema, setCodeError, code)}\r\n          />\r\n        </div>\r\n        {submitPwdResetSuccess && (\r\n          <>\r\n            <p className=\"text text_type_main-default text_color_inactive mb-2\">\r\n              Данные успешно изменены!\r\n            </p>\r\n            <p className=\"text text_type_main-default text_color_inactive mb-2\">\r\n              Вы будете перенаправлены на страницу авотризации...\r\n            </p>\r\n          </>\r\n        )}\r\n        {submitServerFailed && (\r\n          <p className=\"text text_type_main-default text_color_inactive mb-6\">\r\n            Произошла ошибка! Код ошибки: {submitServerError}\r\n          </p>\r\n        )}\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          disabled={pwdError || codeError || !code || !pwd}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n        <div className={`${styles.linkContainer} mt-20 mb-4`}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вспомнили пароль?\r\n          </p>\r\n          <Link\r\n            className={`${styles.link} text text_type_main-default text_color_inactive`}\r\n            to={\"/login\"}\r\n          >\r\n            Войти\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { wsServerRespond } from \"../utils/types\";\r\n\r\nexport const WS_PRIVATE_CONNECTION_START: \"WS_PRIVATE_CONNECTION_START\" =\r\n  \"WS_PRIVATE_CONNECTION_START\";\r\nexport const WS_PRIVATE_CONNECTION_SUCCESS: \"WS_PRIVATE_CONNECTION_SUCCESS\" =\r\n  \"WS_PRIVATE_CONNECTION_SUCCESS\";\r\nexport const WS_PRIVATE_CONNECTION_ERROR: \"WS_PRIVATE_CONNECTION_ERROR\" =\r\n  \"WS_PRIVATE_CONNECTION_ERROR\";\r\nexport const WS_PRIVATE_CONNECTION_CLOSED: \"WS_PRIVATE_CONNECTION_CLOSED\" =\r\n  \"WS_PRIVATE_CONNECTION_CLOSED\";\r\nexport const WS_GET_PRIVATE_MESSAGE: \"WS_GET_PRIVATE_MESSAGE\" =\r\n  \"WS_GET_PRIVATE_MESSAGE\";\r\nexport const WS_SEND_PRIVATE_MESSAGE: \"WS_SEND_PRIVATE_MESSAGE\" =\r\n  \"WS_SEND_PRIVATE_MESSAGE\";\r\n\r\n export interface IwsPrivateConnectionStart {\r\n  readonly type: typeof WS_PRIVATE_CONNECTION_START;\r\n}\r\n\r\nexport interface IwsPrivateConnectionSuccess {\r\n  readonly type: typeof WS_PRIVATE_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IwsPrivateConnectionError {\r\n  readonly type: typeof WS_PRIVATE_CONNECTION_ERROR;\r\n}\r\n\r\nexport interface IwsPrivateConnectionClosed {\r\n  readonly type: typeof WS_PRIVATE_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IwsGetPrivateMessage {\r\n  readonly type: typeof WS_GET_PRIVATE_MESSAGE;\r\n  readonly payload: wsServerRespond;\r\n}\r\n\r\nexport interface IwsSendPrivateMessage {\r\n  readonly type: typeof WS_SEND_PRIVATE_MESSAGE;\r\n  readonly payload: any;\r\n}\r\n\r\nexport type TSocketPrivateActions =\r\n  | IwsPrivateConnectionStart\r\n  | IwsPrivateConnectionSuccess\r\n  | IwsPrivateConnectionError\r\n  | IwsPrivateConnectionClosed\r\n  | IwsSendPrivateMessage\r\n  | IwsGetPrivateMessage;\r\n\r\nexport const wsPrivateConnectionStart = (): IwsPrivateConnectionStart => ({\r\n  type: WS_PRIVATE_CONNECTION_START,\r\n});\r\n\r\nexport const wsPrivateConnectionSuccess = (): IwsPrivateConnectionSuccess => ({\r\n  type: WS_PRIVATE_CONNECTION_SUCCESS,\r\n});\r\n\r\nexport const wsPrivateConnectionError = (): IwsPrivateConnectionError => ({\r\n  type: WS_PRIVATE_CONNECTION_ERROR,\r\n});\r\n\r\nexport const wsPrivateConnectionClosed = (): IwsPrivateConnectionClosed => ({\r\n  type: WS_PRIVATE_CONNECTION_CLOSED,\r\n});\r\n\r\nexport const wsGetPrivateMessage = (message: any): IwsGetPrivateMessage => ({\r\n  type: WS_GET_PRIVATE_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const wsSendPrivateMessage = (message: any): IwsSendPrivateMessage => ({\r\n  type: WS_SEND_PRIVATE_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const userActionsBook = {\r\n  startConnectionConst: WS_PRIVATE_CONNECTION_START,\r\n  sendMessageConst: WS_SEND_PRIVATE_MESSAGE,\r\n  wsStartConnection: wsPrivateConnectionStart,\r\n  wsSendMessage: wsSendPrivateMessage,\r\n  wsOnOpen: wsPrivateConnectionSuccess,\r\n  wsOnClose: wsPrivateConnectionClosed,\r\n  wsOnError: wsPrivateConnectionError,\r\n  wsGetMessage: wsGetPrivateMessage\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { dispatchLogout } from \"../../services/actions/user\";\r\nimport { wsPrivateConnectionClosed } from \"../../services/actions/wsUserActions\";\r\nimport { useAppDispatch } from \"../../services/hooks/hooks\";\r\nimport styles from \"./profile-nav.module.css\";\r\n\r\nexport const ProfileNavBar: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLogout = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    dispatch(dispatchLogout());\r\n    dispatch(wsPrivateConnectionClosed())\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavLink\r\n        className={`${styles.link} text text_type_main-medium`}\r\n        to={\"/profile\"}\r\n        activeClassName={`${styles.activeLink}`}\r\n        exact={true}\r\n      >\r\n        Профиль\r\n      </NavLink>\r\n      <NavLink\r\n        className={`${styles.link} text text_type_main-medium`}\r\n        to={\"/profile/orders\"}\r\n        activeClassName={`${styles.activeLink}`}\r\n        exact={true}\r\n      >\r\n        История заказов\r\n      </NavLink>\r\n      <NavLink\r\n        className={`${styles.link} text text_type_main-medium`}\r\n        to={\"/profile\"}\r\n        onClick={(e) => handleLogout(e)}\r\n        exact={true}\r\n      >\r\n        Выход\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  EmailInput,\r\n  Input,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport {\r\n  dispatchChangeCredentials,\r\n  dispatchGetUser,\r\n  dispatchLogout,\r\n  removeServerError,\r\n  submitChangeCredentialsSuccess,\r\n} from \"../../services/actions/user\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport { ProfileNavBar } from \"../../components/profile-nav/profile-nav\";\r\nimport {\r\n  emailSchema,\r\n  nameSchema,\r\n  passwordSchema,\r\n  validateInput,\r\n} from \"../../services/validations/user-validation\";\r\n\r\nexport const ProfilePage = () => {\r\n  const [loaded, setIsLoaded] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    user,\r\n    submitGetUserSuccess,\r\n    foundNoTokens,\r\n    submitServerRequest,\r\n    submitLogoutSuccess,\r\n    submitChangeCredentialsSuccess,\r\n  } = useAppSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setEmail(user.email);\r\n      setName(user.name);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (submitGetUserSuccess || foundNoTokens) setIsLoaded(true);\r\n  }, [submitGetUserSuccess, foundNoTokens]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setJustUpdated(false);\r\n      dispatch(removeServerError());\r\n    };\r\n  }, []);\r\n\r\n  const resetInput = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n    if (user) {\r\n      setEmail(user.email);\r\n      setName(user.name);\r\n    } else {\r\n      setEmail(\"\");\r\n      setName(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (pwdError || emailError || nameError) return null;\r\n    else\r\n      dispatch(\r\n        dispatchChangeCredentials({\r\n          email: email,\r\n          password: pwd,\r\n          name: name,\r\n        })\r\n      );\r\n    setJustUpdated(true);\r\n  };\r\n\r\n  const [justUpdated, setJustUpdated] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [pwdError, setPwdError] = useState(false);\r\n  const [showPwd, setShowPwd] = useState(false);\r\n\r\n  const changeEmailField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n    validateInput(emailSchema, setEmailError, email);\r\n  };\r\n\r\n  const changeNameField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n    validateInput(nameSchema, setNameError, name);\r\n  };\r\n\r\n  const changePasswordField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPwd(e.target.value);\r\n    validateInput(passwordSchema, setPwdError, pwd);\r\n  };\r\n\r\n  return loaded ? (\r\n    <div className={`${styles.profilePageContainer}`}>\r\n      <div className={`${styles.navContainer}`}>\r\n        <ul className={`${styles.navLinkList}`}>\r\n          <ProfileNavBar />\r\n          <p\r\n            className={`${styles.comment} text text_type_main-default text_color_inactive mt-20`}\r\n          >\r\n            В этом разделе вы можете изменить свои персональные данные\r\n          </p>\r\n        </ul>\r\n      </div>\r\n      <div className={`${styles.formContainer}`}>\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n          <div className={`${styles.inputContainer} mb-6`}>\r\n            <Input\r\n              value={name}\r\n              name={\"name\"}\r\n              error={nameError}\r\n              errorText=\"Введите валидное имя!\"\r\n              placeholder=\"Имя\"\r\n              size=\"default\"\r\n              onChange={(e) => changeNameField(e)}\r\n              onBlur={() => validateInput(nameSchema, setNameError, name)}\r\n            />\r\n          </div>\r\n          <div className={`${styles.inputContainer} mb-6`}>\r\n            <Input\r\n              value={email}\r\n              name={\"email\"}\r\n              placeholder=\"E-mail\"\r\n              error={emailError}\r\n              errorText=\"Введите валидный e-mail!\"\r\n              size=\"default\"\r\n              onChange={(e) => changeEmailField(e)}\r\n              onBlur={() => validateInput(emailSchema, setEmailError, email)}\r\n            />\r\n          </div>\r\n          <div className={`${styles.inputContainer} mb-6`}>\r\n            <Input\r\n              type={showPwd ? \"text\" : \"password\"}\r\n              placeholder=\"Пароль\"\r\n              value={pwd}\r\n              error={pwdError}\r\n              errorText=\"Введите валидный пароль!\"\r\n              name={\"password\"}\r\n              size=\"default\"\r\n              icon=\"ShowIcon\"\r\n              onIconClick={() => setShowPwd(!showPwd)}\r\n              onChange={(e) => changePasswordField(e)}\r\n              onBlur={() => validateInput(passwordSchema, setPwdError, pwd)}\r\n            />\r\n          </div>\r\n          {submitChangeCredentialsSuccess && justUpdated && (\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              Данные успешно изменены!\r\n            </p>\r\n          )}\r\n          <div className={`${styles.buttonsContainer} mt-6`}>\r\n            <Button\r\n              type=\"secondary\"\r\n              size=\"medium\"\r\n              disabled={\r\n                pwdError || emailError || nameError || !email || !pwd || !name\r\n              }\r\n            >\r\n              Сохранить\r\n            </Button>\r\n            <Button\r\n              type=\"secondary\"\r\n              size=\"medium\"\r\n              onClick={(e) => resetInput(e)}\r\n            >\r\n              Отмена\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { dispatchGetUser } from \"../../services/actions/user\";\r\nimport {\r\n  ProtectedRouteProps,\r\n  TLocationState,\r\n} from \"../../services/utils/interfaces\";\r\nimport {\r\n  wsConnectionClosed,\r\n  wsConnectionStart,\r\n} from \"../../services/actions/wsVanillaActions\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({\r\n  children,\r\n  ...rest\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const { user } = useAppSelector((state) => state.user);\r\n  const [isUserLoaded, setUserLoaded] = useState(false);\r\n\r\n  const init = async () => {\r\n    dispatch(dispatchGetUser());\r\n    setUserLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  if (!user) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) => (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <Route {...rest} render={() => children} />;\r\n};\r\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../services/hooks/hooks\";\r\nimport {\r\n  OrderCardProps,\r\n  TLocationState,\r\n} from \"../../services/utils/interfaces\";\r\nimport { TIngredient } from \"../../services/utils/types\";\r\nimport { parseTime } from \"../../services/utils/utils\";\r\nimport styles from \"./order-card.module.css\";\r\n\r\nexport const OrderCard: React.FC<OrderCardProps> = ({\r\n  number,\r\n  time,\r\n  name,\r\n  ingredients,\r\n  status,\r\n  id,\r\n  inFeedPage,\r\n}) => {\r\n  const { ingredientItems } = useAppSelector((state) => state.ingredients);\r\n\r\n  const location = useLocation<TLocationState>();\r\n\r\n  const objectsArray: TIngredient[] = [];\r\n\r\n  ingredients.map((ingID) => {\r\n    ingredientItems.forEach((item) => {\r\n      if (ingID === item._id) objectsArray.push(item);\r\n    });\r\n  });\r\n\r\n  const counter = objectsArray.length - 6;\r\n  const date = parseTime(time);\r\n  const totalPrice = objectsArray.reduce((sum, el) => sum + el.price, 0);\r\n\r\n  let statusMessage;\r\n  switch (status) {\r\n    case \"pending\": {\r\n      statusMessage = <p className={`text text_type_main-small`}>Готовится</p>;\r\n      break;\r\n    }\r\n    case \"done\": {\r\n      statusMessage = (\r\n        <p style={{ color: \"#00CCCC\" }} className={`text text_type_main-small`}>\r\n          Выполнен\r\n        </p>\r\n      );\r\n      break;\r\n    }\r\n    case \"created\": {\r\n      statusMessage = <p className={`text text_type_main-small`}>Создан</p>;\r\n      break;\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const renderPictures = (\r\n    item: TIngredient,\r\n    idx: number,\r\n    arr: TIngredient[]\r\n  ) => {\r\n    if (idx <= 5)\r\n      return (\r\n        <li\r\n          key={idx}\r\n          className={styles.listItem}\r\n          style={{ zIndex: arr.length - idx }}\r\n        >\r\n          <img className={styles.picture} src={item.image_mobile}></img>\r\n        </li>\r\n      );\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      className={styles.linkContainer}\r\n      to={{\r\n        pathname: inFeedPage ? `/feed/${id}` : `/profile/orders/${id}`,\r\n        state: { from: location.pathname, background: location },\r\n      }}\r\n    >\r\n      <div className={`${styles.container}`}>\r\n        <div className={`${styles.metadata}`}>\r\n          <p className={`text text_type_digits-default`}>{`#${number}`}</p>\r\n          <p className={`text text_type_main-default text_color_inactive`}>\r\n            {date}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p className={`text text_type_main-medium mb-2`}>{name}</p>\r\n          {statusMessage}\r\n        </div>\r\n\r\n        <div className={`${styles.orderData}`}>\r\n          <ul className={`${styles.ingredients}`}>\r\n            {objectsArray.map(renderPictures)}\r\n            {counter > 0 && (\r\n              <div\r\n                style={{ zIndex: ingredients.length - 5 }}\r\n                className={`${styles.counter} text text_type_main-small`}\r\n              >\r\n                +{counter}\r\n              </div>\r\n            )}\r\n          </ul>\r\n          <div className={`${styles.priceContainer}`}>\r\n            <p className={`${styles.price}text text_type_digits-default`}>\r\n              {totalPrice}\r\n            </p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport Modal from \"../../components/modal/modal\";\r\nimport { OrderCard } from \"../../components/order-card/order-card\";\r\nimport { OrderModal } from \"../../components/order-modal/order-modal\";\r\nimport { ProfileNavBar } from \"../../components/profile-nav/profile-nav\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport {\r\n  orderPopupReset,\r\n  sendOrderToModal,\r\n} from \"../../services/actions/order\";\r\nimport { dispatchLogout, removeServerError } from \"../../services/actions/user\";\r\nimport {\r\n  wsPrivateConnectionClosed,\r\n  wsPrivateConnectionStart,\r\n} from \"../../services/actions/wsUserActions\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { TServerOrder } from \"../../services/utils/types\";\r\nimport { orderExample } from \"../../services/utils/utils\";\r\nimport styles from \"./orders.module.css\";\r\n\r\nexport const Orders: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    user,\r\n    submitGetUserSuccess,\r\n    foundNoTokens,\r\n    submitServerRequest,\r\n    submitLogoutSuccess,\r\n    submitChangeCredentialsSuccess,\r\n  } = useAppSelector((state) => state.user);\r\n\r\n  const { userOrders, total, totalToday, wsConnected, hasError } =\r\n    useAppSelector((state) => state.userFeed);\r\n\r\n  const [loaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(wsPrivateConnectionStart());\r\n    dispatch(getItems());\r\n    return () => {\r\n      dispatch(wsPrivateConnectionClosed);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (submitGetUserSuccess || foundNoTokens) setIsLoaded(true);\r\n    return () => {\r\n      dispatch(removeServerError());\r\n    };\r\n  }, [submitGetUserSuccess, foundNoTokens]);\r\n\r\n  const renderOrderCards = (item: TServerOrder, idx: number) => {\r\n    if (idx < 15)\r\n      return (\r\n        <li\r\n          key={idx}\r\n          onClick={() => dispatch(sendOrderToModal(item))}\r\n          className={styles.cardContainer}\r\n        >\r\n          <OrderCard\r\n            number={item.number}\r\n            time={item.createdAt}\r\n            name={item.name}\r\n            status={item.status}\r\n            ingredients={item.ingredients}\r\n            id={item._id}\r\n            inFeedPage={false}\r\n          />\r\n        </li>\r\n      );\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return loaded && total ? (\r\n    <div className={`${styles.profilePageContainer}`}>\r\n      <div className={`${styles.navContainer}`}>\r\n        <ul className={`${styles.navLinkList}`}>\r\n          <ProfileNavBar />\r\n        </ul>\r\n      </div>\r\n      <div className={`${styles.formContainer}`}>\r\n        <ul className={styles.orderTape}>\r\n          {userOrders.length ? (\r\n            userOrders\r\n              .map((el) => el)\r\n              .reverse()\r\n              .map(renderOrderCards)\r\n          ) : (\r\n            <p className=\"ml-30 mt-20 text text_type_main-medium\">\r\n              Не найдено ни одного заказа!\r\n            </p>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ingredient-details.module.css\";\r\nimport {\r\n  useAppDispatch,\r\n  useAppParams,\r\n  useAppSelector,\r\n} from \"../../services/hooks/hooks\";\r\nimport { TIngredient } from \"../../services/utils/types\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport { Loader } from \"../loader/loader\";\r\n\r\nconst IngredientDetails: React.FC = () => {\r\n  const {\r\n    currentIngredient,\r\n    ingredientItems,\r\n    ingredientItemsRequest,\r\n    ingredientItemsFailed,\r\n  } = useAppSelector((state) => state.ingredients);\r\n  const { id } = useAppParams();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [loaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (ingredientItemsRequest || ingredientItemsFailed) setIsLoaded(true);\r\n  }, [ingredientItemsRequest, ingredientItemsRequest]);\r\n\r\n  useEffect(() => {\r\n    if (ingredientItems.length === 0) dispatch(getItems());\r\n  }, [ingredientItems]);\r\n\r\n  const storeIngredient = ingredientItems.find((item) => item._id === id);\r\n  const modalIngredient = currentIngredient;\r\n\r\n  if (\r\n    ingredientItems.length !== 0 &&\r\n    !ingredientItemsFailed &&\r\n    !ingredientItemsRequest\r\n  ) {\r\n    if (modalIngredient)\r\n      return (\r\n        <>\r\n          <span className={`${styles.title} text text_type_main-large ml-10`}>\r\n            Детали ингридиента\r\n          </span>\r\n          <img\r\n            className={styles.image}\r\n            src={modalIngredient.image_large}\r\n            alt={modalIngredient.name}\r\n          />\r\n          <p className=\"text text_type_main-medium mt-4 mb-8\">\r\n            {modalIngredient.name}\r\n          </p>\r\n          <ul className={styles.nutrition}>\r\n            <li className={`${styles.nutrient} mb-15`}>\r\n              <p className=\"text text_color_inactive text_type_main-small\">\r\n                Калории, ккал{\" \"}\r\n              </p>\r\n              <p className=\"text text_color_inactive text_type_digits-default\">\r\n                {modalIngredient.calories}\r\n              </p>\r\n            </li>\r\n            <li className={`${styles.nutrient} text text_color_inactive`}>\r\n              <p className=\"text text_color_inactive text_type_main-small\">\r\n                Белки, г{\" \"}\r\n              </p>\r\n              <p className=\"text text_color_inactive text_type_digits-default\">\r\n                {modalIngredient.proteins}\r\n              </p>\r\n            </li>\r\n            <li className={`${styles.nutrient} text text_color_inactive`}>\r\n              <p className=\"text text_color_inactive text_type_main-small\">\r\n                Жиры, г{\" \"}\r\n              </p>\r\n              <p className=\"text text_color_inactive text_type_digits-default\">\r\n                {modalIngredient.fat}\r\n              </p>\r\n            </li>\r\n            <li className={`${styles.nutrient} text text_color_inactive`}>\r\n              <p className=\"text text_color_inactive text_type_main-small\">\r\n                Углеводы, г{\" \"}\r\n              </p>\r\n              <p className=\"text text_color_inactive text_type_digits-default\">\r\n                {modalIngredient.carbohydrates}\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </>\r\n      );\r\n    else if (storeIngredient)\r\n      if (loaded) {\r\n        return (\r\n          <div className={styles.pageContainer}>\r\n            <span className={`${styles.pageTitle} text text_type_main-large`}>\r\n              Детали ингридиента\r\n            </span>\r\n            <img\r\n              className={styles.image}\r\n              src={storeIngredient?.image_large}\r\n              alt={storeIngredient?.name}\r\n            />\r\n            <p className=\"text text_type_main-medium mt-4 mb-8\">\r\n              {storeIngredient?.name}\r\n            </p>\r\n            <ul className={styles.nutrition}>\r\n              <li className={`${styles.nutrient} mb-15`}>\r\n                <p className=\"text text_color_inactive text_type_main-small\">\r\n                  Калории, ккал{\" \"}\r\n                </p>\r\n                <p className=\"text text_color_inactive text_type_digits-default\">\r\n                  {storeIngredient?.calories}\r\n                </p>\r\n              </li>\r\n              <li className={`${styles.nutrient} text text_color_inactive`}>\r\n                <p className=\"text text_color_inactive text_type_main-small\">\r\n                  Белки, г{\" \"}\r\n                </p>\r\n                <p className=\"text text_color_inactive text_type_digits-default\">\r\n                  {storeIngredient?.proteins}\r\n                </p>\r\n              </li>\r\n              <li className={`${styles.nutrient} text text_color_inactive`}>\r\n                <p className=\"text text_color_inactive text_type_main-small\">\r\n                  Жиры, г{\" \"}\r\n                </p>\r\n                <p className=\"text text_color_inactive text_type_digits-default\">\r\n                  {storeIngredient?.fat}\r\n                </p>\r\n              </li>\r\n              <li className={`${styles.nutrient} text text_color_inactive`}>\r\n                <p className=\"text text_color_inactive text_type_main-small\">\r\n                  Углеводы, г{\" \"}\r\n                </p>\r\n                <p className=\"text text_color_inactive text_type_digits-default\">\r\n                  {storeIngredient?.carbohydrates}\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      } else return <Loader />;\r\n  }\r\n  return <Loader />;\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import IngredientDetails from \"../../components/ingredient-details/ingredient-details\";\r\nimport styles from \"./ingredient-page.module.css\";\r\n\r\nexport const IngredientPage = () => {\r\n  return (\r\n      <div className={styles.container}>\r\n        <IngredientDetails />\r\n      </div>\r\n  );\r\n};\r\n","import { wsServerRespond } from \"../utils/types\";\r\n\r\nexport const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\r\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" =\r\n  \"WS_CONNECTION_SUCCESS\";\r\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\r\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" =\r\n  \"WS_CONNECTION_CLOSED\";\r\nexport const WS_GET_MESSAGE: \"WS_GET_MESSAGE\" = \"WS_GET_MESSAGE\";\r\nexport const WS_SEND_MESSAGE: \"WS_SEND_MESSAGE\" = \"WS_SEND_MESSAGE\";\r\n\r\nexport interface IwsConnectionStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IwsConnectionSuccess {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IwsConnectionError {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\n\r\nexport interface IwsConnectionClosed {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IwsGetMessage {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: wsServerRespond;\r\n}\r\n\r\nexport interface IwsSendMessage {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n  readonly payload: any;\r\n}\r\n\r\nexport type TSocketActions =\r\n  | IwsConnectionStart\r\n  | IwsConnectionSuccess\r\n  | IwsConnectionError\r\n  | IwsConnectionClosed\r\n  | IwsSendMessage\r\n  | IwsGetMessage;\r\n\r\nexport const wsConnectionStart = (): IwsConnectionStart => ({\r\n  type: WS_CONNECTION_START,\r\n});\r\n\r\nexport const wsConnectionSuccess = (): IwsConnectionSuccess => ({\r\n  type: WS_CONNECTION_SUCCESS,\r\n});\r\n\r\nexport const wsConnectionError = (): IwsConnectionError => ({\r\n  type: WS_CONNECTION_ERROR,\r\n});\r\n\r\nexport const wsConnectionClosed = (): IwsConnectionClosed => ({\r\n  type: WS_CONNECTION_CLOSED,\r\n});\r\n\r\nexport const wsGetMessage = (message: any): IwsGetMessage => ({\r\n  type: WS_GET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const wsSendMessage = (message: any): IwsSendMessage => ({\r\n  type: WS_SEND_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const vanillaActionsBook = {\r\n  startConnectionConst: WS_CONNECTION_START,\r\n  sendMessageConst: WS_SEND_MESSAGE,\r\n  wsStartConnection: wsConnectionStart,\r\n  wsSendMessage: wsSendMessage,\r\n  wsOnOpen: wsConnectionSuccess,\r\n  wsOnClose: wsConnectionClosed,\r\n  wsOnError: wsConnectionError,\r\n  wsGetMessage: wsGetMessage\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getUserOrders } from \"../../components/api/api\";\r\nimport { Loader } from \"../../components/loader/loader\";\r\nimport Modal from \"../../components/modal/modal\";\r\nimport { OrderCard } from \"../../components/order-card/order-card\";\r\nimport { OrderModal } from \"../../components/order-modal/order-modal\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport {\r\n  orderPopupReset,\r\n  sendOrderToModal,\r\n} from \"../../services/actions/order\";\r\nimport {\r\n  wsConnectionClosed,\r\n  wsConnectionStart,\r\n} from \"../../services/actions/wsVanillaActions\";\r\nimport { useAppDispatch, useAppSelector } from \"../../services/hooks/hooks\";\r\nimport { TServerOrder } from \"../../services/utils/types\";\r\nimport { orderExample } from \"../../services/utils/utils\";\r\nimport styles from \"./feed.module.css\";\r\n\r\nexport const FeedPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const { orders, total, totalToday, wsConnected, hasError } = useAppSelector(\r\n    (state) => state.feed\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(wsConnectionStart());\r\n    dispatch(getItems());\r\n    return () => {\r\n      dispatch(wsConnectionClosed());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const renderOrderCards = (item: TServerOrder, idx: number) => {\r\n    if (idx < 10)\r\n      return (\r\n        <li key={idx} onClick={() => dispatch(sendOrderToModal(item))}>\r\n          <OrderCard\r\n            number={item.number}\r\n            time={item.createdAt}\r\n            name={item.name}\r\n            ingredients={item.ingredients}\r\n            id={item._id}\r\n            inFeedPage={true}\r\n          />\r\n        </li>\r\n      );\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const renderOrderNumbers = (item: TServerOrder, idx: number) => {\r\n    if (idx < 10)\r\n      return (\r\n        <li key={idx} className={styles.listItem}>\r\n          {item.number}\r\n        </li>\r\n      );\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (wsConnected && !hasError) {\r\n    return (\r\n      <>\r\n        <div className={`${styles.page}`}>\r\n          <h1\r\n            className={`${styles.title} text text_type_main-large mt-10 mb-5`}\r\n          >\r\n            Лента заказов\r\n          </h1>\r\n          <div className={`${styles.sections}`}>\r\n            <ul className={`${styles.orderTape}`}>\r\n              {orders.map(renderOrderCards)}\r\n            </ul>\r\n            <section className={`${styles.orderTable}`}>\r\n              <div className={`${styles.orderInfoContainer}`}>\r\n                <div className={`${styles.orderInfo}`}>\r\n                  <p\r\n                    className={`${styles.orderTitle} text text_type_main-medium`}\r\n                  >\r\n                    Готовы:\r\n                  </p>\r\n                  <ul\r\n                    className={`${styles.orderList} ${styles.activeList} text text text_type_digits-default`}\r\n                  >\r\n                    {orders.map(renderOrderNumbers)}\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className={`${styles.orderInfo}`}>\r\n                  <p\r\n                    className={`${styles.orderTitle} text text_type_main-medium`}\r\n                  >\r\n                    В работе:\r\n                  </p>\r\n                  <ul\r\n                    className={`${styles.orderList} text text text_type_digits-default`}\r\n                  >\r\n                    {orders.map(renderOrderNumbers)}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className={`${styles.doneContainer}`}>\r\n                <p\r\n                  className={`${styles.orderTitle} text text_type_main-medium`}\r\n                >\r\n                  Выполнено за все время:\r\n                </p>\r\n                <span\r\n                  className={`${styles.digits} text text_type_digits-large`}\r\n                >\r\n                  {total}\r\n                </span>\r\n              </div>\r\n              <div className={`${styles.doneContainer}`}>\r\n                <p\r\n                  className={`${styles.orderTitle} text text_type_main-medium`}\r\n                >\r\n                  Выполнено за сегодня:\r\n                </p>\r\n                <span\r\n                  className={`${styles.digits} text text_type_digits-large`}\r\n                >\r\n                  {totalToday}\r\n                </span>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n        );\r\n      </>\r\n    );\r\n  } else return <Loader />;\r\n};\r\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport {\r\n  wsConnectionClosed,\r\n  wsConnectionStart,\r\n} from \"../../services/actions/wsVanillaActions\";\r\nimport {\r\n  useAppDispatch,\r\n  useAppParams,\r\n  useAppSelector,\r\n} from \"../../services/hooks/hooks\";\r\nimport {\r\n  TIngredient,\r\n  TIngWithCount,\r\n  TServerOrder,\r\n} from \"../../services/utils/types\";\r\nimport { parseTime } from \"../../services/utils/utils\";\r\nimport { Loader } from \"../loader/loader\";\r\nimport styles from \"./order-modal.module.css\";\r\n\r\nexport const OrderModal: React.FC = () => {\r\n  const { modalOrder } = useAppSelector((state) => state.order);\r\n  const { ingredientItems } = useAppSelector((state) => state.ingredients);\r\n  const { orders } = useAppSelector((state) => state.feed);\r\n  const { userOrders } = useAppSelector((state) => state.userFeed);\r\n\r\n  const objectsArray: TIngWithCount[] = [];\r\n\r\n  const makeObjectArray = (serverOrder: TServerOrder) => {\r\n    serverOrder.ingredients.map((ingID, idx, arr) => {\r\n      ingredientItems.forEach((el) => {\r\n        if (ingID === el._id)\r\n          objectsArray.push({\r\n            ...el,\r\n            count: arr.reduce((count, item) => {\r\n              if (item === el._id) {\r\n                return count + 1;\r\n              }\r\n              return count;\r\n            }, 0),\r\n          });\r\n      });\r\n    });\r\n  };\r\n\r\n  const makeUnique = (array: any[]) => {\r\n    return array.filter(\r\n      (e, i) => array.findIndex((a) => a._id === e._id) === i\r\n    );\r\n  };\r\n\r\n  const renderIngredient = (el: TIngWithCount, idx: number) => {\r\n    return (\r\n      <li key={idx}>\r\n        <div className={`${styles.ingredientContainer}`}>\r\n          <div className={`${styles.tagContainer}`}>\r\n            <div className={`${styles.pictureContainer}`}>\r\n              <img\r\n                className={`${styles.picture}`}\r\n                src={el.image_mobile}\r\n                alt=\"pic\"\r\n              />\r\n            </div>\r\n            <p className={`text text_type_main-default ml-4 mr-4`}>{el.name}</p>\r\n          </div>\r\n          <div className={`${styles.priceContainer}`}>\r\n            <p className=\"text text_type_digits-default\">{`${el.count} x ${el.price}`}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const { id } = useAppParams();\r\n\r\n  let statusMessage;\r\n  switch (modalOrder?.status) {\r\n    case \"pending\": {\r\n      statusMessage = <p className={`text text_type_main-small`}>Готовится</p>;\r\n      break;\r\n    }\r\n    case \"done\": {\r\n      statusMessage = (\r\n        <p style={{ color: \"#00CCCC\" }} className={`text text_type_main-small`}>\r\n          Выполнен\r\n        </p>\r\n      );\r\n      break;\r\n    }\r\n    case \"created\": {\r\n      statusMessage = <p className={`text text_type_main-small`}>Создан</p>;\r\n      break;\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const orderFromModal = modalOrder;\r\n  const orderFromStore =\r\n    orders.find((item) => item._id === id) ||\r\n    userOrders.find((item) => item._id === id);\r\n\r\n  if (orderFromModal) {\r\n    makeObjectArray(orderFromModal);\r\n\r\n    const totalPrice = objectsArray.reduce((sum, el) => sum + el.price, 0);\r\n    const date = parseTime(orderFromModal.createdAt);\r\n\r\n    return (\r\n      <div className={`${styles.container}`}>\r\n        <span\r\n          className={`${styles.number} text text_type_digits-default mb-10`}\r\n        >\r\n          {`#${orderFromModal.number}`}\r\n        </span>\r\n        <h1 className={`${styles.name} text text_type_main-medium mb-3`}>\r\n          {orderFromModal.name}\r\n        </h1>\r\n        {statusMessage}\r\n        <p className=\"text text_type_main-medium mt-15 mb-6\">Состав</p>\r\n        <ul className={`${styles.ingredientsList}`}>\r\n          {makeUnique(objectsArray).map(renderIngredient)}\r\n        </ul>\r\n        <div className={`${styles.footer} mt-10`}>\r\n          <p className={`text text_type_main-default text_color_inactive`}>\r\n            {date}\r\n          </p>\r\n          <div className={`${styles.priceContainer}`}>\r\n            <p className=\"text text_type_digits-default\">{totalPrice}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (orderFromStore) {\r\n    makeObjectArray(orderFromStore);\r\n\r\n    const totalPrice = objectsArray.reduce((sum, el) => sum + el.price, 0);\r\n    const date = parseTime(orderFromStore.createdAt);\r\n\r\n    return (\r\n      <div className={`${styles.container}`}>\r\n        <span\r\n          className={`${styles.number} text text_type_digits-default mb-10`}\r\n        >\r\n          {`#${orderFromStore.number}`}\r\n        </span>\r\n        <h1 className={`${styles.name} text text_type_main-medium mb-3`}>\r\n          {orderFromStore.name}\r\n        </h1>\r\n        {statusMessage}\r\n        <p className=\"text text_type_main-medium mt-15 mb-6\">Состав</p>\r\n        <ul className={`${styles.ingredientsList}`}>\r\n          {makeUnique(objectsArray).map(renderIngredient)}\r\n        </ul>\r\n        <div className={`${styles.footer} mt-10`}>\r\n          <p className={`text text_type_main-default text_color_inactive`}>\r\n            {date}\r\n          </p>\r\n          <div className={`${styles.priceContainer}`}>\r\n            <p className=\"text text_type_digits-default\">{totalPrice}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <Loader />;\r\n};\r\n","import styles from \"./order-page.module.css\";\r\nimport { OrderModal } from \"../../components/order-modal/order-modal\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../../services/hooks/hooks\";\r\nimport {\r\n  wsConnectionClosed,\r\n  wsConnectionStart,\r\n} from \"../../services/actions/wsVanillaActions\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\n\r\nexport const OrderPage = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(wsConnectionStart());\r\n    dispatch(getItems());\r\n    return () => {\r\n      dispatch(wsConnectionClosed());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <OrderModal />\r\n    </div>\r\n  );\r\n};\r\n","import styles from \"./user-order-page.module.css\";\r\nimport { OrderModal } from \"../../components/order-modal/order-modal\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../../services/hooks/hooks\";\r\nimport {\r\n  wsConnectionClosed,\r\n  wsConnectionStart,\r\n} from \"../../services/actions/wsVanillaActions\";\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport { wsPrivateConnectionClosed, wsPrivateConnectionStart } from \"../../services/actions/wsUserActions\";\r\n\r\nexport const UserOrderPage = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(wsPrivateConnectionStart());\r\n    dispatch(getItems());\r\n    return () => {\r\n      dispatch(wsPrivateConnectionClosed);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <OrderModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./app.module.css\";\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { HomePage } from \"../../pages/home/home\";\r\nimport { LoginPage } from \"../../pages/login/login\";\r\nimport { RegisterPage } from \"../../pages/register/register\";\r\nimport { ForgotPasswordPage } from \"../../pages/forgot-password/forgot-password\";\r\nimport { ResetPasswordPage } from \"../../pages/reset-password/reset-password\";\r\nimport { ProfilePage } from \"../../pages/profile/profile\";\r\nimport { ProtectedRoute } from \"../HOC/protected-route\";\r\nimport { Orders } from \"../../pages/orders/orders\";\r\nimport { IngredientPage } from \"../../pages/ingredient-page/ingredient-page\";\r\nimport { TLocationState } from \"../../services/utils/interfaces\";\r\nimport { FeedPage } from \"../../pages/feed/feed\";\r\nimport { OrderPage } from \"../../pages/order-page/order-page\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport { useAppDispatch } from \"../../services/hooks/hooks\";\r\nimport { resetCurrentIngredient } from \"../../services/actions/ingredients\";\r\nimport { OrderModal } from \"../order-modal/order-modal\";\r\nimport { UserOrderPage } from \"../../pages/user-order-page/user-order-page\";\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation<TLocationState>();\r\n  const history = useHistory();\r\n  const isPush = history.action === \"PUSH\";\r\n  const background = isPush && location.state && location.state.background;\r\n\r\n  const closeModal = () => {\r\n    dispatch(resetCurrentIngredient());\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <Switch location={background || location}>\r\n        <Route path=\"/\" exact={true}>\r\n          <HomePage />\r\n        </Route>\r\n        <Route path=\"/login\" exact={true}>\r\n          <LoginPage />\r\n        </Route>\r\n        <Route path=\"/register\" exact={true}>\r\n          <RegisterPage />\r\n        </Route>\r\n        <Route path=\"/forgot-password\" exact={true}>\r\n          <ForgotPasswordPage />\r\n        </Route>\r\n        <Route path=\"/reset-password\" exact={true}>\r\n          <ResetPasswordPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile\" exact={true}>\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/feed\" exact={true}>\r\n          <FeedPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n          <Orders />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n          <UserOrderPage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/ingredients/:id\" exact={true}>\r\n          <IngredientPage />\r\n        </Route>\r\n        <Route path=\"/feed/:id\" exact={true}>\r\n          <OrderPage />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {background && (\r\n        <Route path=\"/ingredients/:id\">\r\n          <Modal onClose={closeModal}>\r\n            <IngredientDetails />\r\n          </Modal>\r\n        </Route>\r\n      )}\r\n\r\n      {background && (\r\n        <Route path=\"/feed/:id\">\r\n          <Modal onClose={closeModal}>\r\n            <OrderModal />\r\n          </Modal>\r\n        </Route>\r\n      )}\r\n\r\n      {background && (\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n          <Modal onClose={closeModal}>\r\n            <OrderModal />\r\n          </Modal>\r\n        </ProtectedRoute>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { TActionsBook } from \"./../utils/types\";\r\nimport { AnyAction, MiddlewareAPI } from \"redux\";\r\nimport { getCookie } from \"../utils/utils\";\r\n\r\nexport const socketMiddleware = (\r\n  wsUrl: string,\r\n  actionBook: TActionsBook,\r\n  connectionType: \"private\" | \"vanilla\"\r\n) => {\r\n  return (store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null;\r\n    let connected = false;\r\n\r\n    return (next: (i: AnyAction) => void) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const token =\r\n        connectionType === \"private\" ? getCookie(\"accessToken\") : null;\r\n\r\n      if (type === actionBook.startConnectionConst) {\r\n        if (connectionType === \"vanilla\") socket = new WebSocket(`${wsUrl}`);\r\n        else if (connectionType === \"private\")\r\n          socket = new WebSocket(`${wsUrl}?token=${token}`);\r\n      }\r\n      if (socket) {\r\n        connected = true;\r\n\r\n        socket.onopen = () => {\r\n          dispatch(actionBook.wsOnOpen());\r\n        };\r\n        socket.onerror = () => {\r\n          dispatch(actionBook.wsOnError());\r\n        };\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          dispatch(actionBook.wsGetMessage(restParsedData));\r\n        };\r\n\r\n        socket.onclose = (event) => {\r\n          dispatch(actionBook.wsOnClose());\r\n          console.log(\"socket closed with code: \", event.code);\r\n          if (!connected) {\r\n            setTimeout(() => {\r\n              dispatch(actionBook.wsStartConnection());\r\n            }, 1000);\r\n          }\r\n        };\r\n\r\n        if (type === actionBook.sendMessageConst) {\r\n          const message = { ...payload };\r\n          socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import {\r\n  GET_ITEMS_REQUEST,\r\n  GET_ITEMS_SUCCESS,\r\n  GET_ITEMS_FAILED,\r\n  SEND_TO_MODAL,\r\n  RESET_CURRENT_INGREDIENT,\r\n  ADD_TO_CONSTRUCTOR,\r\n  REMOVE_FROM_CONSTRUCTOR,\r\n  REPLACE_BUN,\r\n  MOVE_ITEM,\r\n  RECALCULATE_PRICE,\r\n  TIngredientActions,\r\n  RESET_CONSTRUCTOR,\r\n} from \"../actions/ingredients\";\r\n\r\nimport { burgerExample } from \"../utils/utils\";\r\nimport { TIngredient } from \"../utils/types\";\r\n\r\ntype TIngredientsState = {\r\n  ingredientItems: readonly TIngredient[];\r\n  ingredientItemsRequest: boolean;\r\n  ingredientItemsFailed: boolean;\r\n  ingredientItemsError: number | null;\r\n\r\n  constructorItems: readonly TIngredient[];\r\n\r\n  totalPrice: number;\r\n\r\n  currentIngredient: TIngredient | null;\r\n\r\n  currentTab: \"one\" | \"two\" | \"three\";\r\n};\r\n\r\nconst initialState: TIngredientsState = {\r\n  ingredientItems: [],\r\n  ingredientItemsRequest: false,\r\n  ingredientItemsFailed: false,\r\n  ingredientItemsError: null,\r\n\r\n  constructorItems: [],\r\n\r\n  totalPrice: 0,\r\n\r\n  currentIngredient: null,\r\n\r\n  currentTab: \"one\",\r\n};\r\n\r\nexport const ingredientsReducer = (\r\n  state = initialState,\r\n  action: TIngredientActions\r\n): TIngredientsState => {\r\n  switch (action.type) {\r\n    case GET_ITEMS_REQUEST: {\r\n      return { ...state, ingredientItemsRequest: true };\r\n    }\r\n    case GET_ITEMS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredientItemsFailed: false,\r\n        ingredientItems: action.items,\r\n        ingredientItemsRequest: false,\r\n      };\r\n    }\r\n    case GET_ITEMS_FAILED: {\r\n      return {\r\n        ...initialState,\r\n        ingredientItemsFailed: true,\r\n        ingredientItemsError: action.error,\r\n      };\r\n    }\r\n    case SEND_TO_MODAL: {\r\n      return {\r\n        ...state,\r\n        currentIngredient: JSON.parse(\r\n          JSON.stringify(state.ingredientItems)\r\n        ).find((item: TIngredient) => item._id === action.id),\r\n      };\r\n    }\r\n    case RESET_CURRENT_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        currentIngredient: null,\r\n      };\r\n    }\r\n    case ADD_TO_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructorItems: [\r\n          ...state.constructorItems,\r\n          [...state.ingredientItems].find((item) => item._id === action.id)!,\r\n        ],\r\n      };\r\n    }\r\n    case RECALCULATE_PRICE: {\r\n      return {\r\n        ...state,\r\n        totalPrice: state.constructorItems.reduce(\r\n          (sum, el) => sum + el.price,\r\n          0\r\n        ),\r\n      };\r\n    }\r\n    case REPLACE_BUN: {\r\n      return {\r\n        ...state,\r\n        constructorItems:\r\n          state.constructorItems.length &&\r\n          state.constructorItems[0].type === \"bun\"\r\n            ? [\r\n                state.ingredientItems.find((item) => item._id === action.id)!,\r\n              ].concat(state.constructorItems.slice(1))\r\n            : [\r\n                state.ingredientItems.find((item) => item._id === action.id)!,\r\n              ].concat(state.constructorItems),\r\n      };\r\n    }\r\n    case MOVE_ITEM: {\r\n      return {\r\n        ...state,\r\n        constructorItems: [...state.constructorItems].map((item, idx) => {\r\n          if (idx === action.dragIndex) {\r\n            return [...state.constructorItems].find(\r\n              (item, idx) => idx === action.hoverIndex\r\n            )!;\r\n          } else if (idx === action.hoverIndex) {\r\n            return [...state.constructorItems].find(\r\n              (item, idx) => idx === action.dragIndex\r\n            )!;\r\n          } else return item;\r\n        }),\r\n      };\r\n    }\r\n    case REMOVE_FROM_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructorItems: [...state.constructorItems].filter(\r\n          (item, index) => index !== action.index\r\n        ),\r\n      };\r\n    }\r\n    case RESET_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructorItems: []\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { TOrder, TOrderModalProps, TServerOrder } from \"../utils/types\";\r\nimport {\r\n  SUBMIT_ORDER_REQUEST,\r\n  SUBMIT_ORDER_FAILED,\r\n  SUBMIT_ORDER_SUCCESS,\r\n  ORDER_RESET,\r\n  TOrderActions,\r\n  SEND_ORDER_TO_MODAL,\r\n  RESET_ORDER_POPUP,\r\n} from \"../actions/order\";\r\n\r\ntype TOrderState = {\r\n  order: TOrder | null;\r\n  modalOrder: TServerOrder | null;\r\n  submitOrderRequest: boolean;\r\n  submitOrderFailed: boolean;\r\n  submitOrderSuccess: boolean;\r\n  submitOrderError: number | null;\r\n};\r\n\r\nconst initialState: TOrderState = {\r\n  order: null,\r\n  modalOrder: null,\r\n  submitOrderRequest: false,\r\n  submitOrderFailed: false,\r\n  submitOrderSuccess: false,\r\n  submitOrderError: null,\r\n};\r\n\r\nexport const orderReducer = (\r\n  state = initialState,\r\n  action: TOrderActions\r\n): TOrderState => {\r\n  switch (action.type) {\r\n    case SUBMIT_ORDER_REQUEST: {\r\n      return { ...state, submitOrderRequest: true };\r\n    }\r\n    case SUBMIT_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitOrderFailed: false,\r\n        order: action.order,\r\n        submitOrderRequest: false,\r\n        submitOrderSuccess: true,\r\n      };\r\n    }\r\n    case SEND_ORDER_TO_MODAL: {\r\n      return {\r\n        ...state,\r\n        modalOrder: action.order,\r\n      };\r\n    }\r\n    case SUBMIT_ORDER_FAILED: {\r\n      return {\r\n        ...initialState,\r\n        submitOrderFailed: true,\r\n        submitOrderError: action.error,\r\n      };\r\n    }\r\n    case ORDER_RESET: {\r\n      return {\r\n        ...state,\r\n        submitOrderSuccess: false,\r\n      };\r\n    }\r\n    case RESET_ORDER_POPUP: {\r\n      return {\r\n        ...state,\r\n        modalOrder: null,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  SUBMIT_CAN_RESET_PWD,\r\n  NO_TOKENS,\r\n  SET_USER,\r\n  SUBMIT_CHANGE_CREDENTIALS_SUCCESS,\r\n  SUBMIT_GET_USER_SUCCESS,\r\n  SUBMIT_LOGOUT_SUCCESS,\r\n  SUBMIT_PWD_RESET_SUCCESS,\r\n  SUBMIT_SERVER_FAILED,\r\n  SUBMIT_SERVER_REQUEST,\r\n  SUBMIT_SIGN_IN_SUCCESS,\r\n  SUBMIT_UPDATE_TOKENS_SUCCESS,\r\n  SUBMIT_USER_EMAIL_SUCCESS,\r\n  TUserActions,\r\n  SUBMIT_CANNOT_RESET_PWD,\r\n  REMOVE_SERVER_ERROR,\r\n} from \"../actions/user\";\r\nimport { TUser } from \"../utils/types\";\r\n\r\nexport type TUserState = {\r\n  submitServerRequest: boolean;\r\n  submitServerFailed: boolean;\r\n  submitServerError: number | null;\r\n  submitUserEmailSuccess: boolean;\r\n  submitLogoutSuccess: boolean;\r\n  submitSignInSuccess: boolean;\r\n  submitUpdateTokensSuccess: boolean;\r\n  submitGetUserSuccess: boolean;\r\n  submitChangeCredentialsSuccess: boolean;\r\n  submitPwdResetSuccess: boolean;\r\n  canResetPwd: boolean;\r\n  foundNoTokens: boolean;\r\n  user: TUser | null;\r\n};\r\n\r\nconst initialState: TUserState = {\r\n  submitServerRequest: false,\r\n  submitServerFailed: false,\r\n  submitServerError: null,\r\n  submitUpdateTokensSuccess: false,\r\n  submitLogoutSuccess: false,\r\n  submitUserEmailSuccess: false,\r\n  submitSignInSuccess: false,\r\n  submitGetUserSuccess: false,\r\n  submitChangeCredentialsSuccess: false,\r\n  submitPwdResetSuccess: false,\r\n  foundNoTokens: false,\r\n  canResetPwd: false,\r\n  user: null,\r\n};\r\n\r\nexport const userReducer = (\r\n  state = initialState,\r\n  action: TUserActions\r\n): TUserState => {\r\n  switch (action.type) {\r\n    case SUBMIT_SERVER_REQUEST: {\r\n      return { ...state, submitServerRequest: true, foundNoTokens: false };\r\n    }\r\n    case SUBMIT_USER_EMAIL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n        submitServerRequest: false,\r\n        submitUserEmailSuccess: true,\r\n      };\r\n    }\r\n    case SUBMIT_SERVER_FAILED: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: true,\r\n        submitServerError: action.error,\r\n      };\r\n    }\r\n    case SUBMIT_PWD_RESET_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n        submitServerRequest: false,\r\n        submitPwdResetSuccess: true,\r\n      };\r\n    }\r\n    case SET_USER: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          email: action.user.email,\r\n          name: action.user.name,\r\n        },\r\n      };\r\n    }\r\n    case SUBMIT_SIGN_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n        submitServerRequest: false,\r\n        submitSignInSuccess: true,\r\n        submitLogoutSuccess: false,\r\n      };\r\n    }\r\n    case SUBMIT_UPDATE_TOKENS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n        submitServerRequest: false,\r\n        submitUpdateTokensSuccess: true,\r\n      };\r\n    }\r\n    case SUBMIT_LOGOUT_SUCCESS: {\r\n      return {\r\n        ...initialState\r\n      };\r\n    }\r\n    case SUBMIT_CHANGE_CREDENTIALS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n        submitServerRequest: false,\r\n        submitChangeCredentialsSuccess: true,\r\n      };\r\n    }\r\n    case SUBMIT_GET_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n        submitServerRequest: false,\r\n        submitGetUserSuccess: true,\r\n      };\r\n    }\r\n    case SUBMIT_CAN_RESET_PWD: {\r\n      return {\r\n        ...state,\r\n        canResetPwd: true,\r\n      }\r\n    }\r\n    case SUBMIT_CANNOT_RESET_PWD: {\r\n      return {\r\n        ...state,\r\n        canResetPwd: false,\r\n        submitPwdResetSuccess: false,\r\n      }\r\n    }\r\n    case NO_TOKENS: {\r\n      return {\r\n        ...state,\r\n        foundNoTokens: true,\r\n      };\r\n    }\r\n    case REMOVE_SERVER_ERROR: {\r\n      return {\r\n        ...state,\r\n        submitServerFailed: false,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  TSocketActions,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_GET_MESSAGE,\r\n} from \"../actions/wsVanillaActions\";\r\nimport { TOrder, TServerOrder } from \"../utils/types\";\r\n\r\ninterface IZeroState {\r\n  orders: TServerOrder[];\r\n  total: number | null;\r\n  totalToday: number | null;\r\n  wsConnected: boolean;\r\n  hasError: boolean;\r\n}\r\n\r\nexport const initialState: IZeroState = {\r\n  orders: [],\r\n  total: null,\r\n  totalToday: null,\r\n  wsConnected: false,\r\n  hasError: false,\r\n};\r\n\r\nexport const wsReducer = (state = initialState, action: TSocketActions) => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        hasError: false,\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        hasError: true,\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...initialState,\r\n      };\r\n\r\n    case WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TSocketPrivateActions,\r\n  WS_GET_PRIVATE_MESSAGE,\r\n  WS_PRIVATE_CONNECTION_CLOSED,\r\n  WS_PRIVATE_CONNECTION_ERROR,\r\n  WS_PRIVATE_CONNECTION_SUCCESS,\r\n} from \"../actions/wsUserActions\";\r\nimport { TOrder, TServerOrder } from \"../utils/types\";\r\n\r\ninterface IZeroState {\r\n  userOrders: TServerOrder[];\r\n  total: number | null;\r\n  totalToday: number | null;\r\n  wsConnected: boolean;\r\n  hasError: boolean;\r\n}\r\n\r\nexport const initialState: IZeroState = {\r\n  userOrders: [],\r\n  total: null,\r\n  totalToday: null,\r\n  wsConnected: false,\r\n  hasError: false,\r\n};\r\n\r\nexport const wsUserReducer = (\r\n  state = initialState,\r\n  action: TSocketPrivateActions\r\n) => {\r\n  switch (action.type) {\r\n    case WS_PRIVATE_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        hasError: false,\r\n      };\r\n\r\n    case WS_PRIVATE_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        hasError: true,\r\n      };\r\n\r\n    case WS_PRIVATE_CONNECTION_CLOSED:\r\n      return {\r\n        ...initialState,\r\n      };\r\n\r\n    case WS_GET_PRIVATE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        userOrders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { ingredientsReducer } from \"./ingredients\";\r\nimport { orderReducer } from \"./order\";\r\nimport { userReducer } from \"./user\";\r\nimport { wsReducer } from \"./wsVanillaReducer\";\r\nimport { wsUserReducer } from \"./wsUserReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredients: ingredientsReducer,\r\n  order: orderReducer,\r\n  user: userReducer,\r\n  feed: wsReducer,\r\n  userFeed: wsUserReducer\r\n});\r\n","import { userActionsBook } from \"./actions/wsUserActions\";\r\nimport { WS_URL, WS_URL_PRIVATE } from \"./utils/utils\";\r\nimport { socketMiddleware } from \"./socketMiddleware/socket-middleware\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport { vanillaActionsBook } from \"./actions/wsVanillaActions\";\r\n\r\nconst composeEnhancers =\r\n  ((window as any)[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] as typeof compose) ||\r\n  compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(\r\n    thunk,\r\n    socketMiddleware(WS_URL, vanillaActionsBook, \"vanilla\"),\r\n    socketMiddleware(WS_URL_PRIVATE, userActionsBook, \"private\")\r\n  )\r\n);\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/app\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { Action, ActionCreator } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { TIngredientActions } from \"./services/actions/ingredients\";\nimport { TOrderActions } from \"./services/actions/order\";\nimport { store } from \"./services/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nexport type RootState = ReturnType<typeof store.getState>;\ntype TApplicationActions = TIngredientActions | TOrderActions;\nexport type AppThunk<TReturn = void> = ActionCreator<\n  ThunkAction<TReturn, Action, RootState, TApplicationActions>\n>;\nexport type AppDispatch = typeof store.dispatch;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename=\"react-burger\">\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient_card__26TBS\",\"price\":\"ingredient_price__Tlpwn\",\"description\":\"ingredient_description__3dHAw\",\"cardContainer\":\"ingredient_cardContainer__3O59I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"reset-password_form__yw5zw\",\"formContainer\":\"reset-password_formContainer__2J4-9\",\"inputContainer\":\"reset-password_inputContainer__22rjb\",\"linkContainer\":\"reset-password_linkContainer__3sDkn\",\"link\":\"reset-password_link__DUOwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageContainer\":\"orders_profilePageContainer__1K1pY\",\"navContainer\":\"orders_navContainer__2LwKo\",\"formContainer\":\"orders_formContainer__27uqC\",\"navLinkList\":\"orders_navLinkList__2Grcb\",\"inputContainer\":\"orders_inputContainer___HJjX\",\"linkContainer\":\"orders_linkContainer__2rqt4\",\"logoutButton\":\"orders_logoutButton__3Kxun\",\"comment\":\"orders_comment__2o9qc\",\"buttonsContainer\":\"orders_buttonsContainer__2aSoi\",\"button\":\"orders_button__V7UL5\",\"cardContainer\":\"orders_cardContainer__1dEjA\",\"orderTape\":\"orders_orderTape__2iYh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forgot-password_form__1vDPl\",\"formContainer\":\"forgot-password_formContainer__13e7Z\",\"inputContainer\":\"forgot-password_inputContainer__3QiU9\",\"linkContainer\":\"forgot-password_linkContainer__2MdIA\",\"link\":\"forgot-password_link__3evoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"profile-nav_link__19UH9\",\"activeLink\":\"profile-nav_activeLink__1BC_X\"};"],"sourceRoot":""}